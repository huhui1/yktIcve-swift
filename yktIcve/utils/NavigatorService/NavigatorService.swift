//
//  NavigatorService.swift
//  yktIcve
//
//  Created by 尤增强 on 2018/8/22.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import RxSwift
/**
 Navigation service
 对页面跳转进行解耦
 */
class NavigatorService : BaseService{

    static let publishSubject = PublishSubject<Publishable>()
    static let disposeBag = DisposeBag.init()



    init() {

    }

    static func publish(_ element: Publishable) {
        publishSubject.onNext(element)
    }



    // 导航到视图
    class func navigateToPage(_ viewCon:UIViewController, animated:Bool) -> () {
        let rootCon = UIApplication.shared.keyWindow?.rootViewController
        if let tabCon = rootCon as? UITabBarController {
            if let selectedCon = tabCon.selectedViewController as? UINavigationController{
                selectedCon.pushViewController(viewCon, animated: animated)
            }else{
                debugPrint("Current ViewController is not a NavigationController, can not push to viewCon:\(viewCon)")
            }
        }else if let navigationCon = UIApplication.shared.keyWindow?.rootViewController as? UINavigationController{
            navigationCon.navigationController?.pushViewController(viewCon, animated: animated)
        }else {
            debugPrint("Current ViewController is not a NavigationController, can not push to viewCon:\(viewCon)")
            let newNavigationCon = UINavigationController.init(rootViewController: rootCon!)
            newNavigationCon.navigationController?.pushViewController(viewCon, animated: animated)
        }
    }

    class func pop(_ animated:Bool) {
        let rootCon = UIApplication.shared.keyWindow?.rootViewController
        if let tabCon = rootCon as? UITabBarController {
            if let selectedCon = tabCon.selectedViewController as? UINavigationController{
                selectedCon.popViewController(animated: animated)
            }else{
                debugPrint("Current ViewController is not a NavigationController, can not pop")
            }
        }else if let navigationCon = UIApplication.shared.keyWindow?.rootViewController as? UINavigationController{
            navigationCon.popViewController(animated: animated)
        }else {
            debugPrint("Current ViewController is not a NavigationController, can not pop")
        }
    }

    // 模态视图
    class func modelToPage(_ viewCon:UIViewController, animated:Bool, completion:@escaping () -> ()) -> () {
        var rootCon = UIApplication.shared.keyWindow?.rootViewController

        while ((rootCon?.presentedViewController) != nil)
        {
            rootCon = rootCon?.presentedViewController;
        }

        rootCon?.present(viewCon, animated: animated, completion: {
            completion()
        })

    }

    class func dismiss(_ animated:Bool, completion:@escaping () -> ()) {
        let rootCon = UIApplication.shared.keyWindow?.rootViewController
        if let modelCon = rootCon {
            if modelCon.presentationController != nil {
                modelCon.dismiss(animated: animated, completion: {
                    completion()
                })
            }else{
                debugPrint("Current viewcon is not a model con, can not dismiss")
            }
        }
    }
}
