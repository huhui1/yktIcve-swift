//
//  problemFeedbackView.swift
//  云课堂2
//  问题反馈
//  Created by cc on 2018/6/27.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SwiftyJSON

class problemFeedbackView: UIViewController,UITextViewDelegate,UIImagePickerControllerDelegate {
    //用来放置各个图片单元
    var collectionView:UICollectionView!
    
    //collectionView的布局
    var collectionViewLayout: UICollectionViewFlowLayout!
    
    var imgList = [UploadDocModel]()
    let maxImgCount = 9
    override func viewDidLoad() {
        super.viewDidLoad()
        self.title = "问题反馈"
        self.view.backgroundColor = UIColor.white
        
        
        NotificationCenter.default
            .addObserver(self, selector: #selector(self.textChange(_:)),
                         name: .UITextViewTextDidChange, object: nil)
        if(self.imgList.count < self.maxImgCount){
            let  m = UploadDocModel.init(data: JSON(), img:UIImage.init(named: "scancode_photo")!)
            m.isAdd = true
            self.imgList.insert(m, at: 0)
        }
        self.setUICollectionView()
        self.getProblem()
        // Do any additional setup after loading the view.
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    @objc func textChange(_ notification: Notification) {
        self.btn_submit.isEnabled = (problemText.text?.characters.count)!>0
        self.btn_submit.addTarget(self, action: #selector(self.submitProblem), for: .touchUpInside)
        if(problemText.text.count > 0){
            self.btn_submit.setTitleColor(UIColor.white, for: .normal)
            self.btn_submit.backgroundColor = UIColor.bg
            self.btn_submit.layer.borderWidth = 0
        }else{
           self.btn_submit.setTitleColor(UIColor.colorWithHex(hexColor: 0x8F8F8F), for: .normal)
           self.btn_submit.backgroundColor = UIColor.white
           self.btn_submit.layer.borderColor = UIColor.colorWithHex(hexColor: 0xE0E0E0).cgColor
           self.btn_submit.layer.borderWidth = 1
        }
    }
    //快速反馈
    func setHeadUI(){
        self.view.addSubview(self.headView)
        self.headView.addSubview(self.lab_title)

        self.headView.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(90)
            make.top.equalTo(0)
            make.left.equalTo(0)
        }
        self.lab_title.snp.makeConstraints { (make) in
            make.width.equalTo(55)
            make.height.equalTo(12)
            make.top.equalTo(6)
            make.left.equalTo(12)
        }
       
        for (i,v) in FeedbackInfos.enumerated(){
            let index = i / 4
            let Width = v.Name.size(withAttributes: [NSAttributedStringKey.font:UIFont.italicSystemFont(ofSize: 11)]).width
            let btn = UIButton.init(frame: CGRect.init(x: Int((width / 4 * CGFloat(i % 4)) + 12), y: 30 * (index + 1), width: Int(Width) + 18, height: 22 ));
            self.headView.addSubview(btn)
            btn.addTarget(self, action:#selector(tapped(_:)), for:.touchUpInside);
            btn.tag = i;
            btn.backgroundColor = UIColor.white;
            btn.titleLabel?.font = UIFont.init(name: "HelveticaNeue-Light", size: 11)
            btn.setTitle(v.Name, for: .normal);
            btn.layer.masksToBounds = true;
            btn.layer.cornerRadius = 6;
            btn.layer.borderColor = UIColor.colorWithHex(hexColor: 0xE0E0E0).cgColor
            btn.layer.borderWidth = 0.5
            btn.setTitleColor(UIColor.colorWithHex(hexColor: 0x808080), for: .normal);
            btn.titleLabel?.textAlignment = .center;
        }
        
        
        self.setUI()

    }
    //添加问题
    @objc func tapped(_ button:UIButton){
        
        button.isSelected = !button.isSelected
        if button.isSelected{
            button.backgroundColor = UIColor.colorWithHex(hexColor: 0x27BE71)
            button.setTitleColor(UIColor.white, for: .normal)
            let model = FeedbackInfos
            model[button.tag].isSelect = true
            
        }else{
            button.backgroundColor = UIColor.white;
            button.setTitleColor(UIColor.colorWithHex(hexColor: 0x808080), for: .normal);
            let model = FeedbackInfos
            model[button.tag].isSelect = false
        }

    }
    
    func setUI(){
        var ht = 0
        if common.share.isX(){
            ht = 30
        }
        //监听键盘弹出通知
        NotificationCenter.default
            .addObserver(self,selector: #selector(keyboardWillShow(_:)),
                         name: NSNotification.Name.UIKeyboardWillShow, object: nil)
        //监听键盘隐藏通知
        NotificationCenter.default
            .addObserver(self,selector: #selector(keyboardWillHide(_:)),
                         name: NSNotification.Name.UIKeyboardWillHide, object: nil)
        //键盘
        toolBar = common.share.AddToolKeyboardDoneBar()
        let doneButton = UIBarButtonItem(title: "确定", style: .plain, target: self, action: #selector(self.DoneClick));
        let spaceButton = UIBarButtonItem(barButtonSystemItem: .flexibleSpace, target: nil, action: nil)
        toolBar.setItems([spaceButton,doneButton], animated: false);
        
        self.view.addSubview(self.problemText)
        self.view.addSubview(self.btn_submit)
        

        self.problemText.snp.makeConstraints { (make) in
            make.width.equalTo(width - 24)
            make.height.equalTo(200)
            make.top.equalTo(self.headView.snp.bottom).offset(10)
            make.left.equalTo(12)
        }
        self.problemText.delegate = self
        self.problemText.layer.masksToBounds = true
        self.problemText.layer.cornerRadius = 2
        self.problemText.layer.borderColor = UIColor.colorWithHex(hexColor: 0xE0E0E0).cgColor
        self.problemText.layer.borderWidth = 0.5
        
        self.btn_submit.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(40)
            make.bottom.equalTo(self.view.snp.bottom).offset(-CGFloat(ht))
            make.left.equalTo(0)
        }
        
    }


    //提交
    @objc func Submit(){
        print("---")
    }
    //键盘
    func textViewShouldBeginEditing(_ textView: UITextView) -> Bool {
        if (problemText.text == "详情描述"){
            problemText.text = ""
            problemText.textColor = UIColor.black
        }
        problemText.inputAccessoryView = toolBar;
        return true
    }
    @objc func DoneClick(){
        self.view.endEditing(true)
    }
    // 键盘显示
    @objc func keyboardWillShow(_ notification: Notification) {
        
        let userInfo = (notification as NSNotification).userInfo!
        //键盘尺寸
        let keyboardSize = (userInfo[UIKeyboardFrameBeginUserInfoKey]
            as! NSValue).cgRectValue
        var contentInsets:UIEdgeInsets
        
        contentInsets = UIEdgeInsetsMake(64.0, 0.0, (keyboardSize.height), 0.0);
        
        self.view.frame = CGRect.init(x:0, y: -30, width:self.view.bounds.width, height: self.view.bounds.height);
        
    }
    // 键盘隐藏
    @objc func keyboardWillHide(_ notification: Notification) {
        
        self.view.frame = CGRect.init(x:0, y: 64, width:self.view.bounds.width, height: self.view.bounds.height);
    }
    //移除监听
    override func viewWillDisappear(_ animated: Bool) {
        if (!self.isPushed){
            NotificationCenter.default.removeObserver(self)
        }
        self.isPushed = false
        
    }
    
    let width = UIScreen.main.bounds.width
    let height = UIScreen.main.bounds.height
    var toolBar = UIToolbar();
    var isPushed = false
//    lazy var Namelist = [String]()
//    lazy var Idlist = [String]()
    var list = [String]()
    var FeedbackInfos = [FeedbackModel]()
    
    lazy var headView : UIView = {
        let view = UIView()
        view.backgroundColor = UIColor.colorWithHex(hexColor: 0xF5F5F5)
        return view
    }()
    lazy var lab_title : UILabel = {
        let lab = UILabel()
        lab.backgroundColor = UIColor.colorWithHex(hexColor: 0xF5F5F5)
        lab.textColor = UIColor.colorWithHex(hexColor: 0x808080)
        lab.text = "快速反馈:"
        lab.textAlignment = .center
        lab.font = UIFont.init(name: "HelveticaNeue-Light", size: 12)
        return lab
    }()
    
    lazy var problemView : UIView = {
       let view = UIView()
        view.backgroundColor = UIColor.colorWithHex(hexColor: 0xF5F5F5)
        return view
    }()
    lazy var problemText : UITextView = {
        let text = UITextView()
        text.backgroundColor = UIColor.colorWithHex(hexColor: 0xF5F5F5)
        text.font = UIFont.init(name: "HelveticaNeue-Light", size: 14)
        text.text = "详情描述"
        text.textColor = UIColor.colorWithHex(hexColor: 0xc7c7cd)
        return text
    }()

    
    lazy var btn_submit : UIButton = {
        let btn = UIButton()
        
        btn.setTitle("提 交", for: .normal)
        btn.setTitleColor(UIColor.colorWithHex(hexColor: 0x8F8F8F), for: .normal)
        btn.backgroundColor = UIColor.white
        btn.layer.borderColor = UIColor.colorWithHex(hexColor: 0xE0E0E0).cgColor
        btn.layer.borderWidth = 1
        return btn
    }()
    lazy var problemId : String = {
        return "";
    }()
    lazy var uploadUrl : String = {
        
        return ""
    }()
}


extension problemFeedbackView:UICollectionViewDataSource,UICollectionViewDelegate{
    func setUICollectionView(){
        
        //collectionView尺寸样式设置
        collectionViewLayout = UICollectionViewFlowLayout()
        //图片间隙
        collectionViewLayout.minimumLineSpacing = 2
        collectionViewLayout.minimumInteritemSpacing = 2
        
        //横向滚动
        collectionViewLayout.scrollDirection = .vertical
        //尺寸
        let hx = (UIScreen.main.bounds.height - 400) > 280 ? 280: (UIScreen.main.bounds.height - 400)
//        let sizeh = (hx / 3) > 80 ?80: (hx / 3)
        
        collectionViewLayout.itemSize = CGSize.init(width:60, height:60)
        
        let c = CGRect.init(x: 20, y: 303, width:190, height: hx)
        
        //collectionView初始化
        collectionView = UICollectionView(frame:c ,
                                          collectionViewLayout: collectionViewLayout)
        collectionView.backgroundColor = UIColor.white
        
        collectionView.delegate = self
        collectionView.dataSource = self
        collectionView.isPagingEnabled = true
        collectionView.backgroundColor = UIColor.clear
        self.view.addSubview(collectionView)
    }
    
    //collectionView单元格创建
    func collectionView(_ collectionView: UICollectionView,
                        cellForItemAt indexPath: IndexPath)
        -> UICollectionViewCell {
            let d = Date()
            let identifier = "cell\(d.timeIntervalSince1970)"
            //注册重用的单元格
            let cellXIB = UINib.init(nibName: "ZQUICollectionViewCell_Img", bundle: Bundle.main)
            collectionView.register(cellXIB, forCellWithReuseIdentifier: identifier)
            let cell = collectionView.dequeueReusableCell(withReuseIdentifier: identifier,
                                                          for: indexPath) as! ZQUICollectionViewCell_Img
            
            let m = self.imgList[indexPath.row]
            if(self.problemId.isEmpty){
                cell.setModelByUIImage(Model: m)
            }else{
                cell.setModelByOnline(model: m)
            }
            
            cell.CellBlock = {  () -> Void in
                self.uploadImg()
            }
            
            return cell
    }
    //点击图片
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        let m = self.imgList[indexPath.row]
        
        let vc = uploadImgPreviewView()
        if(m.img.size != CGSize.zero){
            vc.img = m.img
        }else{
            vc.imgurl = m.url
        }
        vc.reloadImglistClosure = {(index) in
            
            
            if(self.imgList.count == self.maxImgCount){
                self.imgList.insert(m, at: 0)
            }
            self.imgList.remove(at: indexPath.row)
            self.collectionView.deleteItems(at: [indexPath])
        }
        vc.modalTransitionStyle = .crossDissolve
        self.present(vc, animated: true, completion: nil)
    }
    
    //collectionView单元格数量
    func collectionView(_ collectionView: UICollectionView,
                        numberOfItemsInSection section: Int) -> Int {
        
        return self.imgList.count
    }
}
