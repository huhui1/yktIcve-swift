//
//  qrCodeView.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2018/1/31.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import SwiftyJSON

class qrCodeView: UIViewController {

    lazy var isHasImg = false
    lazy var qrstr = ""
    lazy var  msg = ""
    lazy var imgUrl = ""
    var selectType : Int = {return 0}()

    lazy var width = UIScreen.main.bounds.width
    lazy var height = UIScreen.main.bounds.height
    override func viewDidLoad() {
        super.viewDidLoad()
        self.modalPresentationStyle = .custom
        self.setqrcodeview()
        // Do any additional setup after loading the view.
        //默认邀请学生
        self.btn_student.isSelected = true
        self.btn_teacher.isSelected = false
        //判断是否点击过
        let cx = SQLiteManagerMask()
        let model = cx.readOneData(_userId: Account.defaultAccount.id!)

        if(!model.isbrowseQrcode){
           self.maskView()
        }
        
    }


    fileprivate func setqrcodeview(){
        let qrwidth = self.width * 0.8 > 500 ? 500 : self.width * 0.8
        
        self.view.addSubview(self.headView)
        self.headView.addSubview(self.btn_student)
        self.headView.addSubview(self.btn_teacher)
        self.view.addSubview(self.lab_msg)
        self.view.addSubview(self.bgview)
        
        self.bgview.addSubview(imageViewIcon)
        self.bgview.snp.makeConstraints { (make) in
            make.width.height.equalTo(qrwidth + 16)
            make.center.equalTo(self.view)
        }

        imageViewIcon.snp.makeConstraints { (make) in
            make.width.height.equalTo(qrwidth)
            make.center.equalTo(self.bgview)
        }
        self.lab_msg.snp.makeConstraints { (make) in
            make.width.equalTo(qrwidth)
            make.height.equalTo(16)
            make.top.equalTo(imageViewIcon.snp.bottom).offset(16)
            make.centerX.equalTo(imageViewIcon.snp.centerX)
        }
        self.lab_msg.text = self.msg
        
        self.headView.snp.makeConstraints { (make) in
            make.width.equalTo(qrwidth + 16)
            make.height.equalTo(40)
            make.bottom.equalTo(self.bgview.snp.top)
            make.centerX.equalTo(self.bgview.snp.centerX)
        }
        self.btn_student.snp.makeConstraints { (make) in
            make.width.equalTo((qrwidth + 16) / 2)
            make.height.equalTo(self.headView)
            make.left.equalTo(0)
            make.top.equalTo(self.headView.snp.top)
        }
        self.btn_teacher.snp.makeConstraints {(make) in
            make.width.height.top.equalTo(self.btn_student)
            make.left.equalTo(self.btn_student.snp.right)
        }
        
        
        if(self.isHasImg){
            
            imageViewIcon.image = createQRForString(qrString: qrstr,
                                                    qrImageName: self.imgUrl)
            //带图片的二维码图片

        }else{
            //不带图片的二维码图片
            imageViewIcon.image = createQRForString(qrString: qrstr,
                                                     qrImageName: "qrstu.png")
        }


    }

    
    //二维码转换
   @objc func seltype(_ btn:UIButton){
        //邀请学生二维码
        if(btn.tag == 1){
            self.selectType = 3
            let data = ["flag":"ssykt",
                        "type":self.selectType,
                        "schoolId":Account.defaultAccount.schoolId!,
                        "teacherId":Account.defaultAccount.id!,
                        "teacherName":Account.defaultAccount.displayName!] as [String : Any]
            let qrstr = JSON.init(data).description
            if(self.isHasImg){
                
                imageViewIcon.image = createQRForString(qrString: qrstr,
                                                        qrImageName: self.imgUrl)
                //带图片的二维码图片
                
            }else{
                //不带图片的二维码图片
                imageViewIcon.image = createQRForString(qrString: qrstr,
                                                        qrImageName: "qrstu.png")
            }
              btn.isSelected = true
              self.btn_teacher.isSelected = false

        }else if(btn.tag == 2){
            //邀请老师二维码
            self.selectType = 4
            let data = ["flag":"ssykt",
                        "type":self.selectType,
                        "schoolId":Account.defaultAccount.schoolId!,
                        "teacherId":Account.defaultAccount.id!,
                        "teacherName":Account.defaultAccount.displayName!] as [String : Any]
            let qrstr = JSON.init(data).description
            if(self.isHasImg){
                
                imageViewIcon.image = createQRForString(qrString: qrstr,
                                                        qrImageName: self.imgUrl)
                //带图片的二维码图片
                
            }else{
                //不带图片的二维码图片
                imageViewIcon.image = createQRForString(qrString: qrstr,
                                                        qrImageName: "qrtea.png")
            }
            btn.isSelected = true
            self.btn_student.isSelected = false
        }
        
    }

    //创建二维码图片
    func createQRForString(qrString: String?, qrImageName: String?) -> UIImage?{
        if let sureQRString = qrString {
            let stringData = sureQRString.data(using: .utf8,
                                               allowLossyConversion: false)
            // 创建一个二维码的滤镜
            let qrFilter = CIFilter(name: "CIQRCodeGenerator")!
            qrFilter.setValue(stringData, forKey: "inputMessage")
            qrFilter.setValue("H", forKey: "inputCorrectionLevel")
            let qrCIImage = qrFilter.outputImage

            // 创建一个颜色滤镜,黑白色
            let colorFilter = CIFilter(name: "CIFalseColor")!
            colorFilter.setDefaults()
            colorFilter.setValue(qrCIImage, forKey: "inputImage")
            colorFilter.setValue(CIColor(red: 0, green: 0, blue: 0), forKey: "inputColor0")
            colorFilter.setValue(CIColor(red: 1, green: 1, blue: 1), forKey: "inputColor1")

            // 返回二维码image
            let codeImage = UIImage(ciImage: colorFilter.outputImage!
                .transformed(by: CGAffineTransform(scaleX: 5, y: 5)))

                // 通常,二维码都是定制的,中间都会放想要表达意思的图片
            if let iconImage = UIImage.init(named: qrImageName!) {
                    let rect = CGRect(x:0, y:0, width:codeImage.size.width,
                                      height:codeImage.size.height)
                    UIGraphicsBeginImageContext(rect.size)

                    codeImage.draw(in: rect)
                    let avatarSize = CGSize(width:rect.size.width * 0.25,
                                            height:rect.size.height * 0.25)
                    let x = (rect.width - avatarSize.width) * 0.5
                    let y = (rect.height - avatarSize.height) * 0.5
                    iconImage.draw(in: CGRect(x:x, y:y, width:avatarSize.width,
                                              height:avatarSize.height))
                    let resultImage = UIGraphicsGetImageFromCurrentImageContext()

                    UIGraphicsEndImageContext()
                    return resultImage
                }


            return codeImage
        }
        return nil
    }

    override func touchesEnded(_ touches: Set<UITouch>, with event: UIEvent?) {
        if self.ishadden{
            self.presentingViewController?.dismiss(animated: true, completion: nil)
        }else{
            
        }
    }
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    var headView : UIView = {
       let view = UIView()
        view.backgroundColor = UIColor.bg
        return view
    }()
    //学生
     var btn_student : UIButton = {
       let btn = UIButton()
        btn.backgroundColor = UIColor.white
        btn.titleLabel?.font = UIFont.init(name:"iconfont" ,size: 15)
        btn.setTitleColor(UIColor.black, for: .normal)
        btn.setTitleColor(UIColor.bg, for: .selected)
        btn.setTitle("\u{e6f5} 邀请学生注册", for: .normal)
        btn.setTitle("\u{e6f4} 邀请学生注册", for: .selected)
        btn.titleLabel?.textAlignment = .right
        btn.tag = 1
        btn.addTarget(self, action: #selector(seltype(_:)), for: .touchUpInside)
        return btn
    }()
    //老师
     var btn_teacher : UIButton = {
       let btn = UIButton()
        btn.backgroundColor = UIColor.white
        btn.titleLabel?.font = UIFont.init(name:"iconfont" ,size: 15)
        btn.setTitleColor(UIColor.white, for: .normal)
        btn.setTitleColor(UIColor.black, for: .normal)
        btn.setTitleColor(UIColor.bg, for: .selected)
        btn.setTitle("\u{e6f5} 邀请老师注册", for: .normal)
        btn.setTitle("\u{e6f4} 邀请老师注册", for: .selected)
        btn.titleLabel?.textAlignment = .right
        btn.tag = 2
        btn.addTarget(self, action: #selector(seltype(_:)), for: .touchUpInside)
        return btn
    }()
    var lab_msg : UILabel = {
        let lab = UILabel()
        lab.font = UIFont.init(name: "iconfont", size: 14)
        lab.textColor = UIColor.bg
        lab.textAlignment = .center
        return lab
    }()

    var bgview : UIView = {
        let view = UIView()
        view.layer.borderWidth = 0.5
        view.layer.borderColor = UIColor.bg.cgColor
        return view
    }()
    let imageViewIcon = UIImageView()
    lazy var makeView:UIView = {
        return UIView.init(frame: self.view.frame)
    }()
    lazy var ishadden:Bool = true
    
    var Btn_title : UIButton = {
        let btn = UIButton()
        return btn
    }()
    var tapBtn : UIButton = {
        let btn = UIButton()
        return btn
    }()
}
