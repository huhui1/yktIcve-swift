//
//  checkupView.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2018/1/31.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import SwiftyJSON

class checkupView:UIViewController, UITableViewDataSource,UITableViewDelegate{

    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.white
        // Do any additional setup after loading the view.
        self.setUI()
        self.setTableView()
        self.title = "邀请/审核"
        self.refreshItemData(isRefresh: true)
        //判断是否点击过
        let cx = SQLiteManagerMask()
        let model = cx.readOneData(_userId: Account.defaultAccount.id!)
        if(!model.isbrowseQrcode){
            self.maskView()
        }
    }

    func setUI(){
        let item = UIBarButtonItem(title: "二维码", style: UIBarButtonItemStyle.plain, target: self, action: #selector(self.showQrcode))
        self.navigationItem.rightBarButtonItem=item
        self.view.addSubview(self.stuBtn)
        self.view.addSubview(self.teacherBtn)
        self.view.addSubview(self._line)
        self.view.addSubview(self.line)

        self.stuBtn.snp.makeConstraints { (make) in
            make.width.equalTo(width / 2)
            make.height.equalTo(40)
            make.left.equalTo(0)
            make.top.equalTo(0)
        }
        self.stuBtn.tag = 1
        self.stuBtn.addTarget(self, action: #selector(self.selType(_:)), for: .touchUpInside)
        self.teacherBtn.snp.makeConstraints { (make) in
            make.width.height.centerY.top.equalTo(self.stuBtn)
            make.left.equalTo(self.stuBtn.snp.right)
        }
        self.teacherBtn.addTarget(self, action: #selector(self.selType(_:)), for: .touchUpInside)
        self.teacherBtn.tag = 0


        self.line.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(1)
            make.bottom.equalTo(self.stuBtn)
            make.left.equalTo(0)
        }
        self._line.snp.makeConstraints { (make) in
            make.width.equalTo(100)
            make.height.equalTo(1)
            make.centerX.equalTo(self.stuBtn)
            make.top.equalTo(self.line.snp.bottom)
        }
        let HX = common.share.returnSafeAreaLineHeight()
        self.view.addSubview(checkBtn)
        checkBtn.snp.makeConstraints { (make) in
            make.width.equalTo(width / 3)
            make.height.equalTo(50)
            make.left.equalTo(0)
            make.bottom.equalTo(self.view.snp.bottom).offset(HX)
        }
        self.view.addSubview(btn_ignore)
        btn_ignore.snp.makeConstraints { (make) in
            make.width.equalTo(width / 3)
            make.height.equalTo(50)
            make.left.equalTo(self.checkBtn.snp.right)
            make.centerY.equalTo(checkBtn.snp.centerY)
        }
        self.view.addSubview(submitBtn)
        submitBtn.snp.makeConstraints { (make) in
            make.width.equalTo(width / 3)
            make.height.equalTo(50)
            make.centerY.equalTo(checkBtn.snp.centerY)
            make.left.equalTo(self.btn_ignore.snp.right)
        }
        self.submitBtn.addTarget(self, action: #selector(self.approvalStuOrColleague(_:)), for: .touchUpInside)
        self.btn_ignore.addTarget(self, action: #selector(self.approvalStuOrColleague(_:)), for: .touchUpInside)
        self.checkBtn.addSubview(btnAllIcon)
        btnAllIcon.snp.makeConstraints { (make) in
            make.width.height.equalTo(26)
            make.centerX.equalTo(checkBtn.snp.centerX).offset(-40)
            make.centerY.equalTo(checkBtn.snp.centerY)
        }
        self.btnAllIcon.addTarget(self, action: #selector(self.tap(_:)), for: .touchUpInside)
        self.btnAllIcon.layer.masksToBounds = true
        self.btnAllIcon.layer.cornerRadius = 13

    }
  
    func  setTableView(){
        //创建表视图
        self.tableView = UITableView.init(frame: CGRect(x:0, y: 41, width:self.view.bounds.width, height:self.view.bounds.height - 150))

        
        self.tableView.delegate = self ;
        self.tableView.dataSource = self;
        //创建一个重用的单元格
        self.tableView.register(checkUpTableViewCell.self, forCellReuseIdentifier: "SwiftCell");

        self.tableView.tableFooterView = UIView(frame:CGRect.zero)//除去多余的cell
        
        if #available(iOS 9.0, *) {
            self.tableView.cellLayoutMarginsFollowReadableWidth = false
        } else {
            
        }
        
        //表格在编辑状态下允许多选
        self.tableView.allowsMultipleSelectionDuringEditing = true
        
        self.tableView.setEditing(true, animated:true)
        //rowHeight属性设置为UITableViewAutomaticDimension
        self.tableView.rowHeight = UITableViewAutomaticDimension;
        
        //下拉刷新相关设置,使用闭包Block
        self.tableView.mj_header = MJRefreshNormalHeader(refreshingBlock: {
            //重现生成数据
            self.refreshItemData(isRefresh:false);
            
        })
        
        self.view.addSubview(self.tableView);
        
    }
 //   创建各单元显示内容(创建参数indexPath指定的单元）
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath)
        -> UITableViewCell {
            
            let stuinfo = checkInfos[indexPath.row]
            //为了提供表格显示性能，已创建完成的单元需重复使用
            let identify:String = "SwiftCell"
            //同一形式的单元格重复使用，在声明时已注册
            let cell = tableView.dequeueReusableCell(withIdentifier: identify,
                                                     for: indexPath) as! checkUpTableViewCell
            //为了提示用户，将cell的accessory view设置为UIActivityIndicatorView。
            if cell.accessoryView == nil {
                let indicator = UIActivityIndicatorView(activityIndicatorStyle: .gray)
                cell.accessoryView = indicator
            }
            cell.btnIcon.isSelected=false
            cell.avatar.image = UIImage.init(named: "defult_avatar.png")
            cell.lab_Name.text = stuinfo.Name
            cell.lab_Num.text = "学号:"+stuinfo.StuNo
            cell.lab_Phone.text = "\u{e737}"+stuinfo.Mobile
            cell.lab_Email.text = "\u{e6f8}"+stuinfo.Email
          //  let indicator = cell.accessoryView as! UIActivityIndicatorView
            //获取当前行所对应的图片记录。
          //  let coverRecord = covers[indexPath.row]
            //检查图片状态。设置适当的activity indicator 和文本，然后开始执行任务
            
            return cell
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat
        {
            return 50;
        }

    //返回表格行数（也就是返回控件数）
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return self.checkInfos.count;
    }

    func backallvcs(){
        self.presentingViewController?.dismiss(animated: true, completion: nil);
        //        self.view.window?.rootViewController?.dismiss(animated: true, completion: nil)
    }


    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    lazy var stuBtn : UIButton = {
        let btn = UIButton()
        btn.contentMode = .center
        btn.setTitle("学生", for: .normal)
        btn.setTitleColor(UIColor.gray, for: .normal)
        btn.setTitleColor(UIColor.bg, for: .selected)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 18)
        return btn

    }()


    lazy var teacherBtn : UIButton = {
        let btn = UIButton()
        btn.contentMode = .center
        btn.setTitle("教师", for: .normal)
        btn.setTitleColor(UIColor.gray, for: .normal)
        btn.setTitleColor(UIColor.bg, for: .selected)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 18)
        return btn

    }()

    lazy var height = UIScreen.main.bounds.height
    lazy var _line : UILabel = {
        let lab = UILabel()
        lab.backgroundColor = UIColor.bg
        return lab

    }()
    lazy var btnAllIcon : UIButton = {
        let btn = UIButton()
        btn.setTitle("\u{e69d}", for: .normal)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 26)
        btn.setTitle("\u{e669}", for: .selected)
        btn.setTitleColor(UIColor.colorWithHex(hexColor: 0xf3f3f3), for: .normal)
        btn.setTitleColor(UIColor.white, for: .selected)
        return btn
    }()
    lazy  var checkBtn : UIButton = {
        let btn = UIButton()
        btn.contentMode = .center
        btn.setTitleColor(UIColor.gray, for: .normal)
        btn.setTitleColor(UIColor.colorWithHex(hexColor: 0x23c397), for: .selected)
        btn.setTitle("全选", for: .normal)
        btn.tag = 1
        btn.backgroundColor = UIColor.white
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 16)
        return btn ;
        
    }()
    lazy  var btn_ignore : UIButton = {
        let btn = UIButton()
        btn.contentMode = .center
        btn.setTitleColor(UIColor.white, for: .normal)
        btn.backgroundColor = UIColor.colorWithHex(hexColor: 0x23c397)
        btn.setTitle("忽略", for: .normal)
        btn.tag = 0;
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 16)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 16)
        return btn ;
        
    }()
    lazy  var submitBtn : UIButton = {
        let btn = UIButton()
        btn.contentMode = .center
        btn.setTitleColor(UIColor.white, for: .normal)
        btn.backgroundColor = UIColor.colorWithHex(hexColor: 0x04ae84)
        btn.setTitle("确定", for: .normal)
        btn.tag = 1
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 16)
        
        return btn ;
        
    }()

    lazy  var btn_invitation : UIButton = {
        let btn = UIButton()
        btn.contentMode = .center
        btn.setTitleColor(UIColor.white, for: .normal)
        btn.backgroundColor = UIColor.clear
        btn.setTitle("二维码", for: .normal)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 16)

        return btn ;

    }()

    lazy var line : UILabel = {
        let lab = UILabel()
        lab.backgroundColor = UIColor.colorWithHex(hexColor: 0xf2f2f2)
        return lab
    }()
    var selectType : Int = 3
    lazy var list :NSArray = {
        return []
    }()
    var stuIdList = [String]()
    var tableView:UITableView!
    lazy var inviteType  = 1
    var checkInfos = [checkInfo]()

    lazy var makeView:UIView = {
        return UIView.init(frame: self.view.frame)
    }()

    let width = UIScreen.main.bounds.width
}



struct  checkInfo {
    
    let Id:String
    let Name:String
    let StuNo:String
    let Mobile:String
    let Email:String
    var isChecked:Bool
    
}
