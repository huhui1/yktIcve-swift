//
//  selectErrorByTypeOrKnowledge.swift
//  云课堂2
//
//  Created by 志辉教育 on 2018/6/27.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import Alamofire
import SwiftyJSON

class selectErrorByTypeOrKnowledge: UIViewController,UITableViewDelegate,UITableViewDataSource {
    var tableView:UITableView!;
    let width = UIScreen.main.bounds.width
    let height = UIScreen.main.bounds.height
    
    //创建一个闭包属性
    var reloaderrorlistClosure :((_ knowledgeIds:Array<Any>)->Void)?
    override func viewDidLoad() {
        super.viewDidLoad()
        self.title = "知识点"
        self.view.backgroundColor = UIColor.white
        self.modalPresentationStyle = .custom;
        let item = UIBarButtonItem(title: "取消", style: .plain, target: self, action: #selector(self.cancel))
        self.navigationItem.rightBarButtonItem = item
        common.share.setBackButtonItem(item:item)
        self.setTableView();
        self.getErrorDataByKnowledge()
        // Do any additional setup after loading the view.
    }
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    func  setTableView(){
        self.view.addSubview(self.btn_determine)
        self.btn_determine.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(45)
            make.bottom.left.equalTo(0)
        }
        
        
        //创建表视图
        self.tableView = UITableView.init(frame: CGRect(x:0, y:0, width:width, height:height - 120));
        self.tableView.delegate = self;
        self.tableView.dataSource = self;
        
        self.tableView .backgroundColor = UIColor.clear;
        //创建一个重用的单元格
        self.tableView.register(UITableViewCell.self, forCellReuseIdentifier: "SwiftCell");
       

        //设置允许单元格多选
        self.tableView!.allowsMultipleSelection = true
        if #available(iOS 9.0, *) {
            self.tableView.cellLayoutMarginsFollowReadableWidth = false
        } else {
            
        }
        self.view.addSubview(self.tableView!);
        
        
        
    }
    
    @objc func cancel(){
//        self.navigationController?.popViewController(animated: true)
        self.tableView.reloadData()
    }
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat
    {
        return 50;
    }
    
    //返回表格行数（也就是返回控件数）
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return  self.list.count;
    }
    
    //创建各单元显示内容(创建参数indexPath指定的单元）
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath)
        -> UITableViewCell {
            //同一形式的单元格重复使用，在声明时已注册
            let cell = tableView.dequeueReusableCell(withIdentifier: "SwiftCell",
                                                     for: indexPath) as UITableViewCell
            cell.textLabel?.text =  JSON(self.list[indexPath.row])["knowledgeTitle"].stringValue
            cell.textLabel?.textColor = UIColor.gray;
            cell.textLabel?.font = UIFont.init(name: "iconfont", size: 14);
            
            //判断是否选中（选中单元格尾部打勾）
            if tableView.indexPathsForSelectedRows?.index(of: indexPath) != nil{
                cell.accessoryType = .checkmark
            } else {
                cell.accessoryType = .none
            }
            
            return cell
    }
    // UITableViewDelegate 方法，处理列表项的选中事件
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        let cell = self.tableView?.cellForRow(at: indexPath)
        cell?.accessoryType = .checkmark

    }
    
    //处理列表项的取消选中事件
    func tableView(_ tableView: UITableView, didDeselectRowAt indexPath: IndexPath) {
        let cell = self.tableView?.cellForRow(at: indexPath)
        cell?.accessoryType = .none
    }
    @objc func determine(){
        if let selectedItems = tableView!.indexPathsForSelectedRows {
            for indexPath in selectedItems {
                knowledgeIds.append(self.list[indexPath.row]["knowledgeId"].stringValue)
            }
        }
        self.reloaderrorlistClosure!(knowledgeIds)
        self.navigationController?.popViewController(animated: true)
    }
    lazy var btn_determine : UIButton = {
        let btn = UIButton()
        btn.setTitle("确定", for: .normal)
        btn.setTitleColor(UIColor.white, for: .normal)
        btn.backgroundColor = UIColor.bg
        btn.addTarget(self, action: #selector(self.determine), for: .touchUpInside)
        return btn
    }()
    lazy var knowledgeIds:Array = {
        return []
    }()
    lazy var courseOpenId = ""
    lazy var list:JSON = {
        return []
    }()
    
}

