//
//  ErrorQusetionRecordByStuTableView.swift
//  云课堂职教云
//
//  Created by 尤增强 on 2018/3/20.
//  Copyright © 2018年 jcjy. All rights reserved.
//

import UIKit
import SwiftyJSON

class ErrorQusetionRecordByStuTableView: UITableViewController {

    override func viewDidLoad() {
        super.viewDidLoad()

        self.getData();
        tableView.register(recordErrorQuestionCell.self, forCellReuseIdentifier: "SwiftCell");
        tableView.tableFooterView = UIView(frame:CGRect.zero)//除去多余的cell
        tableView.separatorInset = UIEdgeInsets.zero;

        tableView.layoutMargins = UIEdgeInsets.zero;

        let topview = errorRecordTop()
        topview.labIndex.text = "序号"
        topview.lab_no1.text = "作答时间"
        topview.lab_no2.text = "所选答案"
        topview.lab_no3.text = "错误来源"
        topview.frame.size = CGSize.init(width: UIScreen.main.bounds.width, height: 30)
        self.tableView.tableHeaderView = topview
        if #available(iOS 9.0, *) {
            tableView.cellLayoutMarginsFollowReadableWidth = false
        } else {
            // Fallback on earlier versions
        }

    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    override func numberOfSections(in tableView: UITableView) -> Int {
        // #warning Incomplete implementation, return the number of sections
        return 1
    }

    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        // #warning Incomplete implementation, return the number of rows
        return self.list.count
    }

    override func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 60
    }

    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        var cell = tableView.dequeueReusableCell(withIdentifier: "SwiftCell")
            as? recordErrorQuestionCell
        if cell == nil{
            cell = tableView.dequeueReusableCell(withIdentifier: "SwiftCell")
                as? recordErrorQuestionCell
            cell?.selectionStyle = .none
        }
        let json = JSON(self.list[indexPath.row])

        cell?.lab_index.text = "\(indexPath.row + 1)"
        cell?.lab_className.text = self.dataSourse[json["dataSourseType"].intValue]

        cell?.lab_Name.text = json["dateCreated"].stringValue

        if (self.questionType == 9 || self.questionType == 8 || self.questionType == 11) {
            cell?.lab_NO.text = self.toStrLetterBySub(answer: json["subQuestionList"])
        }else{
            cell?.lab_NO.text = self.toStrLetter(answer: json["answer"].stringValue)
        }
        return cell!
    }

    //普通题目答案处理
    fileprivate func toStrLetter(answer:String) ->String{
        let a = answer.components(separatedBy: ",");
        var b = [String]()



        for i in 0..<a.count{
            if let index:Int = Int(a[i]){
                if(self.questionType == 3){
                    b.append((index == 1 ?"正确":"错误"))
                }else{
                    b.append(self.letter[index])
                }
            }else{
                 b.append("未作答")
            }
        }

        return b.joined(separator: ",")
    }

    //含有子题目处理
    fileprivate func toStrLetterBySub(answer:JSON) ->String{

        var c = [String]();
        for i in 0..<answer.count{
              let a = answer[1]["answer"].stringValue.components(separatedBy: ",");
              var b = [String]();
            for i in 0..<a.count{
                if let index:Int = Int(a[i]){
                    b.append(self.letter[index])
                }else{
                    b.append("未作答")
                }
            }
            c.append("\(i+1)、\(b.joined(separator: " ")) ")
        }
        return c.joined(separator: " ")
    }

    lazy var list : NSArray = {return []}()
    lazy var questionId :String = {return ""}()
    lazy var hkOrExamId :String = {return ""}()//作业或者考试Id
    lazy var hkOrExamType :Int = {return 2}()
    lazy var courseOpenId:String = {return ""}()
    lazy var openClassId:String = {return ""}()
    lazy var stuId:String = {return ""}()
    lazy var questionType:Int = {return 1}()
    fileprivate lazy var dataSourse = ["","作业测评","考试"];
    fileprivate lazy var QuestionType  = ["", "单选题", "多选题", "判断题", "填空题", "填空题", "问答题", "匹配题", "阅读理解", "完形填空", "文件作答题", "视听题"];
   fileprivate lazy var letter =  ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z","A1","B1","C1"];

}
