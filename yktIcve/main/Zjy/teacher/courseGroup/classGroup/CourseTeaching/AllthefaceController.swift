//
//  AllthefaceController.swift
//  云课堂2
//
//  Created by 志辉教育 on 2018/6/25.
//  Copyright © 2018年 zqyou. All rights reserved.
//


import UIKit
import SwiftyJSON
import Alamofire

extension AllthefaceView {
    
    
    func getallface(date:String,isRefresh:Bool){
        let dict =
            ["userId":Account.defaultAccount.id!,"faceDate":date,"faceTimeState":0,"courseOpenIds":self.courseOpenIds,"openClassIds":self.openClassIds] as [String : Any]
        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.FaceTeach_getFaceActivityList, method: .post, parameters: dict).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if(json["code"] == 1){
                    self.List = json["dataList"]
                    self.setUI()
                    //重现加载表格数据
                    if(!isRefresh){
                        //结束刷新
                        self.tableView.mj_header.endRefreshing()
                    }
                    self.tableView!.reloadData();
                    common.share.setTableFootView_noData(self.tableView, list: json["dataList"].arrayValue as NSArray)
                }else{
                    ZKProgressHUD.showMessage(json["msg"].stringValue)
                }
                
                if(!isRefresh){
                    //结束刷新
                    self.tableView!.mj_header.endRefreshing();
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showMessage("网络开小差了")
                XLBallLoading.hide(in: self.view)
            }
        }
    }
    //删除面授
    func delFaceActivity(activityId:String,_ tableView: UITableView,forRowAt indexPath: IndexPath){
        
        XLBallLoading.show(in: self.view)
        let dict = ["activityId":activityId]
        Alamofire.request(appAPI.FaceTeach_delFaceTeach, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            
            if let value = response.result.value {
                let json = JSON(value)
                if(json["code"] == 1){
                    var arr = self.List.arrayValue
                    arr.remove(at: indexPath.row)
                    self.List = JSON(arr)
                    tableView.deleteRows(at: [indexPath], with: UITableViewRowAnimation.fade)
                    ZKProgressHUD.showMessage(json["msg"].stringValue);
                    
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                XLBallLoading.hide(in: self.view)
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }
    }

    //1课程
    func getCourseList(isCourse:Bool){
        if(self.courseList.count > 0){
            self.presentVC(isCourse: isCourse, list: self.courseList)
            return ;
        }
        let dict = ["userId": Account.defaultAccount.id!]
        Alamofire.request(appAPI.FaceTeach_getFaceCourseList, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    self.courseList = json["courseList"]
                    self.presentVC(isCourse: isCourse, list: self.courseList)
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }
    }
    
    func getClassList(isCourse:Bool){
        
        if(self.classList.count > 0){
            self.presentVC(isCourse: isCourse, list: self.classList)
            return ;
        }
        let dict = ["userId":Account.defaultAccount.id!]
        
        Alamofire.request(appAPI.AssistTeacher_myAssistClassList, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    self.classList = json["dataList"]
                    self.presentVC(isCourse: isCourse, list: self.classList)
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }
    }
    
    
    func presentVC(isCourse:Bool,list:JSON){
        let vc = selectFaceByTypeView();
        vc.isCourse = isCourse
        vc.list = list;
        vc.CourseName = self.CourseName
        vc.OpenClassName = self.OpenClassName
        vc.courseOpenIds = self.courseOpenIds
        vc.openClassIds = self.openClassIds
        vc.reloadfacelistClosure = {(courseOpenIds,openClassIds) in
            self.courseOpenIds = courseOpenIds
            self.openClassIds = openClassIds
            self.getallface(date: "", isRefresh: true)
        }
        vc.CourseNameandopenClassName = {(CourseName,openClassName) in
            self.CourseName = CourseName
            self.OpenClassName = openClassName
            //\u{e607}
            if self.CourseName == "不限课程" {
                self.CourseName = "全部课程\u{e607}"
            }
            if self.OpenClassName == "不限班级" {
                self.OpenClassName = "全部班级\u{e607}"
            }
            if CourseName.isEmpty {
                self.btn_Anycourse.setTitle(self.btn_Anycourse.titleLabel?.text, for: .normal)
            }
            else {
                self.btn_Anycourse.setTitle(self.CourseName, for: .normal)
            }
            if openClassName.isEmpty {
                self.btn_Anyclass.setTitle(self.btn_Anyclass.titleLabel?.text, for: .normal)
            }
            else {
                self.btn_Anyclass.setTitle(self.OpenClassName, for: .normal)
            }
        }
        vc.modalTransitionStyle = .crossDissolve;
        vc.view.backgroundColor = UIColor(red: 0, green: 0, blue: 0, alpha: 0.2);
        self.present(vc, animated: true, completion: nil)
    }
}
