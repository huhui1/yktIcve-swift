//
//  CourseTeachsCell.swift
//  云课堂2
//
//  Created by 志辉教育 on 2018/6/25.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SwiftyJSON
class CourseTeachsCell: UITableViewCell {
    lazy var isstuhaddenedit:Bool = true
    lazy var ishaddencourseName:Bool = true
    lazy var ishaddenStucourseName:Bool = true
    @IBOutlet weak var courseTimebottomht: NSLayoutConstraint!
    @IBOutlet weak var cousrNameht: NSLayoutConstraint!
    @IBOutlet var courseTimeSizeW: NSLayoutConstraint!
    @IBOutlet weak var bgview: UIView!
    @IBOutlet weak var lab_jieci: UILabel!
    @IBOutlet weak var Date_text: UILabel!
    
    @IBOutlet weak var btn_editor: UIButton!
    @IBOutlet weak var courseLoction: UILabel!
    @IBOutlet weak var courseClass: UILabel!
    @IBOutlet weak var courseTime: UILabel!
    @IBOutlet weak var courseName: UILabel!
    @IBOutlet weak var courseTittle: UILabel!
    @IBOutlet weak var week_lab: UILabel!
    @IBOutlet weak var date_lab: UILabel!
    override func awakeFromNib() {
        super.awakeFromNib()
        // Initialization code
        
        //设置cell卡片样式
        let shadowPath = UIBezierPath(roundedRect: bounds, cornerRadius: 0.6)
        self.bgview.layer.masksToBounds = false
        self.bgview.layer.cornerRadius = 6
        self.bgview.layer.shadowColor = UIColor.white.cgColor
        self.bgview.layer.shadowOffset = CGSize.zero // CGSize(width: shadowOffsetWidth, height: shadowOffsetHeight);
        self.bgview.layer.shadowOpacity = 0.11
        self.bgview.layer.shadowPath = shadowPath.cgPath
        self.bgview.layer.borderColor = UIColor.colorWithHex(hexColor: 0x32bd73).cgColor
        self.bgview.layer.borderWidth = 0.08
      
        self.backgroundColor = UIColor.colorWithHex(hexColor: 0xfafafa)
        //设置部分圆角
        date_lab.layer.addSublayer(myLayer)
        week_lab.layer.addSublayer(lablayer)
        self.courseLoction.font = UIFont.init(name: "iconfont", size: 16)
        self.courseTimeSizeW.constant = 0.0
        self.courseTime.isHidden = true
    }
    
    override func setSelected(_ selected: Bool, animated: Bool) {
        super.setSelected(selected, animated: animated)
        
        // Configure the view for the selected state
    }
    override func layoutSubviews() {
        if self.isstuhaddenedit{
            btn_editor.layer.borderColor = UIColor.colorWithHex(hexColor: 0xFF27BE71).cgColor
            btn_editor.layer.borderWidth = 1;
            btn_editor.layer.cornerRadius = 13;
            btn_editor.setTitleColor(UIColor.colorWithHex(hexColor: 0xFF27BE71), for: .normal)
        }
    }
    func setdata(json:JSON){
        self.cousrNameht.constant = 0.0
        self.courseTimebottomht.constant = 0.0
        self.courseTittle.text = json["Title"].stringValue
        self.Date_text.text = self.Newtime(json["StartTime"].stringValue)
        self.week_lab.text = self.getDayOfWeek(json["StartTime"].stringValue)
        //self.courseTime.text = "\(self.time(json["StartTime"].stringValue))"
        if json["ClassSection"].stringValue.isEmpty{
            self.lab_jieci.attributedText = common.share.setAttributeString(str: "未设定节次", color: UIColor.cg, fontSize: 14, range: NSMakeRange(0,5))
        }else{
            self.lab_jieci.attributedText = common.share.changeTextChange(regex:.dW, text: "\(json["ClassSection"].stringValue)节", color: UIColor.cg)
        }
        if json["OpenClassName"].stringValue.isEmpty{
             self.courseClass.text =  json["classNames"].stringValue
        }else{
             self.courseClass.text =  json["OpenClassName"].stringValue
        }
        let str = common.share.setAttributeString(str: "\u{e64a}\(json["Address"].stringValue)", color: UIColor.cg, fontSize: 14, range: NSMakeRange(0,1))
        if json["Address"].stringValue.isEmpty{
            self.courseLoction.attributedText = common.share.setAttributeString(str: "\u{e64a} ---", color: UIColor.cg, fontSize: 14, range: NSMakeRange(0,1))
        }else{
            self.courseLoction.attributedText = str
        }
    }
    func setjson(json:JSON){
        self.courseTittle.text = json["Title"].stringValue
        self.Date_text.text = self.Newtime(json["StartTime"].stringValue)
        self.week_lab.text = self.getDayOfWeek(json["StartTime"].stringValue)
        self.courseName.text = json["courseName"].stringValue
        //self.courseTime.text = "\(self.time(json["StartTime"].stringValue))"
        if json["ClassSection"].stringValue.isEmpty{
            self.lab_jieci.attributedText = common.share.setAttributeString(str: "未设定节次", color: UIColor.cg, fontSize: 14, range: NSMakeRange(0,5))
        }else{
            self.lab_jieci.attributedText = common.share.changeTextChange(regex:.dW, text: "\(json["ClassSection"].stringValue)节", color: UIColor.cg)
        }
        self.courseClass.text =  json["classNames"].stringValue
        let str = common.share.setAttributeString(str: "\u{e64a}\(json["Address"].stringValue)", color: UIColor.cg, fontSize: 14, range: NSMakeRange(0,1))
        if json["Address"].stringValue.isEmpty{
            self.courseLoction.attributedText = common.share.setAttributeString(str: "\u{e64a}未设置地点", color: UIColor.cg, fontSize: 13, range: NSMakeRange(0,1))
        }else{
            self.courseLoction.attributedText = str
        }
    }
    
    
    func setStujson(json:JSON){
        
        if ishaddenStucourseName{
            self.cousrNameht.constant = 0.0
            self.courseTimebottomht.constant = 0.0
            self.courseName.isHidden = true
        }
        
        if self.isstuhaddenedit{
           self.btn_editor.isHidden = true
        }else{
            switch json["state"].intValue {
            case 1:
                self.btn_editor.setTitle("课前", for: .normal)
            case 2:
                self.btn_editor.setTitle("课中", for: .normal)
            case 3:
                self.btn_editor.setTitle("课后", for: .normal)
            default:
                print("课前，课中，课后")
            }
        }
        self.courseTittle.text = json["Title"].stringValue
        self.Date_text.text = self.stuNewtime(json["teachDate"].stringValue)
        self.week_lab.text = self.getStuDayOfWeek(json["teachDate"].stringValue)
        self.courseName.text = json["courseName"].stringValue
        self.courseTime.text = "\(self.stutime(json["teachDate"].stringValue))"
        if json["classSection"].stringValue.isEmpty{
            self.lab_jieci.attributedText = common.share.setAttributeString(str: "未设定节次", color: UIColor.cg, fontSize: 14, range: NSMakeRange(0,5))
        }else{
            self.lab_jieci.attributedText = common.share.changeTextChange(regex:.dW, text: "\(json["classSection"].stringValue)节", color: UIColor.cg)
        }
        self.courseClass.text =  json["className"].stringValue
        let str = common.share.setAttributeString(str: "\u{e64a}\(json["Address"].stringValue)", color: UIColor.cg, fontSize: 13, range: NSMakeRange(0,1))
        if json["Address"].stringValue.isEmpty{
            self.courseLoction.attributedText = common.share.setAttributeString(str: "\u{e64a}未设置地点", color: UIColor.cg, fontSize: 13, range: NSMakeRange(0,1))
        }else{
            self.courseLoction.attributedText = str
        }
    }
    
    
    
    private lazy var myLayer:CAShapeLayer = {
        let path = UIBezierPath.init(roundedRect: self.date_lab.bounds, byRoundingCorners: [.topLeft , .topRight] , cornerRadii: CGSize(width: 8, height: 8));
        let layer = CAShapeLayer.init();
        layer.path = path.cgPath;
        layer.lineWidth = 1;
        layer.lineCap = kCALineCapSquare;
        layer.strokeColor = UIColor.colorWithHex(hexColor: 0xFFF57656).cgColor;
        //  注意直接填充layer的颜色，不需要设置控件view的backgroundColor
        layer.fillColor = UIColor.colorWithHex(hexColor: 0xFFF57656).cgColor;
        return layer;
        
    }()
    
    private lazy var lablayer:CAShapeLayer = {
        let path = UIBezierPath.init(roundedRect: self.week_lab.bounds, byRoundingCorners: [.bottomRight , .bottomLeft] , cornerRadii: CGSize(width: 8, height: 8));
        let layer = CAShapeLayer.init();
        layer.path = path.cgPath;
        layer.lineWidth = 1;
        layer.lineCap = kCALineCapSquare;
        layer.strokeColor = UIColor.colorWithHex(hexColor: 0xFFEBE4E4).cgColor;
        //  注意直接填充layer的颜色，不需要设置控件view的backgroundColor
        layer.fillColor = UIColor.colorWithHex(hexColor: 0xFFEBE4E4).cgColor;
        return layer;
        
    }()
    
    
    // 日期格式转换
    func Newtime (_ today:String) ->String{
        let formatter  = DateFormatter()

        formatter.dateFormat = "yyyy-MM-dd hh:mm:ss"
        guard let newDate = formatter.date(from: today) else{return ""}
        formatter.dateFormat = "MM-dd"
        let date1 = formatter.string(from: newDate)
        return date1

    }
//    func time (_ today:String) ->String{
//        let formatter  = DateFormatter()
//        formatter.dateFormat = "yyyy-MM-dd hh:mm:ss"
//        guard let newDate = formatter.date(from: today) else {return ""}
//        formatter.dateFormat = "hh:mm"
//        let date1 = formatter.string(from: newDate)
//        return date1
//    }
    //根据获取星期几
    func getDayOfWeek(_ today:String) -> String {
        let weekDays = ["","星期日","星期一","星期二","星期三","星期四","星期五","星期六"]
        let formatter  = DateFormatter()
        formatter.dateFormat = "yyyy-MM-dd hh:mm:ss"
        guard let todayDate = formatter.date(from: today) else { return "" }
        let myCalendar = Calendar(identifier: .gregorian)
        let weekDay = myCalendar.component(.weekday, from: todayDate)
        return weekDays[weekDay]
    }
    
    
    
    func stuNewtime (_ today:String) ->String{
        let formatter  = DateFormatter()
        
        formatter.dateFormat = "yyyy-MM-dd"
        guard let newDate = formatter.date(from: today) else{return ""}
        formatter.dateFormat = "MM-dd"
        let date1 = formatter.string(from: newDate)
        return date1
        
    }
    
    
    func stutime (_ today:String) ->String{
        let formatter  = DateFormatter()
        formatter.dateFormat = "yyyy-MM-dd"
        guard let newDate = formatter.date(from: today) else {return ""}
        formatter.dateFormat = "hh:mm"
        let date1 = formatter.string(from: newDate)
        return date1
    }
    
    func getStuDayOfWeek(_ today:String) -> String {
        let weekDays = ["","星期日","星期一","星期二","星期三","星期四","星期五","星期六"]
        let formatter  = DateFormatter()
        formatter.dateFormat = "yyyy-MM-dd"
        guard let todayDate = formatter.date(from: today) else { return "" }
        let myCalendar = Calendar(identifier: .gregorian)
        let weekDay = myCalendar.component(.weekday, from: todayDate)
        return weekDays[weekDay]
    }

}

