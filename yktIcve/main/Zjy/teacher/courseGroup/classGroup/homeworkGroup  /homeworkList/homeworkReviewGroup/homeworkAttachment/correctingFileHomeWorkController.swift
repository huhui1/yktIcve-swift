//
//  correctingFileHomeWorkController.swift
//  云课堂2
//
//  Created by 志辉教育 on 2018/7/10.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire
import SCLAlertView
extension correctingFileHomeWorkView {
    
    
    //附件个人作业
    func getstuersonaldDada(){
        let dict = ["courseOpenId":self.courseOpenId,
                    "homeworkId":self.homeWorkId,
                    "openClassId":self.openClassId,
                    "homeworkStuId":self.homeworkStuId,
                    "stuId":self.stuId] as [String : Any]
        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.Homework_getStuFileHomeworkPreview, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let r = JSON(value)
                if r["code"] == 1{
                    self.setData(json: r)
                }else{
                    ZKProgressHUD.showMessage(r["msg"].string)
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showMessage("网络异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }
    //预览作业
    func previewHomework(){
        let dict = ["homeworkId":self.homeWorkId]
        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.Homework_previewHomework, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let r = JSON(value)
                if r["code"] == 1{
                    self.setData(json: r)
                }else{
                    ZKProgressHUD.showMessage(r["msg"].string)
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showMessage("网络异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }
    
    
    //个人作业退回
    func returnHomework() {
        let dict = ["homeworkStuId":self.homeworkStuId,
                    "teaId":Account.defaultAccount.id!]
        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.Homework_rejectHomework, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if(json["code"] == 1){
                
                    self.navigationController?.popViewController(animated: true)
                    ZKProgressHUD.showMessage(json["msg"].stringValue)
                }else{
                    ZKProgressHUD.showMessage(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showMessage("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }

    //批阅附件个人作业
    func readFileHomework(score:String){
        if score.isEmpty{
            ZKProgressHUD.showMessage("请输入分数");
            return
        }else{
            let s = Int(score)
            if s! < 0 || s! > 100{
               ZKProgressHUD.showMessage("请输入0到100之间的分数");
               return
            }
        }
        var teacommentDocJson = [Dictionary<String,Any>]()
        for i in self.teaComment{
            if i.docUrl.isEmpty{
                continue
            }
            let s = ["docTitle":i.docTitle,"docSize":i.size,"docUrl":i.docUrl,"Md5":i.md5,"docType":i.type] as [String : Any]
            
            teacommentDocJson.append(s)
        }
        
        let dict = ["teaId":self.courseOpenId,
                    "homeworkStuId":self.homeworkStuId,
                    "getScore":score,
                    "commentary":self.textComments.text,
                    "commentaryFileData":JSON.init(teacommentDocJson)] as [String : Any]
        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.Homework_readFileHomework, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
            
                    self.navigationController?.popViewController(animated: true)
                  print("success")
                }else{
                    ZKProgressHUD.showMessage(json["msg"].string)
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showMessage("网络异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }
    
    //小组作业预览
    func getTeamWorkData(){
        let dict = ["courseOpenId":self.courseOpenId,
                    "openClassId":self.openClassId,
                    "homeworkId":self.homeWorkId,
                    "hkTimeId":self.homeworkTermTimeId,
                    "groupId":self.groupId] as [String : Any]
        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.Homework_getFileGroupHKPreview, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let r = JSON(value)
                if r["code"] == 1{
                    self.setData(json: r)
                    self.groupTaskGroupId = r["data"]["groupTaskGroupId"].stringValue
                }else{
                    ZKProgressHUD.showMessage(r["msg"].string)
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showMessage("网络异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }
    //小组作业退回 Homework_rejectGroupHomeWork
    func backGroupHomework(){
        let dict = ["courseOpenId":self.courseOpenId,
                    "openClassId":self.openClassId,
                    "openClassGroupId":self.groupId,
                    "groupTaskGroupId":self.groupTaskGroupId,
                    "homeworkId":self.homeWorkId,
                    "hkTimeId":self.homeworkTermTimeId]
        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.Homework_rejectGroupHomeWork, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if(json["code"] == 1){
                
                    self.navigationController?.popViewController(animated: true)
                    ZKProgressHUD.showMessage("退回成功")
                }else{
                    ZKProgressHUD.showMessage(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showMessage("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }
    
    
    
    //保存评语(小组作业小组作答表中)
    func savecomments(){
        let dict = ["groupTaskGroupId":self.groupTaskGroupId,
                    "commentary":self.textComments.text] as [String : Any]
        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.Homework_setAllStuRemarkByGroupHK, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    let vc = correctingScoreView()
                    vc.view.backgroundColor = UIColor.init(red: 0, green: 0, blue: 0, alpha: 0.2)
                    vc.vc2.openClassId = self.openClassId
                    vc.vc2.openClassGroupId = self.groupId
                    vc.vc2.groupTaskGroupId = self.groupTaskGroupId
                    vc.vc2.homeWorkId = self.homeWorkId
                    vc.vc2.hkTimeId = self.homeworkTermTimeId
                    
                    vc.vc1.openClassId = self.openClassId
                    vc.vc1.openClassGroupId = self.groupId
                    vc.vc1.groupTaskGroupId = self.groupTaskGroupId
                    vc.vc1.homeWorkId = self.homeWorkId
                    vc.vc1.hkTimeId = self.homeworkTermTimeId
                    vc.vc1.courseOpenId = self.courseOpenId
                    
                    self.isPushed = true
                    self.present(vc, animated: true, completion: nil)
                }else{
                    ZKProgressHUD.showMessage(json["msg"].string)
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showMessage("网络异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }
    
    func setData(json:JSON){
        self.lab_title.text = json["data"]["homeworkTitle"].stringValue
        self.textComments.text = json["data"]["commentary"].stringValue
        self.stuAnswerText.text = json["data"]["stuRemark"].stringValue
        self.itemList1 = json["data"]["questions"].arrayValue
        self.itemList2 = json["data"]["stuAnswers"].arrayValue
        self.itemList3 = json["data"]["answer"].arrayValue
        if json["data"]["stuRemark"].stringValue.isEmpty{
            self.stuAnswerSizeHt.constant = 0
        }else if self.itemList2.count <= 0{
            self.collectionAnswerHt.constant = 0
        }
        self.itemList4 = json["data"]["commentaryFileData"].arrayValue
        self.collectionFile.reloadData()
        self.collectionStuAnswer.reloadData()
        self.collectionAnswer.reloadData()
        if self.ztWay != 5 {
           self.collectionComments.reloadData()
        }
    }
    
    
    //通过附件Id
    func getFileById(Id:String){
        let dict = ["Id": Id]
        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.Homework_getFileHomeworkUrlById, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    self.pushpreviewVC(json: json)
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }
    
    //通过URL获取
    func getFileInfoByUrl(url:String){
        let dict = ["url": url];
        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.MobileLogin_getFileInfoByUrl, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    
                    self.pushpreviewVC(json: json)
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
        
    }
    
    //跳转到相应界面
    func pushpreviewVC(json:JSON){
        let type = json["categoryName"].stringValue
        let jsonUrl = JSON.init(parseJSON: json["url"].stringValue)
        switch type {
        case "视频":
            let vc = videoPlayView()
            vc.courseOpenId = self.courseOpenId
            vc.isFromZjyErrorQuestion = true
            vc.videourls.removeAll()
            //拼接URL
            for (key, value) in  jsonUrl["args"]{
                if jsonUrl["urls"]["preview_oss_gen"].stringValue.isEmpty{
                    if value.boolValue{
                        let videoUrl = "\(jsonUrl["urls"]["preview"].stringValue)/\(key).mp4"
                        vc.videourls.append(videoUrl)
                    }
                }else{
                    if value.boolValue{
                        let videoUrl = "\(jsonUrl["urls"]["preview_oss_gen"].stringValue)/\(key).mp4"
                        vc.videourls.append(videoUrl)
                    }
                }
                
            }
            self.isPushed = true
            vc.hidesBottomBarWhenPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        case "图片":
            let vc = PicturePreviewView()
            vc.imgurl = jsonUrl["urls"]["preview"].stringValue
            if(jsonUrl["urls"]["preview"].stringValue.isEmpty){
                vc.imgurl = json["urls"]["preview_oss_ori"].stringValue
            }
            self.isPushed = true
            vc.hidesBottomBarWhenPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
            //        case "图文":
            //            let vc = courseware_tuWenView()
            //            vc.courseOpenId = self.courseOpenId
            //            vc.openClassId = self.openClassId
            //            vc.hidesBottomBarWhenPushed = true
            //            self.navigationController?.pushViewController(vc, animated: true)
            //        case "压缩包":
            //            let vc = courseware_tuWenView()
            //            vc.courseOpenId = self.courseOpenId
            //            vc.openClassId = self.openClassId
            //            vc.hidesBottomBarWhenPushed = true
        //            self.navigationController?.pushViewController(vc, animated: true)
        case "音频":
            let vc = audioViewController()
            vc.courseOpenId = self.courseOpenId
            vc.openClassId = self.openClassId
            vc.isNet = true
            vc.isKJ = false
            if jsonUrl["urls"]["preview"].stringValue.isEmpty{
                let str = jsonUrl["urls"]["preview_oss_ori"].stringValue
                vc.audiourl = str.substring(toIndex: str.length - 9)
            }else{
                let str = jsonUrl["urls"]["preview"].stringValue
                vc.audiourl = str.substring(toIndex: str.length - 9)
            }
            self.isPushed = true
            vc.hidesBottomBarWhenPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        case "ppt":
            if(jsonUrl["isH5"] != 1){
                let vc = stuImage_ppt_wordPreviewVC()
                vc.courseOpenId = self.courseOpenId
                vc.openClassId = self.openClassId
                vc.isfirst = false
                vc.resourceUrl = json["url"].stringValue
                self.isPushed = true
                self.navigationController?.pushViewController(vc, animated: true)
            }else{
                let vc = PPT_Animation_PreviewView()
                vc.courseOpenId = self.courseOpenId
                vc.openClassId = self.openClassId
                vc.linkStr = jsonUrl["h5PreviewUrl"].stringValue
                self.isPushed = true
                vc.hidesBottomBarWhenPushed = true
                self.navigationController?.pushViewController(vc, animated: true)
            }
        case "文档":
            let vc = stuImage_ppt_wordPreviewVC()
            vc.courseOpenId = self.courseOpenId
            vc.openClassId = self.openClassId
            vc.isfirst = false
            vc.resourceUrl = json["url"].stringValue
            self.isPushed = true
            vc.hidesBottomBarWhenPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
            
        default:
            SCLAlertView().showInfo("温馨提示！", subTitle: "暂不支持打开,请从网页查看",closeButtonTitle: "确定")
            
        }
    }
    
}

