//
//  HomeworkisReviewView.swift
//  云课堂2
//
//  Created by cc on 2018/7/9.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire
import SCLAlertView

@objc protocol HomeworkisReviewViewDategate{
    @objc optional func IsReviewDetails(Info:homeworkReviewModel) -> ()
    @objc optional func IsReviewGroupDetails(Info:HomeworkGroupModel) -> ()
}
class HomeworkisReviewView: UIViewController,UIGestureRecognizerDelegate,UITextFieldDelegate {
    @IBOutlet weak var BottomHt: NSLayoutConstraint!
    @IBOutlet weak var cancelBtn: UIButton!
    @IBOutlet weak var scoreBtn: UIButton!
    @IBOutlet weak var checkBtn: UIButton!
    @IBOutlet weak var btnHt: NSLayoutConstraint!
    @IBOutlet weak var tableView: UITableView!
    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.white
        self.setTableViewUI()
        
        if ztWay == 5{
            //小组作业
            self.getGroupData(isRefresh: true)
        }else{
            //非小组作业
            self.getData(isRefresh:true)
        }
        //下拉刷新相关设置,使用闭包Block
        self.tableView.mj_header = MJRefreshNormalHeader(refreshingBlock: {
            //重现生成数据
            self.list = []
            self.groupList = []
            if self.ztWay == 5{
                self.getGroupData(isRefresh: false)
            }else{
                self.getData(isRefresh:false)
            }
        })
        //附件作业的批量打分
        if self.ztWay != 3{
            self.btnHt.constant = 0
        }else if ztWay == 3{
            self.setFootUI()
        }
        // Do any additional setup after loading the view.
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    var IsReviewDetailsDategate:HomeworkisReviewViewDategate!
    //批量打分
    func  setFootUI(){
        self.checkBtn.setTitle("全选", for: .normal)
        self.checkBtn.backgroundColor = UIColor.white
        self.checkBtn.setTitleColor(UIColor.gray, for: .normal)
        self.checkBtn.titleLabel?.font = UIFont.init(name: "iconfont", size: 16)
        self.checkBtn.contentMode = .center
        self.checkBtn.tag = 1
        
        self.scoreBtn.setTitle("批量打分", for: .normal)
        self.scoreBtn.backgroundColor = UIColor.colorWithHex(hexColor: 0x20bb8c)
        self.scoreBtn.setTitleColor(UIColor.white, for: .normal)
        self.scoreBtn.tag = 2
        self.scoreBtn.addTarget(self, action: #selector(self.ReviewAllHomework), for: .touchUpInside)
        
        self.cancelBtn.setTitle("取消", for: .normal)
        self.cancelBtn.backgroundColor = UIColor.bg
        self.cancelBtn.setTitleColor(UIColor.white, for: .normal)
        self.cancelBtn.tag = 2
        self.cancelBtn.addTarget(self, action: #selector(self.closeEditing), for: .touchUpInside)
        
        
        self.checkBtn.addSubview(btnAllIcon)
        btnAllIcon.snp.makeConstraints { (make) in
            make.width.height.equalTo(26)
            make.centerX.equalTo(checkBtn.snp.centerX).offset(-40)
            make.centerY.equalTo(checkBtn.snp.centerY) 
        }
        self.btnAllIcon.addTarget(self, action: #selector(self.checkAll(_:)), for: .touchUpInside)
        self.btnAllIcon.layer.masksToBounds = true
        self.btnAllIcon.layer.cornerRadius = 13
    }
    
    
    init() {
        super.init(nibName: "HomeworkisReviewView", bundle: nil)
    }
    
    override func viewDidLayoutSubviews() {
        
    }
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    
    var stuIdList = [String]()
    var list = [homeworkReviewModel]()
    var groupList = [HomeworkGroupModel]()
    var ztWay:Int = 1
    lazy var courseOpenId:String = ""
    lazy var openClassId:String = ""
    lazy var homeworkTermTimeId:String = ""
    lazy var homeWorkId:String = ""
    lazy var homeworkStuId:String = ""
    lazy var homeworkType:Int = 0
    lazy var btnAllIcon : UIButton = {
        let btn = UIButton()
        btn.setTitle("\u{e69d}", for: .normal)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 26)
        btn.setTitle("\u{e669}", for: .selected)
        btn.setTitleColor(UIColor.colorWithHex(hexColor: 0xf3f3f3), for: .normal)
        btn.setTitleColor(UIColor.white, for: .selected)
        return btn
    }()
    var textField = UITextField()
}



//TableView


extension HomeworkisReviewView:UITableViewDelegate,UITableViewDataSource{
    
    fileprivate func setTableViewUI(){
        if common.share.isX(){
            self.BottomHt.constant = 30
        }
        self.tableView.delegate = self
        self.tableView.dataSource = self
    
        //创建一个重用的单元格
        if ztWay == 5{
            self.tableView.register(HomeworkGroupTableViewCell.self, forCellReuseIdentifier: "HomeworkGroupTableViewCell");
        }else{
            self.tableView.register(HomeworkReviewCell.self, forCellReuseIdentifier: "HomeworkReviewCell");
        }
        //
        self.tableView.tableFooterView = UIView(frame:CGRect.zero)//除去多余的cell
        //
        if #available(iOS 9.0, *) {
            self.tableView.cellLayoutMarginsFollowReadableWidth = false
        }
        if self.ztWay == 3{
            let longpress = UILongPressGestureRecognizer(target: self, action: #selector(self.longpressGesutre))
            //长按时间为1秒
            longpress.minimumPressDuration = 1
            longpress.delegate = self
            //所需触摸1次
            longpress.numberOfTouchesRequired = 1
            self.view.addGestureRecognizer(longpress)
        }
    }
    
    
    //打开编辑状态
    @objc func longpressGesutre(r:UILongPressGestureRecognizer){
        self.tableView.allowsMultipleSelectionDuringEditing = true
        self.tableView.setEditing(true, animated:true)
        self.tableView?.reloadData()
    }
    //关闭编辑状态
    @objc func closeEditing(){
        self.tableView.allowsMultipleSelectionDuringEditing = false
        self.tableView.setEditing(false, animated:true)
        self.btnAllIcon.backgroundColor = UIColor.white
        self.tableView?.reloadData()
    }
//    func numberOfSections(in tableView: UITableView) -> Int {
//        // #warning Incomplete implementation, return the number of sections
//        return 1
//    }
//    
 
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        // #warning Incomplete implementation, return the number of rows
        if ztWay == 5{
            return self.groupList.count
        }else{
            return self.list.count
        }
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        if ztWay == 5{
            return UITableViewAutomaticDimension
        }else{
            return 60
        }
    }
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        //小组作业
        if ztWay == 5{
            let cell:HomeworkGroupTableViewCell = tableView.dequeueReusableCell(withIdentifier: "HomeworkGroupTableViewCell") as! HomeworkGroupTableViewCell
            let data = self.groupList[indexPath.row]
            cell.setGroupIsreview(data: data)
            return cell
        }else{
            //非小组作业
            let cell:HomeworkReviewCell = tableView.dequeueReusableCell(withIdentifier: "HomeworkReviewCell") as! HomeworkReviewCell
            let data = self.list[indexPath.row]
            cell.setIsreview(json: data)
            cell.delegate = self
            cell.btn_return.tag = indexPath.row
            
            //内容标签是否可编辑
            cell.labelEditable = !tableView.isEditing
           
            return cell
        }
    }
    
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        //小组作业
        if ztWay == 5{
            let data = self.groupList[indexPath.row]
            self.IsReviewDetailsDategate?.IsReviewGroupDetails!(Info: data)
        }else{
            //非小组作业
            let data = self.list[indexPath.row]
            if self.tableView.isEditing == false{
                self.IsReviewDetailsDategate?.IsReviewDetails!(Info: data)
            }else{
                
                if  list[indexPath.row].isChecked {
                    list[indexPath.row].isChecked = false //原来选中的取消选中
                }else{
                    list[indexPath.row].isChecked = true //原来没选中的就选中
                }
            }
        }
    }

    //处理列表项的取消选中事件
    func tableView(_ tableView: UITableView, didDeselectRowAt indexPath: IndexPath) {
        //判断该行是否时编辑状态,并且编辑状态开启
        if self.tableView!.isEditing == true{
            
            if  list[indexPath.row].isChecked {
                list[indexPath.row].isChecked = false //原来选中的取消选中
            }else{
                list[indexPath.row].isChecked = true //原来没选中的就选中
            }
            
        }
    }
    
    
    
    
}






//数据请求接口
extension HomeworkisReviewView:HomeworkReviewCellDelegate{
    //退回
    func returnHomework(_ btn: UIButton) {
        let alertController = UIAlertController(title: "提示",
                                                message:"确定退回该学生作业吗？", preferredStyle: .alert)
        let cancelAction = UIAlertAction(title: "取消", style: .cancel, handler: nil)
        let okAction = UIAlertAction(title: "确定", style:.default, handler: {
            action in
                let json = self.list[btn.tag]
                let dict = ["homeworkStuId":json.homeworkStuId,
                            "teaId":Account.defaultAccount.id!]
                XLBallLoading.show(in: self.view)
                Alamofire.request(appAPI.Homework_rejectHomework, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
                    if let value = response.result.value {
                        let json = JSON(value)
                        if(json["code"]>0){
                            ZKProgressHUD.showMessage(json["msg"].stringValue)
                            self.tableView.allowsMultipleSelectionDuringEditing = false
                            self.tableView.setEditing(false, animated:true)
                            self.list = []
                            self.getData(isRefresh: false)
                            common.share.setTableFootView_noData(self.tableView, list: self.list as NSArray)
                        }else{
                            ZKProgressHUD.showMessage(json["msg"].stringValue);
                        }
                        XLBallLoading.hide(in: self.view)
                    }else{
                        ZKProgressHUD.showMessage("网络环境异常请稍后再试！");
                        XLBallLoading.hide(in: self.view)
                    }
                }
        })
        alertController.addAction(cancelAction)
        alertController.addAction(okAction)
        self.present(alertController, animated: true, completion: nil)
    }
    //获取非小组作业
    func getData(isRefresh:Bool){
        let dict = ["courseOpenId":courseOpenId,
                    "openClassId":openClassId,
                    "homeWorkId":homeWorkId,
                    "homeworkTermTimeId":homeworkTermTimeId,
                    "state":2] as [String : Any]
        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.Homework_getReadStuList, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if(json["code"]>0){
                    self.getList(isRefresh: isRefresh, json: json["homeworkStuList"])
                    self.homeworkStuId = json["homeworkStuList"][0]["homeworkStuId"].stringValue
                    self.tableView.reloadData()
                    if(!isRefresh){
                        //结束刷新
                        self.tableView.mj_header.endRefreshing()
                    }
                }else{
                    ZKProgressHUD.showMessage(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showMessage("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }
    //获取数据,小组作业
    func getGroupData(isRefresh:Bool){
        let dict = ["openClassId":openClassId,
                    "homeworkId":homeWorkId,
                    "hkTimeId":homeworkTermTimeId,
                    "state":2] as [String : Any]
        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.Homework_getReadGroupHKList, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if(json["code"]>0){
                    self.getGroupList(isRefresh: isRefresh, json: json["groupList"])
                    if(!isRefresh){
                        //结束刷新
                        self.tableView.mj_header.endRefreshing()
                    }
                }else{
                    ZKProgressHUD.showMessage(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showMessage("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }
    
    //小组作业
    func getGroupList(isRefresh:Bool,json:JSON){
        for i in json {
            let Info = HomeworkGroupModel.init(data: i.1)
            self.groupList.append(Info)
        }
        common.share.setTableFootView_noData(self.tableView, list: self.groupList as NSArray)
        self.tableView.reloadData()
    }
    
    func getList(isRefresh:Bool,json:JSON){
        self.list = []
        for i in json {
            let Info = homeworkReviewModel.init(data: i.1, _isChecked: false) 
            self.list.append(Info)
        }
        self.tableView.reloadData()
        common.share.setTableFootView_noData(self.tableView, list: self.list as NSArray)
       
    }
    //全选
    @objc func checkAll(_ btn:UIButton){
        self.tableView.reloadData()
        btn.isSelected = !btn.isSelected
        self.btnAllIcon.isSelected = btn.isSelected
        if(btn.isSelected){
            self.btnAllIcon.backgroundColor = UIColor.bg
            self.tableView.allowsMultipleSelectionDuringEditing = true
            self.tableView.setEditing(true, animated:true)
        }else{
            self.btnAllIcon.backgroundColor = UIColor.white
            self.tableView.allowsMultipleSelectionDuringEditing = false
            self.tableView.setEditing(false, animated:true)
        }
        
        for i in 0 ..< self.list.count {
            
            let indexPath =  NSIndexPath.init(item: i, section: 0) as IndexPath
            
            
            if(btn.isSelected){
                self.tableView.selectRow(at: indexPath , animated: true, scrollPosition: UITableViewScrollPosition.none)
            }else{
                self.tableView.deselectRow(at :indexPath, animated: true)
            }
            
            self.list[i].isChecked = btn.isSelected
            
        }
    }
    //批量打分
    @objc func ReviewAllHomework(){
        self.stuIdList.removeAll()
        self.list.filter({
            if $0.isChecked{
                self.stuIdList.append($0.homeworkStuId)
            }
            return true
        })
   
        
        if self.stuIdList.count == 0{
            ZKProgressHUD.showMessage("请选择要打分的学生！")
            return
        }
        let alert = SCLAlertView()
        //添加第一个输入框
        self.textField = alert.addTextField("输入分数")
        self.textField.delegate = self
        textField.keyboardType = .numberPad
        alert.addButton("确定") {
            let dict = ["teaId":Account.defaultAccount.id!,
                        "openClassId":self.openClassId,
                        "homeworkId":self.homeWorkId,
                        "homeworkStuIds":self.stuIdList,
                        "getScore":self.textField.text!,
                        "commentary":"",
                        "sourceType":3] as [String : Any]
            XLBallLoading.show(in: self.view)
            Alamofire.request(appAPI.Homework_readStusFileHomework, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
                if let value = response.result.value {
                    let json = JSON(value)
                    if(json["code"]>0){
                        self.tableView.allowsMultipleSelectionDuringEditing = false
                        self.tableView.setEditing(false, animated:true)
                        self.list = []
                        self.getData(isRefresh: false)
                        self.btnAllIcon.backgroundColor = UIColor.white
                    }else{
                        ZKProgressHUD.showMessage(json["msg"].stringValue)
                    }
                    XLBallLoading.hide(in: self.view)
                }else{
                    XLBallLoading.hide(in: self.view)
                    ZKProgressHUD.showMessage("网络环境异常请稍后再试！");
                }
            }
        }
        alert.showEdit("", subTitle: "请输入设置的分数", closeButtonTitle: "取消")
    }
    func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String) -> Bool {
        var newString = (textField.text! as NSString).replacingCharacters(in: range, with: string)
        let expression = "^[0-9]*(?:\\.[0-9]{0,2})?$"
        
        do {
            let regex: NSRegularExpression = try NSRegularExpression(pattern: expression, options: NSRegularExpression.Options.caseInsensitive)
            let numberOfMatches = regex.matches(in: newString, options: NSRegularExpression.MatchingOptions.reportProgress, range: NSMakeRange(0, newString.count))
            if numberOfMatches.count == 0{
                return false
            }else{
                if newString != "" {
                    if newString[newString.startIndex] == "." {
                        newString = "0" + newString
                    }
                    if newString[newString.index(before: newString.endIndex)] == "." {
                        newString = newString + "0"
                    }
                    if (Double(newString)! > 100.0){
                        textField.text = "100"
                        return false
                    }
                }
                return true
            }
        }
        catch {
            return false
        }
    }
}
