//
//  previewPaperView.swift
//  云课堂职教云
//
//  Created by zqy on 2018/4/9.
//  Copyright © 2018年 jcjy. All rights reserved.
//

import UIKit
import WebKit
import SwiftyJSON
class previewPaperView: UIViewController,WKScriptMessageHandler,WKNavigationDelegate {
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.title = self.homeworkTitle
        self.view.backgroundColor = UIColor.white
        self.setWebViewUI()
        let item = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = item
    }
    
    //设置H5页面
    func setWebViewUI(){
        
        let path = Bundle.main.path(forResource: "previewPaper", ofType: ".html",
                                    inDirectory: "HTML5/src/teacher/homework");
        let url = URL(fileURLWithPath:path!);
        //let request = URLRequest(url:url);
        
        //创建供js调用的接口
        let theConfiguration = WKWebViewConfiguration()
        theConfiguration.userContentController.add(self, name: "interOp")
        
        //将浏览器视图全屏(在内容区域全屏,不占用顶端时间条)
        let frame = CGRect(x:0, y:0, width:UIScreen.main.bounds.width,
                           height:UIScreen.main.bounds.height-60 + CGFloat(HX))
        theWebView = WKWebView(frame:frame, configuration: theConfiguration)
        //禁用页面在最顶端时下拉拖动效果
        //        theWebView.scrollView.bounces = false;
        //        theWebView.isUserInteractionEnabled = false;
        //加载页面
        if #available(iOS 9.0, *) {
            
            theWebView.loadFileURL(url, allowingReadAccessTo: url)
        } else {
            
            do{
                
                let url1 = try common.share.fileURLForBuggyWKWebView8(fileURL:url as NSURL)
                let request = URLRequest(url:url1 as URL);
                theWebView.load(request)
                
            }catch{}
        }
        //theWebView.load(request)
        theWebView.navigationDelegate = self
        self.view.addSubview(theWebView);
        
    }
    func webView(_ webView: WKWebView, decidePolicyFor navigationAction: WKNavigationAction, decisionHandler: @escaping (WKNavigationActionPolicy) -> Void) {
        let url = navigationAction.request.mainDocumentURL
        if((url?.scheme?.contains("http"))! || (url?.scheme?.contains("https"))!){
            //
            print("拒绝")
            let vc = linkjumpView()
            vc.linkStr = (navigationAction.request.mainDocumentURL?.absoluteString)!
            self.isPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
            //            UIApplication.shared.openURL(url! as URL)
            decisionHandler(.cancel);
        }else{
            decisionHandler(.allow);
        }
    }
    override func viewWillDisappear(_ animated: Bool) {
        if(!self.isPushed){
            theWebView.configuration.userContentController.removeScriptMessageHandler(forName: "interOp")
            
        }
        self.isPushed = false
    }
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    func userContentController(_ userContentController:WKUserContentController,
                               didReceive message: WKScriptMessage) {
        let sentData = message.body as! Dictionary<String,String>
        
        if(sentData["method"] == "load" ){
            self.previewHomework()
        }else if(sentData["method"] == "getUrlById"){
            self.getFileById(Id:sentData["Id"]!)
        }else if(sentData["method"] == "showmsg"){
            ZKProgressHUD.showMessage(sentData["msg"]!)
            self.navigationController?.popViewController(animated: true)
        }else if(sentData["method"] == "Msg"){
             ZKProgressHUD.showMessage(sentData["msg"]!)
            return
        }else if(sentData["method"] == "getFileInfoByUrl"){
            self.getFileInfoByUrl(url: sentData["url"]!)
        }else if(sentData["method"] == "previewImg"){
            self.previewImg(url:sentData["url"]!)
        }
    }
    
    lazy var theWebView:WKWebView = {
        let WK = WKWebView()
        
        return WK
    }()
    lazy var courseOpenId: String = {
        return""
    }()
    lazy var openClassId: String = {
        return ""
    }()
    lazy var homeWorkId: String = {
        return ""
    }()
    lazy var homeworkTitle: String = {
        return ""
    }()
    lazy var isPushed:Bool = {
        return false
    }()
   
    let HX = common.share.returnSafeAreaLineHeight()
}



