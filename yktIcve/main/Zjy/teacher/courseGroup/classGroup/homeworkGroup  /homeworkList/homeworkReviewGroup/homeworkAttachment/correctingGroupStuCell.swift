//
//  correctingGroupStuCell.swift
//  云课堂2
//
//  Created by 尤增强 on 2018/7/7.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire

class correctingGroupStuCell: UITableViewCell,UITextFieldDelegate {
    var toolBar = UIToolbar();
    lazy var courseOpenId:String = ""
    lazy var openClassId:String = ""
    lazy var openClassGroupId:String = ""
    lazy var groupTaskGroupId:String = ""
    lazy var hkTimeId:String = ""
    lazy var homeWorkId:String = ""
    var j = 0
    lazy var list = [correctingGroupScoreModel]()
    @IBOutlet weak var textSocre: UITextField!
    @IBOutlet weak var lab_stuName: UILabel!
    override func awakeFromNib() {
        super.awakeFromNib()
        // Initialization code
        self.textSocre.delegate = self
        self.textSocre.keyboardType = .numberPad
        
        self.toolBar = common.share.AddToolKeyboardDoneBar()
        let doneButton = UIBarButtonItem(title: "确定", style: .plain, target: self, action: #selector(self.DoneClick));
        let spaceButton = UIBarButtonItem(barButtonSystemItem: .flexibleSpace, target: nil, action: nil)
        toolBar.setItems([spaceButton,doneButton], animated: false);
    }
    @objc func DoneClick(){
        self.endEditing(true)
    }
    override func setSelected(_ selected: Bool, animated: Bool) {
        super.setSelected(selected, animated: animated)

        // Configure the view for the selected state
    }
    func setdata(json:correctingGroupScoreModel){
        self.lab_stuName.text = json.displayName
        if json.State != 2{
            self.textSocre.placeholder = "未批"
        }else{
            self.textSocre.text = "\(json.getScore)"
        }
    }
    func textFieldDidEndEditing(_ textField: UITextField) {
        print(textField.text!)
        self.setScore(textField)
    }

    //字数限制
    func textView(_ textView: UITextView, shouldChangeTextIn range: NSRange, replacementText text: String) -> Bool {
        if range.location >= 2 {
            ZKProgressHUD.showMessage("请输入0—100之间的分数")
            return false
        }
        return true
    }
    func textFieldDidBeginEditing(_ textField: UITextField) {
        textField.inputAccessoryView = toolBar;
    }
   
    //更改分数 Homework_setOneStuScoreByGroupHK
    func setScore(_ textField: UITextField){
            var isLast = false
            if textField.text!.isEmpty{
                ZKProgressHUD.showMessage("请输入分数");
            }else{
                let s = Int(textField.text!)
                if s! <= 0 || s! > 100{
                    ZKProgressHUD.showMessage("请输入0到100之间的分数");
                    return
                }
            }
            j = 0
            for i in self.list{
                //已批
                if i.State == 2{
                   j = j + 1
                }
                if j >= self.list.count - 1{
                    isLast = true
                }else{
                    isLast = false
                }
                print("================\(isLast)")
            }
            let dict = ["openClassId":self.openClassId,
                        "openClassGroupId":self.openClassGroupId,
                        "groupTaskGroupId":self.groupTaskGroupId,
                        "homeworkId":self.homeWorkId,
                        "hkTimeId":self.hkTimeId,
                        "stuId":self.list[textField.tag].stuId,
                        "getScore":textField.text!,
                        "isLast":isLast] as [String : Any]
            Alamofire.request(appAPI.Homework_setOneStuScoreByGroupHK, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
                if let value = response.result.value {
                    let json = JSON(value)
                    if json["code"] == 1{
                        self.list[textField.tag].State = 2
                        if isLast{
                           ZKProgressHUD.showMessage("批改成功")
                        }
                    }else{
                        ZKProgressHUD.showMessage(json["msg"].string)
                    }
                }else{
                    ZKProgressHUD.showMessage("网络异常请稍后再试！");
                    
            }
        }
     }
  
}
