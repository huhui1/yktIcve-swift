//
//  askSelectStuController.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2018/1/23.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import Alamofire
import SwiftyJSON

extension  selStuAskView {

    func refreshItemData(isRefresh:Bool){

        let dict = ["activityId":self.activityId,
                    "courseOpenId":self.courseOpenId,
                    "orderColumn":self.orderColumn,
                    "isAsc":self.isAsc,
                    "stu":self.stu,
                    "askId":self.askId] ;
        Alamofire.request(appAPI.FaceTeach_getAllAskStuList, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in

            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    self.list = []
                    if json["stuList"].count > 0{
                        self.list = json["stuList"].arrayValue as NSArray
                    }

                   self.fetchCoverDetails(isRefresh: isRefresh)
                }else{
                    ZKProgressHUD.showError("网络异常请稍后再试！");
                }
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }
        
    }

    @objc func orderBytype(_ btn:UIButton){

        if self.topview.btn_attend != btn {
            self.topview.btn_attend.isSelected = false
        }
        if self.topview.btn_score != btn {
            self.topview.btn_score.isSelected = false
        }
        if self.topview.btn_stuNO != btn {
            self.topview.btn_stuNO.isSelected = false
        }
        let tag = btn.tag
        btn.isSelected = !btn.isSelected

        self.orderByType(type: tag,isAsc:btn.isSelected)

        self.topview.line.snp.remakeConstraints { (make) in
            make.centerX.equalTo(btn.snp.centerX)
            make.left.equalTo(btn.snp.left)
            make.height.equalTo(1)
            make.bottom.equalTo(self.topview.bgview.snp.bottom)
        }

    }

    func orderByType(type:Int,isAsc:Bool){

        if(type == 1){
            self.selStuInfos.sort(by: {(stu1, stu2) in
                if(isAsc){
                  return stu1.StuNo > stu2.StuNo
                }else{
                    return stu1.StuNo < stu2.StuNo
                }

            })
        }else if (type == 2){
            self.selStuInfos.sort(by: {(stu1, stu2) in
                if(isAsc){
                    return stu1.joinAskCount > stu2.joinAskCount
                }else{
                    return stu1.joinAskCount < stu2.joinAskCount
                }

            })
        }else {

            self.selStuInfos.sort(by: {(stu1, stu2) in
                if(isAsc){
                    return stu1.joinAskScore > stu2.joinAskScore
                }else{
                    return stu1.joinAskScore < stu2.joinAskScore
                }
            })

        }
        self.tableView.reloadData()

    }

    @objc func checkAll(_ btn:UIButton){

        btn.isSelected = !btn.isSelected
        self.btnIcon.isSelected = btn.isSelected
        if(btn.isSelected){
           self.btnIcon.backgroundColor = UIColor.bg
        }else{
           self.btnIcon.backgroundColor = UIColor.white
        }

        for i in 0 ..< self.selStuInfos.count {

            let indexPath =  NSIndexPath.init(item: i, section: 0) as IndexPath
            

            if(btn.isSelected){
                self.tableView.selectRow(at: indexPath , animated: true, scrollPosition: UITableViewScrollPosition.none)
            }else{
                self.tableView.deselectRow(at :indexPath, animated: true)
            }

            self.selStuInfos[i].isCheck = btn.isSelected

        }
    }
    
    
    @objc func submit(_ btn:UIButton){
        btn.isEnabled = false
        for i in 0 ..< self.selStuInfos.count {
            let indexPath =  NSIndexPath.init(item: i, section: 0) as IndexPath
            let cell = tableView.dequeueReusableCell(withIdentifier: "SwiftCell",
                                                     for: indexPath) as! askSelStuCell
            if(cell.isSelected){
                //NS array adding  不能添加数据
                self.stuIdList.append(self.selStuInfos[i].Id)
            }
        
        }
         XLBallLoading.show(in: self.view)
        let dict=["quizId":self.askId,"openClassIds":self.openClassIds,"askType":2,"stuIdList":self.stuIdList,"sourceType":3] as [String : Any]
        Alamofire.request(appAPI.FaceTeach_saveQuizStu, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            XLBallLoading.hide(in: self.view)
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    let vc = batchScorseTableView()
                        vc.quizId = self.askId
                        vc.activityId = self.activityId
                        vc.courseOpenId = self.courseOpenId
                        vc.askType = self.askType
                if(self.source == 1){
                    let ct = self.navigationController?.viewControllers.count
                    self.navigationController?.viewControllers.remove(at: ct!-2)
                }
                self.navigationController?.pushViewController(vc, animated: true)
                let count = self.navigationController?.viewControllers.count;
                 self.navigationController?.viewControllers.remove(at: count!-2)
                }else{
                    ZKProgressHUD.showError("网络异常请稍后再试！");
                }
                btn.isEnabled = true
            }else{
                XLBallLoading.hide(in: self.view)
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }

        
    }
}
