//
//  askQuestionListTableView.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2018/1/13.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import SwiftyJSON

class askQuestionListTableView: UITableViewController {

    var list :NSArray = [];
    override func viewDidLoad() {
        super.viewDidLoad()
        self.navigationController?.navigationBar.setBackgroundImage(UIImage(), for: UIBarMetrics.default)
        self.navigationController?.navigationBar.shadowImage = UIImage()
        let topview = askQuestionListTopView.init(frame: CGRect.init(x: 0, y: 0, width: UIScreen.main.bounds.width, height: 120))

        tableView.tableHeaderView = topview
        topview.Btn_shake.addTarget(self, action: #selector(self.tap(_:)), for: .touchUpInside)
        topview.Btn_selStu.addTarget(self, action: #selector(self.tap(_:)), for: .touchUpInside)
        topview.Btn_Answer.addTarget(self, action: #selector(self.tap(_:)), for: .touchUpInside)
        tableView.register(discussTableViewCell.self, forCellReuseIdentifier: "SwiftCell");
        tableView.tableFooterView = UIView(frame:CGRect.zero)//除去多余的cell
        tableView.separatorInset = UIEdgeInsets.zero;

        tableView.layoutMargins = UIEdgeInsets.zero;

        if #available(iOS 9.0, *) {
            tableView.cellLayoutMarginsFollowReadableWidth = false
        } else {
            // Fallback on earlier versions
        }

        self.refreshItemData(isRefresh: true)

        //下拉刷新相关设置,使用闭包Block
        self.tableView.mj_header = MJRefreshNormalHeader(refreshingBlock: {
            //重现生成数据
            self.refreshItemData(isRefresh:false);

        })
        // Uncomment the following line to preserve selection between presentations
        // self.clearsSelectionOnViewWillAppear = false

        // Uncomment the following line to display an Edit button in the navigation bar for this view controller.
        // self.navigationItem.rightBarButtonItem = self.editButtonItem()
        let item = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = item
    }

  

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    override func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }

    override func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat
    {
        return 50;
    }

    //返回表格行数（也就是返回控件数）
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {

        return self.list.count;
    }

    //创建各单元显示内容(创建参数indexPath指定的单元）
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath)
        -> UITableViewCell {
            let colorarr = [0x53d135,0x53d135,0x04ae84,0xf2f2f2];
            let Staterarr = ["","未开始","进行中","已结束"];
            let cell:discussTableViewCell = tableView.dequeueReusableCell(withIdentifier: "SwiftCell") as! discussTableViewCell

            let json = JSON(self.list[indexPath.row]);

            cell.lab_state.text = Staterarr[json["State"].intValue];
            cell.lab_state.backgroundColor = UIColor.colorWithHex(hexColor: Int64(colorarr[json["State"].intValue]))
            cell.lab_title.text = json["Title"].stringValue
            cell.accessoryType = .disclosureIndicator;
            if(json["State"].int == 3){
                cell.lab_state.textColor = UIColor.gray;
            }else{
                cell.lab_state.textColor = UIColor.white;
            }
          
            return cell
    }

    //点击
    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {

        tableView .deselectRow(at: indexPath, animated: true)
        let json = JSON(self.list[indexPath.row]);
        

        if(json["State"]==1){
            let vc = createView();
            vc.quizId = json["Id"].stringValue
            vc.activityId = self.activityId
            vc.courseOpenId = self.courseOpenId
            vc.askType =  json["AskType"].intValue
            vc.askTitle = json["Title"].stringValue
            vc.askContent = json["Content"].stringValue
            vc.reloadAskQuestionListClosure = {() in
                self.refreshItemData(isRefresh: true)
            }
            self.navigationController?.pushViewController(vc, animated: true);

        }else if(json["State"]==2){

            if(json["AskType"].intValue == 3){
                let vc = respondingTableView();
                vc.activityId = self.activityId
                vc.courseOpenId = self.courseOpenId
                vc.askId = json["Id"].stringValue
                vc.openClassIds = self.openClassIds
                vc.askType =  json["AskType"].intValue
                self.navigationController?.pushViewController(vc, animated: true);
            }else{
                let vc = batchScorseTableView();
                vc.activityId = self.activityId
                vc.courseOpenId = self.courseOpenId
                vc.quizId = json["Id"].stringValue
                vc.openClassIds = self.openClassIds
                vc.askType =  json["AskType"].intValue
                self.navigationController?.pushViewController(vc, animated: true);
            }
        }else{
            let vc = batchScorseTableView();
            vc.activityId = self.activityId
            vc.courseOpenId = self.courseOpenId
            vc.quizId = json["Id"].stringValue
            vc.openClassIds = self.openClassIds
            vc.askType =  json["AskType"].intValue
            vc.state = 3
           
            self.navigationController?.pushViewController(vc, animated: true);
        }

    
    }

    //返回编辑类型，滑动删除

    override func tableView(_ tableView: UITableView, editingStyleForRowAt indexPath: IndexPath) -> UITableViewCellEditingStyle {

        return UITableViewCellEditingStyle.delete

    }

    //在这里修改删除按钮的文字

    override func tableView(_ tableView: UITableView, titleForDeleteConfirmationButtonForRowAt indexPath: IndexPath) -> String? {

        return "删除"

    }

    //点击删除按钮的响应方法，在这里处理删除的逻辑

    override func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {
        //删除数据源当前的数据
        let alertController = UIAlertController(title: "提示！",
                                                message:"是否删除该次提问？", preferredStyle: .alert)
        let cancelAction = UIAlertAction(title: "取消", style: .cancel, handler: nil)
        
        let okAction = UIAlertAction(title: "确定", style: .destructive, handler: {
            action in
            if editingStyle == UITableViewCellEditingStyle.delete {
                
                if editingStyle == UITableViewCellEditingStyle.delete {
                    //删除数据源当前的数据
                    self.delaskQuestionList(Id: JSON(self.list[indexPath.row])["Id"].stringValue, tableView, forRowAt: indexPath)
                    
                }
            }
        })
        alertController.addAction(cancelAction)
        alertController.addAction(okAction)
        self.present(alertController, animated: true, completion: nil)
      

    }
    lazy var activityId :String = {return ""}()
    lazy var courseOpenId :String = {return ""}()
    lazy var classState:Int = {return 0 }()
    lazy var openClassIds :String = {return ""}()
    lazy var openClassStuCount :Int = {return 0}()
    lazy var BrainStormStuCount :Int = {return 0}()
    
}
