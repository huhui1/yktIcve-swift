//
//  createAskquestionController.swift
//  66iclasscloud
//
//  Created by zqy on 2018/1/26.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import Alamofire
import SwiftyJSON

extension createView{
    @objc func createAskquestion(_ btn:UIButton){
        let askTitle = askQuestionTitleText.text!
        let askContent = contenText.text!
        let dict = ["Id":self.quizId,
                  "CreatorId":Account.defaultAccount.id!,
                  "CourseOpenId":self.courseOpenId,
                  "ActivityId":self.activityId,
                  "Title":askTitle,
                  "Content":askContent,
                  "State":btn.tag,
                  "AskType":self.askType,
                  "SourceType":3] as [String : Any]
         let data = ["data":JSON.init(dict)]
        Alamofire.request(appAPI.FaceTeach_addQuiz, method: .post, parameters: data, encoding: URLEncoding.default).responseJSON { response in
            
            if let value = response.result.value {
                let json = JSON(value)
                 if(json["code"] == 1){
                    self.reloadAskQuestionListClosure!();
                    NotificationCenter.default.removeObserver(self)
                    self.pushVC(tag:btn.tag,json:json)
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }

    }

    //跳转
    fileprivate  func pushVC(tag :Int ,json:JSON){
        if(tag==1){
            self.navigationController?.popViewController(animated: true)
        }else{
            if(self.askType==1){
                self.addEventListener()
                let vc = shakeAskQuestionView()
                vc.askId=json["quizId"].stringValue
                vc.activityId=self.activityId
                vc.courseOpenId=self.courseOpenId
                vc.askType = self.askType
                vc.openClassIds = self.openClassIds
                self.navigationController?.pushViewController(vc, animated: true)
            }else if(self.askType==2){
                self.addEventListener()
                let vc = selStuAskView()
                vc.askId=json["quizId"].stringValue
                vc.activityId=self.activityId
                vc.courseOpenId=self.courseOpenId
                vc.askType = self.askType
                vc.openClassIds = self.openClassIds
                self.navigationController?.pushViewController(vc, animated: true)
            }else {
                let vc = respondingTableView()
                vc.askId=json["quizId"].stringValue
                vc.activityId=self.activityId
                vc.courseOpenId=self.courseOpenId
                vc.askType = self.askType
                vc.openClassIds = self.openClassIds
                self.sendGEUIMSG(askId: json["quizId"].stringValue)
                self.navigationController?.pushViewController(vc, animated: true)
            }
            let count = self.navigationController?.viewControllers.count;
            self.navigationController?.viewControllers.remove(at: count!-2)
        }

    }

   fileprivate func addEventListener(){

        let params = ["type":"shake",
                      "activityId": self.activityId,
                      "courseOpenId": self.courseOpenId,
                      "schoolId": Account.defaultAccount.schoolId!,
                      "fromRes":false] as [String : Any];

        let dict = ["type":"face",
                    "params":JSON.init(params).description ];
        NotificationCenter.default.post(name:self.NotifyChatMsgRecv, object: dict);

    }
    //个推消息
    fileprivate func sendGEUIMSG(askId:String){

        let dict = ["actionType":"responding",
                    "title":askQuestionTitleText.text ?? "",
                    "actId":askId,
                    "creatorId":Account.defaultAccount.id!,
                    "faceId":self.activityId,
                    "openClassIds":self.openClassIds,
                    "courseOpenId":self.courseOpenId] as [String : Any];

        geTuiSendController.share.sendGTMSG(str: JSON.init(dict).description, userId: Account.defaultAccount.id!, openClassIds: self.openClassIds)

    }

}
