//
//  respondingController.swift
//  云课堂-职教云
//
//  Created by 尤增强 on 2018/3/8.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire

extension  respondingTableView {

    func setTime(){

        // 在global线程里创建一个时间源
        codeTimer = DispatchSource.makeTimerSource(queue:  DispatchQueue.global())
        // 设定这个时间源是每秒循环一次，立即开始
        codeTimer?.schedule(deadline: .now(), repeating: .seconds(10))
        // 设定时间源的触发事件
        codeTimer?.setEventHandler(handler: {
            // 每秒计时一次
            print(self.refreshCount)
            self.refreshCount = self.refreshCount + 1
        })
        // 启动时间源
        codeTimer?.resume()
    }
   
    func addEventListener(){


        let params = ["type":"responding",
                      "askId":self.askId,
                      "activityId": self.activityId,
                      "courseOpenId": self.courseOpenId,
                      "schoolId": Account.defaultAccount.schoolId!,
                      "send2student":false] as [String : Any];

        let dict = ["type":"face",
                    "params":JSON.init(params).description ];
       ZQSocketManager.share.notificationSocketManager(data: dict)
    }

    fileprivate func addEventListenerMarkScoreForStudent(ask:askQuestionStuInfo){

        let params = ["type":"markScoreForStudent",
                      "id":ask.id,
                      "score":ask.socre,
                      "name":ask.name,
                      "fromRes":false] as [String : Any];

        let dict = ["type":"face",
                    "params":JSON.init(params).description ];
       ZQSocketManager.share.notificationSocketManager(data: dict)

    }
//获取数据
    func refreshItemData(isRefresh:Bool) {

        let dict = ["askId": self.askId]

        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.FaceTeach_getStuAskedList, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in

            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{

                    self.list = json["dataList"].arrayValue as NSArray
                    self.fetchCoverDetails(isRefresh:isRefresh)

                }else{
                    ZKProgressHUD.showMessage(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showMessage("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }

    }

    func  fetchCoverDetails(isRefresh:Bool){
      
        self.stuInfos.removeAll()
        for i in 0..<self.list.count {
            let json = JSON(self.list)[i]

            let stuinfo = askQuestionStuInfo.init(id: json["Id"].stringValue, name: json["Name"].stringValue, url: json["Avator"].stringValue, no: json["StuNo"].stringValue, socre: json["PerformanceScore"].intValue)
            self.stuInfos.append(stuinfo)

        }

        if(!isRefresh){
            self.addEventListener()
             self.tableView.mj_header.endRefreshing()
        }

        self.tableView.reloadData()
        common.share.setTableFootView_noData(self.tableView, list: self.list)
    }
        //打分
    func checkScore(ask:askQuestionStuInfo,indexPath: IndexPath){
        let dict=["askId":self.askId,
                  "stuIds":ask.id,
                  "score":ask.socre,
                  "sourceType":3] as [String : Any]
        Alamofire.request(appAPI.FaceTeach_saveStuAskScore, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in

            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    self.addEventListenerMarkScoreForStudent(ask: ask)
                    self.tableView.reloadRows(at: [indexPath], with: .fade)
                }else{
                    ZKProgressHUD.showError("网络异常请稍后再试！");
                }
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }

    }
    
    @objc func closeAsk(){
        let dict = ["askId":self.askId]
        Alamofire.request(appAPI.FaceTeach_overAsk, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    ZKProgressHUD.showMessage("结束抢答成功!")
                    let count  = self.navigationController?.viewControllers.count
                    if  let vc :askQuestionListTableView = self.navigationController?.viewControllers[count! - 2] as? askQuestionListTableView   {
                        vc.refreshItemData(isRefresh: false)
                    }
                    self.navigationController?.popViewController(animated: true)
                }else{
                    ZKProgressHUD.showError("网络异常请稍后再试！");
                }
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }
    }
}
