//
//  shakeAskQuestionView.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2018/1/19.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import Alamofire
import SwiftyJSON
import AVFoundation

class shakeAskQuestionView: UIViewController,AVAudioPlayerDelegate {

    var player: AVAudioPlayer?

    override func viewDidLoad() {
        super.viewDidLoad()
        self.setUI()

        /**
         开启摇动感应
         */
        UIApplication.shared.applicationSupportsShakeToEdit = true
        becomeFirstResponder()
        // Do any additional setup after loading the view.
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }


    /**
     开始摇动
     */
    override func motionBegan(_ motion: UIEventSubtype, with event: UIEvent?) {

        print("开始摇动")

        //开始动画
        UIView.animateKeyframes(withDuration: 0.5, delay: 0, options: UIViewKeyframeAnimationOptions.beginFromCurrentState, animations: { () -> Void in

            self.rockupImage.frame.origin.y -= 80
            self.rockdownImage.frame.origin.y += 80

        }, completion: nil)
        /// 设置音效
        let path1 = Bundle.main.path(forResource: "rock", ofType:"mp3")
        let data1 = try? Data(contentsOf: URL(fileURLWithPath: path1!))
        self.player = try? AVAudioPlayer(data: data1!)
        self.player?.delegate = self
        self.player?.updateMeters()//更新数据
        self.player?.prepareToPlay()//准备数据
        self.player?.play()

        //结束动画
        UIView.animateKeyframes(withDuration: 0.5, delay: 1.0, options: UIViewKeyframeAnimationOptions.beginFromCurrentState, animations: { () -> Void in

            self.rockupImage.frame.origin.y += 80
            self.rockdownImage.frame.origin.y -= 80

        }, completion: nil)

    }

    /**
     取消摇动
     */
    override func motionCancelled(_ motion: UIEventSubtype, with event: UIEvent?) {

        print("取消摇动")

    }


    /**
     摇动结束

     */
    override func motionEnded(_ motion: UIEventSubtype, with event: UIEvent?) {

        print("摇动结束")
        ///此处设置摇一摇需要实现的功能
        self.saveStu()
        /// 设置音效
        let path = Bundle.main.path(forResource: "rock_end", ofType:"mp3")
        let data = try? Data(contentsOf: URL(fileURLWithPath: path!))
        self.player = try? AVAudioPlayer(data: data!)
        self.player?.delegate = self
        self.player?.updateMeters()//更新数据
        self.player?.prepareToPlay()//准备数据
        self.player?.play()
    }
    func saveStu(){
        let dict=["quizId":self.askId,"openClassIds":self.openClassIds,"askType":1,"stuCount":self.stuNum,"sourceType":3] as [String : Any]
        Alamofire.request(appAPI.FaceTeach_saveQuizStu, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    let vc = batchScorseTableView()
                    vc.quizId = self.askId
                    vc.activityId = self.activityId
                    vc.courseOpenId = self.courseOpenId
                    vc.askType = 1
                    if(self.source == 1){
                        let ct = self.navigationController?.viewControllers.count;
                        self.navigationController?.viewControllers.remove(at: ct!-2)
                    }
                    
                    self.navigationController?.pushViewController(vc, animated: true)
                    
                    let count = self.navigationController?.viewControllers.count;
                    self.navigationController?.viewControllers.remove(at: count!-2)

                    
                }else{
                    ZKProgressHUD.showError("网络异常请稍后再试！");
                }
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }
    
    
    }

    @objc func selnum(){
        let vc = selectStuNumView()
        vc.view.backgroundColor = UIColor.init(red: 0, green: 0, blue: 0, alpha: 0.1)
        vc.modalTransitionStyle = .crossDissolve
        vc.setStuNumClosure = {(num) in
            self.stuNum = num
            self.btn_num.setTitle("\(num)人", for:.normal)
        }
        self.present(vc, animated: true, completion: nil)
    }
    func setUI(){
        self.view.backgroundColor = UIColor.colorWithHex(hexColor: 0xf2f2f2)
        self.view.addSubview(self.lab_title)
        self.view.addSubview(self.lab_msg)
        self.view.addSubview(self.btn_num)
        self.view.addSubview(self.rockupImage)
        self.view.addSubview(self.rockdownImage)

        self.lab_title.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(40)
            make.left.equalTo(0)
            make.top.equalTo(4)
        }
        self.lab_msg.snp.makeConstraints { (make) in
            make.width.equalTo(width - 80)
            make.height.equalTo(40)
            make.left.equalTo(0)
            make.top.equalTo(self.lab_title.snp.bottom).offset(6)
        }
        self.lab_msg.isUserInteractionEnabled = true
        let gestrue = UITapGestureRecognizer.init(target: self, action: #selector(self.selnum));
        self.lab_msg.addGestureRecognizer(gestrue)
        self.btn_num.snp.makeConstraints { (make) in
            make.width.equalTo(80)
            make.height.equalTo(40)
            make.left.equalTo(self.lab_msg.snp.right)
            make.top.equalTo(self.lab_title.snp.bottom).offset(6)
        }
        self.btn_num.addTarget(self, action: #selector(self.selnum), for: .touchUpInside)
         self.rockupImage.snp.makeConstraints { (make) in
            make.width.equalTo(100)
            make.height.equalTo(50)
            make.centerX.equalTo(self.view.snp.centerX)
            make.bottom.equalTo(self.view.snp.centerY)
        }
        self.rockupImage.contentMode = .scaleAspectFit
        self.rockupImage.image =  UIImage.init(named: "rock_up-1.png")
        self.rockdownImage.snp.makeConstraints { (make) in
            make.width.equalTo(100)
            make.height.equalTo(50)
            make.centerX.equalTo(self.view.snp.centerX)
            make.top.equalTo(self.view.snp.centerY)
        }
        self.rockdownImage.contentMode = .scaleAspectFit
        self.rockdownImage.image =  UIImage.init(named: "rock_down-1.png")

    }
    fileprivate lazy var lab_title :UILabel = {
        let lab = UILabel()
        lab.backgroundColor = UIColor.white
        lab.text = "  2018-01-19 09:44的提问"
        lab.font = UIFont.init(name: "iconfont", size: 12)
        return lab
    }()

    fileprivate lazy var lab_msg :UILabel = {
        let lab = UILabel()
        lab.backgroundColor = UIColor.white
        lab.text = " 设置摇一摇人数"
        lab.font = UIFont.init(name: "iconfont", size: 12)
        return lab
    }()

    fileprivate lazy var btn_num :UIButton = {
        let btn = UIButton()
        btn.setTitle("1人", for: .normal)
        btn.backgroundColor = UIColor.white
        btn.setTitleColor(UIColor.black, for: .normal)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 12)
        return btn
    }()
    fileprivate var rockupImage: UIImageView = {
        let view = UIImageView()
        return view
    }()
    fileprivate var rockdownImage: UIImageView = {
        let view = UIImageView()
        return view
    }()
    fileprivate lazy var width = UIScreen.main.bounds.width

    lazy var stuNum :Int = {
        return 1
    }()
    //source == 1 表示从打分页面进入
    lazy var source : Int = {
        return 0
    }()
    lazy var courseOpenId :String = {return ""}()
    lazy var openClassIds :String = {return ""}()
    lazy var activityId: String = {return ""}()
    lazy var askId: String = {return ""}()
    lazy var askType: Int = {return 1}()
}
