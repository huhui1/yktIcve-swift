//
//  createView.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2018/1/19.
//  Copyright © 2018年 zqy. All rights reserved.
//
import UIKit
import SnapKit
import SwiftyJSON

class createView: UIViewController,UINavigationControllerDelegate,UITextViewDelegate,UITextFieldDelegate {
    
    let width = UIScreen.main.bounds.width;
    var reloadAskQuestionListClosure :(() ->Void)?
    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.colorWithHex(hexColor: 0xf1f1f1)
        self.title = "创建提问";
        askQuestionTitleText.text = self.askTitle
        contenText.text = self.askContent
        self.contenText.delegate = self
        self.askQuestionTitleText.delegate = self
        self.setUI()
        // Do any additional setup after loading the view.
        let Item = UIBarButtonItem(title: "\u{e6f7} 返回", style: .plain, target: self, action: #selector(self.backBtnClick))
        self.navigationItem.leftBarButtonItem = Item
        common.share.setBackButtonItem(item: Item)
        let item = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = item
        NotificationCenter.default.addObserver(self, selector: #selector(textViewEditChanged(sender:)), name: NSNotification.Name.UITextViewTextDidChange, object: nil);
    }
    //自定义返回,移除监听
    @objc func backBtnClick(){
        NotificationCenter.default.removeObserver(self)
        self.navigationController?.popViewController(animated: true)
    }
    
    func setUI(){
        //键盘处理
        toolBar = common.share.AddToolKeyboardDoneBar()
        let doneButton = UIBarButtonItem(title: "确定", style: .plain, target: self, action: #selector(self.DoneClick));
        let spaceButton = UIBarButtonItem(barButtonSystemItem: .flexibleSpace, target: nil, action: nil)
        toolBar.setItems([spaceButton,doneButton], animated: false);
        
        self.view.addSubview(askQuestionTitleText)
        askQuestionTitleText.snp.makeConstraints { (make) in
            make.width.equalTo(width )
            make.left.equalTo(0)
            make.top.equalTo(6)
            make.height.equalTo(40)
        }

        let date = NSDate()
        let timeFormatter = DateFormatter()
        timeFormatter.dateFormat = "yyy-MM-dd HH:mm"
        let strNowTime = timeFormatter.string(from: date as Date) as String + (self.askType == 3 ? "的抢答":"的提问")
        askQuestionTitleText.text = strNowTime
        self.view.addSubview(msglable)
        msglable.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.top.equalTo(askQuestionTitleText.snp.bottom)
            make.height.equalTo(40)
            make.left.equalTo(0)
        }
        msglable.text = "    最多可输入300字"
        self.view.addSubview(contenText)
        contenText.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(200)
            make.left.equalTo(0)
            make.top.equalTo(msglable.snp.bottom)
        }
        let HX = common.share.returnSafeAreaLineHeight()
        self.view.addSubview(saveBtn)
        saveBtn.snp.makeConstraints { (make) in
            make.width.equalTo(width / 2)
            make.height.equalTo(40)
            make.left.equalTo(0)
            make.bottom.equalTo(self.view.snp.bottom).offset(HX)
        }
        self.view.addSubview(submitBtn)
        submitBtn.snp.makeConstraints { (make) in
            make.width.equalTo(width / 2)
            make.height.equalTo(saveBtn.snp.height)
            make.centerY.equalTo(saveBtn.snp.centerY)
            make.left.equalTo(saveBtn.snp.right)
        }
        
    }
    //字数限制
    func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String) -> Bool {
        if range.location >= 50 {
            ZKProgressHUD.showMessage("最多输入50字")
            return false
        }
        return true
    }
    //键盘处理
    func textViewShouldBeginEditing(_ textView: UITextView) -> Bool {
        textView.inputAccessoryView = toolBar;
        if(!self.isup){
            common.share.animateViewMoving(up: true, moveValue: 73, view: self.view)
        }
        self.isup = true
        return true
    }
    func textFieldShouldBeginEditing(_ textField: UITextField) -> Bool {
        textField.inputAccessoryView = toolBar;
        return true
    }
    @objc func DoneClick(){
        self.view.endEditing(true)
        if(self.isup){
            common.share.animateViewMoving(up: false, moveValue: 73, view: self.view)
        }
    }
    //ipad键盘
    func textViewShouldEndEditing(_ textView: UITextView) -> Bool {
        textView.resignFirstResponder()
        if(self.isup){
            common.share.animateViewMoving(up: false, moveValue: 73, view: self.view)
        }
        self.isup = false
        return true
    }
    
    //字数限制
    @objc func textViewEditChanged(sender:NSNotification) {
        let textVStr = contenText.text as NSString
        if (textVStr.length >= 300) {
            let str = textVStr.substring(to: 300)
            contenText.text = str
            ZKProgressHUD.showMessage("最多输入300字")
        }
    }
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    lazy var contenText : UITextView = {
        let text = UITextView();
        text.backgroundColor = UIColor.white
        return text;
    }()
    
    lazy var askQuestionTitleText:UITextField = {
        let text = UITextField()
        text.setValue(NSNumber(value:10), forKey:"paddingLeft")
        text.font = UIFont.init(name: "iconfont", size: 14)
        text.backgroundColor = UIColor.white
        text.placeholder = "请输入提问标题"
        text.clearButtonMode = .unlessEditing
        return text
    }()
    
    lazy var msglable : UILabel = {
        let lab = UILabel()
        
        lab.font = UIFont.init(name: "iconfont", size: 10)
        return lab;
    }()
    
    lazy  var saveBtn : UIButton = {
        let btn = UIButton()
        btn.contentMode = .center
        btn.setTitleColor(UIColor.white, for: .normal)
        btn.setTitle("保存", for: .normal)
        btn.tag = 1
        btn.backgroundColor = UIColor.colorWithHex(hexColor: 0x23c397)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 16)
        btn.addTarget(self, action:  #selector(self.createAskquestion(_:)), for: .touchUpInside)
        return btn ;
        
    }()
    
    lazy  var submitBtn : UIButton = {
        let btn = UIButton()
        btn.contentMode = .center
        btn.setTitleColor(UIColor.white, for: .normal)
        btn.backgroundColor = UIColor.bg
        btn.setTitle("开始", for: .normal)
        btn.tag = 2
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 16)
       btn.addTarget(self, action:  #selector(self.createAskquestion(_:)), for: .touchUpInside)
        return btn ;
        
    }()
    
    var toolBar = UIToolbar();
    
    lazy var activityId :String = {
        
        return ""
    }()
    lazy var openClassIds :String = {
        
        return ""
    }()
    
    lazy var courseOpenId : String = {
        return ""
    }()
    lazy var quizId :String = {
        return ""
    }()
    lazy var askType :Int = {
        return 0
    }()
    lazy var askTitle :String = {
        return ""
    }()
    lazy var askContent :String = {
        return ""
    }()
    lazy var isup :Bool = {
        return false
    }()
    let NotifyChatMsgRecv = NSNotification.Name("emitOrder")
    /*
     // MARK: - Navigation
     
     // In a storyboard-based application, you will often want to do a little preparation before navigation
     override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
     // Get the new view controller using segue.destinationViewController.
     // Pass the selected object to the new view controller.
     }
     */
    
}
