//
//  evaluateView.swift
//  66iclasscloud
//
//  Created by zqy on 2018/1/24.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import SnapKit

class evaluateTableCellView: UITableViewCell {
    let width = UIScreen.main.bounds.width

    //备注标签容器
    var containView: UIView!
    //备注显示文本标签
    var appendixLabel: UILabel!

    //备注标签容器的高度约束（将高度设为0）
    var heightContraint: Constraint?

    //是否有备注
    var hasAppendix:Bool = false {
        didSet
        {
            if hasAppendix {
                //有备注则高度约束失效，备注容器高度更具内容自适应
                self.heightContraint?.deactivate()
            }else{
                //没有备注高度约束生效，高度变成0
                self.heightContraint?.activate()
            }
        }
    }


    override func awakeFromNib() {
        super.awakeFromNib()
        // Initialization code
    }
    override init(style: UITableViewCellStyle, reuseIdentifier: String?) {
        super.init(style: style, reuseIdentifier: reuseIdentifier)
        self.setUI();
    }
    
    required init?(coder aDecoder:NSCoder) {
        super.init(coder: aDecoder)
    }

    override func setSelected(_ selected: Bool, animated: Bool) {
        super.setSelected(selected, animated: animated)

        // Configure the view for the selected state
    }
    func setUI(){

        contentView.addSubview(lab_index)
       // contentView.addSubview(lab_title)
        contentView.addSubview(lab_time)
        contentView.addSubview(btn_score)

        self.lab_index.snp.makeConstraints { (make) in
            make.height.width.equalTo(18)
            make.left.equalTo(8)
            make.centerY.equalTo(contentView.snp.centerY)
        }
        lab_index.textAlignment = .center
        lab_index.backgroundColor=UIColor.bg
        lab_index.textColor = UIColor.white
        lab_index.layer.cornerRadius = 9
        lab_index.layer.masksToBounds = true

        //备注便签容器初始化。并设置相关约束。
        containView = UIView()
        
        containView.layer.cornerRadius = 3
        contentView.addSubview(containView)
        containView.snp.makeConstraints { (make) -> Void in
            make.top.equalTo(contentView.snp.top).offset(2)
            make.left.equalTo(self.lab_index.snp.right)
            make.right.equalTo(contentView)
        }

        //备注文本标签初始化。并设置相关约束。
        appendixLabel = UILabel()
        appendixLabel.lineBreakMode = NSLineBreakMode.byWordWrapping
        appendixLabel.numberOfLines = 0
        appendixLabel.sizeToFit()
        containView.addSubview(appendixLabel)
        appendixLabel.textColor = UIColor.gray
        appendixLabel.snp.makeConstraints { (make) -> Void in
            make.edges.equalTo(containView).inset(UIEdgeInsetsMake(10, 10, 10, 10))
        }

        containView.snp.makeConstraints { (make) -> Void in
            self.heightContraint = make.height.equalTo(0).constraint
            make.bottom.equalTo(contentView.snp.bottom).offset(-10)
        }
        self.btn_score.snp.makeConstraints { (make) in
            make.width.equalTo(35)
            make.height.equalTo(15)
            make.right.equalTo(-4)
            make.bottom.equalTo(contentView.snp.bottom).offset(-2)
        }
        self.lab_time.snp.makeConstraints { (make) in
            make.width.equalTo(200)
            make.height.equalTo(14)
            make.right.equalTo(btn_score.snp.left).offset(5)
            make.bottom.equalTo(contentView.snp.bottom).offset(-2)
        }

    }

   
    lazy var lab_index : UILabel = {
        let lab = UILabel()
        return lab
        
    }()

    lazy var lab_time : UILabel = {
        
        let lab = UILabel()
        lab.font = UIFont.init(name: "iconfont", size: 12)
        lab.textAlignment = .right
        return lab
    }()
    
    lazy var btn_score :UIButton = {
        let btn = UIButton()
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 16);

      //  lab.font = UIFont.init(name: "iconfont", size: 14)!
        return btn
    }()
}
