//
//  evaluateListView.swift
//  66iclasscloud
//
//  Created by zqy on 2018/1/24.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import WebKit
import SwiftyJSON

class evaluateListView: UITableViewController,WKScriptMessageHandler {
    
    var list :NSArray = [];
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
//        let topview = setwebUI()
//        
//        tableView.tableHeaderView = topview
        
        tableView.register(evaluateTableCellView.self, forCellReuseIdentifier: "SwiftCell");
        tableView.tableFooterView = UIView(frame:CGRect.zero)//除去多余的cell
        tableView.separatorInset = UIEdgeInsets.zero;
        
        tableView.layoutMargins = UIEdgeInsets.zero;


        //让单元格自适应
        tableView!.rowHeight = UITableViewAutomaticDimension
        tableView!.estimatedRowHeight = 50
//        tableView!.separatorStyle = UITableViewCellSeparatorStyle.none

        if #available(iOS 9.0, *) {
            tableView.cellLayoutMarginsFollowReadableWidth = false
        } else {
            // Fallback on earlier versions
        }
        self.refreshItemData(isRefresh: true)
        
        //下拉刷新相关设置,使用闭包Block
        self.tableView.mj_header = MJRefreshNormalHeader(refreshingBlock: {
            //重现生成数据
            self.refreshItemData(isRefresh:false);
            
        })

    }
    

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    override func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }

    func  saveEvaluateList(isRefresh:Bool){
        
        self.stuEvaluateList.removeAll()
        
        for i in 0..<self.list.count {
            let list = JSON(self.list[i])
            
            let evaluate = evaluateinfo.init(Id: list["StuId"].stringValue,
                                             StuContent:list["StuContent"].stringValue,
                                             OpenClassId:list["OpenClassId"].stringValue,
                                             DateCreated:list["DateCreated"].stringValue,
                                             Title:list["Title"].stringValue,
                                             Score:list["PerformanceScore"].intValue)
            stuEvaluateList.append(evaluate)
        }
        
        if(!isRefresh){
            //结束刷新
            self.tableView.mj_header.endRefreshing();
            
        }

        common.share.setTableFootView_noData(self.tableView, list: self.list)

        //重现加载表格数据
        self.tableView.reloadData();
        
    }
    
    
    //返回表格行数（也就是返回控件数）
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        
        return self.stuEvaluateList.count;
    }
    
    
    //创建各单元显示内容(创建参数indexPath指定的单元）
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath)
        -> UITableViewCell {
            let cell:evaluateTableCellView = tableView.dequeueReusableCell(withIdentifier: "SwiftCell") as! evaluateTableCellView
            let stuContent = stuEvaluateList[indexPath.row]
            cell.lab_index.text = String(indexPath.row+1)
            //去除点击cell变灰
            cell.selectionStyle = UITableViewCellSelectionStyle.none
          //  cell.lab_title.text = stuContent.StuContent
            cell.lab_time.text = stuContent.DateCreated
            //通过富文本来设置行间距
            let paraph = NSMutableParagraphStyle()
            //将行间距设置为4
            paraph.lineSpacing = 4
            //样式属性集合
            let attributes = [NSAttributedStringKey.font:UIFont.init(name: "iconfont", size: 12),
                              NSAttributedStringKey.paragraphStyle: paraph]
            cell.appendixLabel.attributedText = NSAttributedString(string: stuContent.StuContent, attributes: attributes)
            cell.btn_score.setTitle( "\u{e67c}\(stuContent.Score)", for: .normal)
            cell.btn_score.setTitleColor(UIColor.bg, for: .normal)
            cell.btn_score.tag=indexPath.row
            cell.btn_score.addTarget(self, action:#selector(self.getScore(_:)), for: .touchUpInside)
            cell.hasAppendix = (cell.appendixLabel.text != "")
          //  cell.accessoryType = .disclosureIndicator;
            
            return cell
    }


    func setwebUI() -> UIView  {

        let frame = CGRect.init(x: 0, y: 0, width: width, height: 240)

        let view = UIView.init(frame: frame)


        let path = Bundle.main.path(forResource: "evaluate", ofType: ".html",
                                    inDirectory: "HTML5/src/teacher/evaluate");
        let url = URL(fileURLWithPath:path!);
        //let request = URLRequest(url:url);

        //创建供js调用的接口
        let theConfiguration = WKWebViewConfiguration()
        theConfiguration.userContentController.add(self, name: "interOp")


        theWebView = WKWebView(frame:frame, configuration: theConfiguration)
        //加载页面
        if #available(iOS 9.0, *) {
            theWebView.loadFileURL(url, allowingReadAccessTo: url)
        } else {
            
            do{
                let url1 = try common.share.fileURLForBuggyWKWebView8(fileURL:url as NSURL)
                let request = URLRequest(url:url1 as URL);
                theWebView.load(request)
                
            }catch{}
        }
       //theWebView.load(request)

        view.addSubview(theWebView)
        view.layer.borderColor = UIColor.gray.cgColor
        view.layer.borderWidth = 0.4
        return view
    }


    func userContentController(_ userContentController:WKUserContentController,
                               didReceive message: WKScriptMessage) {
        let sentData = message.body as! Dictionary<String,String>

        if(sentData["method"] == "load" ){
            self.theWebView.evaluateJavaScript("evaluate.charts(\(self.jsonRation))",
                                               completionHandler: nil)

        }
    }

    override func viewWillDisappear(_ animated: Bool) {
        theWebView.configuration.userContentController.removeScriptMessageHandler(forName: "interOp")
    }

    lazy var theWebView:WKWebView = {
        let WK = WKWebView()

        return WK
    }()

    fileprivate lazy var  width = UIScreen.main.bounds.width
    lazy var activityId :String = {return ""}()
    lazy var courseOpenId :String = {return ""}()
    lazy var openClassIds :String = {return ""}()
    lazy var classState:Int = {return 0 }()
    var setSocreClosure :((_ score:Int) ->Void)?
    lazy var jsonRation:JSON = {return []}()
    var stuEvaluateList = [evaluateinfo]()
    struct evaluateinfo {
        let Id:String
        let StuContent:String
        let OpenClassId:String
        let DateCreated:String
        let Title:String
        var Score:Int
    }
}
