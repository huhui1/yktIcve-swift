//
//  stu_brainstromDetailsView.swift
//  云课堂-职教云
// 头脑风暴学生回答详细展示
//  Created by cc on 2018/3/15.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import  SwiftyJSON
class stormDetailsView : UIViewController {
    let width = UIScreen.main.bounds.width;
    let height = UIScreen.main.bounds.height;
    var isStu = false
    override func viewDidLoad() {

        self.addEventListener()
        //富文本
        let paraph = NSMutableParagraphStyle()
            paraph.lineSpacing  = 5
            paraph.headIndent = 5
            paraph.firstLineHeadIndent = 5
        let attributes = [NSAttributedStringKey.font:UIFont.italicSystemFont(ofSize: 15),
                          NSAttributedStringKey.paragraphStyle: paraph]
        
        super.viewDidLoad()
        self.title = "\(brainstorm.Name)的回答"
        self.lab_content.attributedText = NSAttributedString(string: brainstorm.Content, attributes: attributes )
        
        self.view.backgroundColor = UIColor.colorWithHex(hexColor: 0xf1f1f1)
        self.setUI()
        

    }
    @objc func touch_image(sender: UITapGestureRecognizer){
        if(!self.isStu){
            let vc = whiteboardView()
            vc.modalTransitionStyle = .crossDissolve
            vc.file = brainstorm.docOssPreview
            self.present(vc, animated: true, completion: nil)
        }else{
            let vc = PicturePreviewView ()
            vc.imgurl = brainstorm.docOssPreview
            self.navigationController?.pushViewController(vc, animated: true)
        }

    }
    func setUI(){
        self.view.addSubview(lab_content)
        lab_content.snp.makeConstraints { (make) in
            make.width.equalTo(width - 10)
            make.left.equalTo(5)
            make.top.equalTo(10)
        }
        
        self.view.addSubview(imgbg)
        imgbg.snp.makeConstraints { (make) in
            make.width.equalTo(lab_content)
            make.top.equalTo(self.lab_content.snp.bottom)
            make.height.equalTo(110)
            make.left.equalTo(lab_content)
        }
        
        self.imgbg.addSubview(self.imgview)
        self.imgview.snp.makeConstraints { (make) in
            make.width.equalTo(80)
            make.height.equalTo(80 )
            make.top.equalTo(self.lab_content.snp.bottom).offset(10)
            make.left.equalTo(10)
        }
        self.imgview.contentMode = .scaleAspectFit
       
        if brainstorm.docOssPreview.isEmpty{
            self.imgview.isHidden = true
        }else{
            common.share.setSDImg(str: brainstorm.docOssPreview, imgview: self.imgview)
        }
        self.imgview.isUserInteractionEnabled = true

        let imageTapGesture = UITapGestureRecognizer.init(target: self, action: #selector(self.touch_image(sender:)));
        self.imgview.addGestureRecognizer(imageTapGesture);
    }


    func addEventListener(){


        var content = brainstorm.Content

        if( !brainstorm.docOssPreview.isEmpty){
            content += "[图片]";
        }

        let params = ["type":"brainstormInfo",
                      "name": brainstorm.Name,
                      "content": content ,
                      "color": "",
                      "avatar": brainstorm.Name,
                      "stormId":"",
                      "appreciate": brainstorm.PerformanceScore,
                      "fromRes":true] as [String : Any];

        let dict = ["type":"face",
                    "params":JSON.init(params).description ];
        ZQSocketManager.share.notificationSocketManager(data: dict)

    }

    override  func viewWillDisappear(_ animated: Bool) {
        let dict = ["type":"closeRes"];
      ZQSocketManager.share.notificationSocketManager(data: dict)
    }


        
    lazy var lab_content : UILabel = {
        let lab =  UILabel()
        lab.font = UIFont.init(name: "HelveticaNeue-Light", size: 20)
        lab.textColor = UIColor.gray

        lab.numberOfLines = 0;
        lab.sizeToFit();
        return lab
    }()
    
    lazy var imgview :UIImageView = {
        let view = UIImageView()
        view.layer.shadowOpacity = 1
        view.layer.shadowRadius = 2
        view.layer.shadowOffset = CGSize(width: 1, height: 1)
        view.layer.shadowColor = UIColor.colorWithHex(hexColor: 0xdfe8f7).cgColor
        view.isHidden = true
        return view
    }()
    
    lazy var imgbg : UIView = {
        
        let imgbg = UIView()
//        imgbg.backgroundColor = UIColor.white
        
        return imgbg
    }()



    var brainstorm:stuBrainStormInfo!
}
