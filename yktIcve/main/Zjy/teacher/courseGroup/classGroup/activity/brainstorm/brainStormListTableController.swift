//
//  brainStormListTableController.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2018/1/13.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import Alamofire
import SwiftyJSON

extension brainStormListTableView {

   @objc func addbrainStorm(){
        let vc = createStormView()
        vc.brainStormInfo = brainStormInfoModel.init(courseOpenId: self.courseOpenId, activityId: self.activityId, openClassIds: self.openClassIds, total: self.total)
        self.isPushed = true
        self.navigationController?.pushViewController(vc, animated: true)
    }

    
    @objc func reloadBrainStormList(){
         self.refreshItemData()
    }

    func refreshItemData(){
         XLBallLoading.show(in: self.view)
        let dict = ["activityId":self.activityId] ;
        Alamofire.request(appAPI.FaceTeach_getBrainStormList, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in

            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    self.list.removeAll()
                    for i  in  json["dataList"]{
                        self.total =  json["BrainStormStuCount"].intValue
                        let m = brainStormInfoModel.init(i: i.1, courseOpenId: self.courseOpenId,activityId:self.activityId ,openClassIds: self.openClassIds, total: json["BrainStormStuCount"].intValue)
                        self.list.append(m)
                    }
                    //重现加载表格数据
                    self.tableView!.reloadData();

                    if self.tableView.mj_header != nil{
                        //结束刷新
                        self.tableView!.mj_header.endRefreshing();
                    }

                  common.share.setTableFootView_noData(self.tableView, list: self.list)

                }else{
                    ZKProgressHUD.showError("网络异常请稍后再试！");
                }
                 XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                 XLBallLoading.hide(in: self.view)
            }
        }

    }




    func delbrainStorm(Id:String,_ tableView: UITableView,forRowAt indexPath: IndexPath){

        XLBallLoading.show(in: self.view)
        let dict = ["Id":Id,
                    "activityId":self.activityId,
                    "courseOpenId":self.courseOpenId]
        Alamofire.request(appAPI.FaceTeach_delBrainStorm, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in

            if let value = response.result.value {
                let json = JSON(value)

                if(json["code"] == 1){
                    ZKProgressHUD.showMessage(json["msg"].stringValue);
                    self.list.remove(at: indexPath.row)
                    tableView.deleteRows(at: [indexPath], with: UITableViewRowAnimation.fade);
                    common.share.setTableFootView_noData(self.tableView, list: self.list)

                }else{
                    ZKProgressHUD.showMessage(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showMessage("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }

    }

}
