//
//  brainStormController.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2018/1/22.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import Alamofire
import SwiftyJSON

extension brainStormView {

    //统计
 @objc func statistical(){
        let vc = brainStormParticipateStatisticalView()
        vc.brainStormId = self.brainStormInfo.Id
        self.navigationController?.pushViewController(vc, animated: true)
    }

    func addEventListener(){

        let params = ["type":"brainStormEnd",
                      "title":"",
                      "brainStormId":self.brainStormInfo.Id,
                      "fromRes":false] as [String : Any];

        let dict = ["type":"face",
                    "params":JSON.init(params).description ];
        ZQSocketManager.share.notificationSocketManager(data: dict)
       

    }
    
    func getBrainStromStuInfo(){
        
//        ZKProgressHUD.setAnimationStyle(.chrysanthemum);
//        ZKProgressHUD.show();


        XLBallLoading.show(in: self.view)
        let dict = ["brainStormId":self.brainStormInfo.Id]
        Alamofire.request(appAPI.FaceTeach_getBrainStromStuInfo, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in

            if let value = response.result.value {
                let json = JSON(value)
                if(json["code"]>0){

                    self.brainStormInfos.removeAll()
                    for i in  json["datalist"]{
                        let m =  stuBrainStormInfo.init(data: i.1, _isChecked: false)
                        self.brainStormInfos.append(m)
                    }

                    self.theWebView.evaluateJavaScript("brainStorm.get(\(self.brainStormInfo.imgUrlList),'\(self.brainStormInfo.title)','\(self.brainStormInfo.content)',\(json["datalist"]));",
                        completionHandler: nil)
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                XLBallLoading.hide(in: self.view)
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }


        
    }
    //打开键盘
    func openkeyboard(replyId:String,name:String){
        let vc = keyBoardView()
        vc.modalTransitionStyle = .crossDissolve

        vc.view.backgroundColor = UIColor(red: 0, green: 0, blue: 0, alpha: 0.1);
        vc.setSocreClosure = {(score) in
            if(score < 99){
                self.singleCheckScore(replyId:replyId,score:score, name: name)
            }
            self.navigationController?.dismiss(animated: true, completion: nil)
            
        }
        self.present(vc, animated: true, completion: nil)
        
    }
    //学生评分
    func singleCheckScore(replyId:String,score:Int,name:String){
        let dict = ["brainStormStuIds":replyId,"score":score] as [String : Any]
        Alamofire.request(appAPI.FaceTeach_saveStuStormScore, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            
            if let value = response.result.value {
//                ZKProgressHUD.hide(delay: 0);
                let json = JSON(value)
                if(json["code"]>0){
                    var params = ["type":"markScoreForStudent",
                                  "id":self.brainStormInfo.Id,
                                  "score":score,
                                  "name":name] as [String : Any];
                    if(replyId.components(separatedBy: ",").count>1){
                        self.getBrainStromStuInfo()
                    }else{
                        self.theWebView.evaluateJavaScript("brainStorm.score('\(score)')",
                    completionHandler: nil)

                    }

                    let dict = ["type":"face",
                                "params":JSON.init(params).description ];
                    ZQSocketManager.share.notificationSocketManager(data: dict)
                     ZKProgressHUD.showMessage(json["msg"].stringValue);
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }
        
    }

    //全选
   @objc func checkAll(){
        self.theWebView.evaluateJavaScript("brainStorm.checkAll()",
            completionHandler: nil)
    }
    //全选
   @objc func batchScore(){
        self.theWebView.evaluateJavaScript("brainStorm.batchScore()",
            completionHandler: nil)

    }

}
