//
//  brainStormsView.swift
//  云课堂2
//
//  Created by 尤增强 on 2018/6/21.
//  Copyright © 2018年 jcjy. All rights reserved.
//

import UIKit
import SwiftyJSON
class brainStormsView: UIViewController,brainstromInfoCellDelegate {

    @IBOutlet weak var flowLayout: UICollectionViewFlowLayout!
    @IBOutlet weak var collectionView: UICollectionView!
    var stuIdList = [String]()
    var brainStormInfos = [stuBrainStormInfo]()
    var data = JSON()

    var  brainStormInfo = brainStormInfoModel()

    var numberline = 4
    let width = UIScreen.main.bounds.width;
    let NotifyChatMsgRecv = NSNotification.Name("emitOrder")
    @IBOutlet var btn_allCheck: UIButton!
    @IBOutlet var btn_setScore: UIButton!

    override func viewDidLoad() {
        super.viewDidLoad()

        self.addEventListener();
        let statisticsItem = UIBarButtonItem.init(title: "统计", style: UIBarButtonItemStyle.plain, target: self, action: #selector(self.statistical));
        self.navigationItem.rightBarButtonItem = statisticsItem;
        self.setCollectionUI()
        self.title = "头脑风暴"
        let item = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = item
        self.getBrainStromStuInfo(isRefresh:true)
        // Do any additional setup after loading the view.
    }
    init() {
        super.init(nibName: "brainStormsView", bundle: nil)
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    override func viewWillLayoutSubviews() {
        self.btn_setScore.backgroundColor = UIColor.bg
        self.btn_allCheck.backgroundColor = UIColor.colorWithHex(hexColor: 0x23c397)
    }
    
    @IBAction func action_selAll(_ sender: UIButton) {
        sender.isSelected = !sender.isSelected
        self.brainStormInfos.map({$0.isChecked =  sender.isSelected })
        self.collectionView.reloadData()
       
    }

    @IBAction func action_setScore(_ sender: UIButton) {
        var ids = [String]()
        for i in self.brainStormInfos.filter({$0.isChecked}) {
               ids.append(i.Id)
        }
       
        self.batchScore(userIds: ids)

    }
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    func BBSHeadView_backImgUrl(str: String) {
        let vc = PicturePreviewView()
        vc.imgurl = str
        self.navigationController?.pushViewController(vc, animated: true)
    }

    func BBSHeadView_viewMore(height: CGFloat) {

        self.numberline = 0
        self.setUIByData(height: height)
    }

    func returnIndex(_index: Int, _type: Int) {
        let m = self.brainStormInfos[_index]
        if(_type == 1){
            m.isChecked =
                !m.isChecked
        }else{
             self.batchScore(userIds: [m.Id])
        }
    }

    func brainstrom_backImgUrl(str: String) {
        let vc = PicturePreviewView()
        vc.imgurl = str
        self.navigationController?.pushViewController(vc, animated: true)
    }
}

extension brainStormsView:BBSHeadViewDelegate,UICollectionViewDelegate,UICollectionViewDataSource{

    /// 设置collection UI代理
    func setCollectionUI(){
        if(UIDevice.current.model != "iPad"){
            self.flowLayout.itemSize  = CGSize.init(width:(width) / 2, height:240)
        }
        self.collectionView.delegate = self
        self.collectionView.dataSource = self
        self.collectionView.register(UINib.init(nibName: "brainstromInfoCell", bundle: nil), forCellWithReuseIdentifier: "brainstromInfoCell")
        // 注册一个headView
        self.collectionView.register(brainstromViewHeaderView.self, forSupplementaryViewOfKind:UICollectionElementKindSectionHeader, withReuseIdentifier: brainstromHeaderIdentifier)


    }

    //分区的header与footer
    func collectionView(_ collectionView: UICollectionView,
                        viewForSupplementaryElementOfKind kind: String,
                        at indexPath: IndexPath) -> UICollectionReusableView {
        var reusableview:UICollectionReusableView!

        if kind == UICollectionElementKindSectionHeader
        {

            if(reusableview == nil){
                reusableview = collectionView.dequeueReusableSupplementaryView(ofKind: kind, withReuseIdentifier: brainstromHeaderIdentifier, for: indexPath) as! brainstromViewHeaderView
            }

            (reusableview as! brainstromViewHeaderView).headview.numberline = self.numberline

            (reusableview as! brainstromViewHeaderView).headview.deletegate = self
            (reusableview as! brainstromViewHeaderView).setDataForUI(content: self.brainStormInfo.content, title: self.brainStormInfo.title, imgList: self.brainStormInfo.imgList)
        }

        return reusableview
    }

    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        let m = self.brainStormInfos[indexPath.row]
        let vc = stormDetailsView()
        vc.brainstorm = m
        self.navigationController?.pushViewController(vc, animated: true)
    }

    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let m = self.brainStormInfos[indexPath.row]
        let cell :brainstromInfoCell = collectionView.dequeueReusableCell(withReuseIdentifier: "brainstromInfoCell", for: indexPath) as! brainstromInfoCell
        cell.setDataForUI(m: m,_index: indexPath.row,_isStu: false)
        cell.deletgate = self
        return cell
    }

    func numberOfSections(in collectionView: UICollectionView) -> Int {
        return 1
    }

    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return  self.brainStormInfos.count
    }
}

