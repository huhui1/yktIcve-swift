//
//  brainStormView.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2018/1/22.
//  Copyright © 2018年 zqy. All rights reserved.
//



import UIKit
import WebKit
import SwiftyJSON

class brainStormView: UIViewController ,WKScriptMessageHandler{
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.white;
        self.setWebUI()

        self.setBtnUI()

        let statisticsItem = UIBarButtonItem.init(title: "统计", style: UIBarButtonItemStyle.plain, target: self, action: #selector(self.statistical));
        self.navigationItem.rightBarButtonItem = statisticsItem;

        let item = UIBarButtonItem(title: "\u{e6f7} 返回", style: .plain, target: self, action: #selector(self.backBtnClick))

        self.navigationItem.leftBarButtonItem = item


        common.share.setBackButtonItem(item:item)
        // Do any additional setup after loading the view.
    }
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    @objc  func backBtnClick(){
        let dict = ["type":"closeRes"];
        ZQSocketManager.share.notificationSocketManager(data: dict)
    theWebView.configuration.userContentController.removeScriptMessageHandler(forName: "interOp")

        self.navigationController?.popViewController(animated: true)
    }

    override func viewWillAppear(_ animated: Bool) {
        self.addEventListener();
    }

    func setBtnUI()
    {
        if(isStu){
            return
        }

        self.view.addSubview(self.saveBtn)
        self.saveBtn.snp.makeConstraints { (make) in
            make.width.equalTo(UIScreen.main.bounds.width / 2)
            make.height.equalTo(50)
            make.left.equalTo(0)
            make.bottom.equalTo(self.view.snp.bottom)
        }
        self.view.addSubview(self.submitBtn)
        self.submitBtn.snp.makeConstraints { (make) in
            make.width.height.equalTo(saveBtn)

            make.centerY.equalTo(saveBtn.snp.centerY)
            make.left.equalTo(saveBtn.snp.right)
        }
    }
    func setWebUI() {

        let path = Bundle.main.path(forResource: "brainStorm", ofType: ".html",
                                    inDirectory: "HTML5/src/teacher/brainStorm");
        let url = URL(fileURLWithPath:path!);
        //let request = URLRequest(url:url);
        
        //创建供js调用的接口
        let theConfiguration = WKWebViewConfiguration()
        theConfiguration.userContentController.add(self, name: "interOp")
        
        //将浏览器视图全屏(在内容区域全屏,不占用顶端时间条)
        let frame = CGRect(x:0, y:0, width:width,
                           height:UIScreen.main.bounds.height - 60)
        theWebView = WKWebView(frame:frame, configuration: theConfiguration)
        
        //加载页面
        if #available(iOS 9.0, *) {
            
            theWebView.loadFileURL(url, allowingReadAccessTo: url)
        } else {
            
            do{
                
                let url1 = try common.share.fileURLForBuggyWKWebView8(fileURL:url as NSURL)
                let request = URLRequest(url:url1 as URL);
                theWebView.load(request)
                
            }catch{}
        }
        //theWebView.load(request)
        self.view.addSubview(theWebView);
    }
    //返回处理h5清除页面，防内存溢出

    //响应处理js那边的调用
    func userContentController(_ userContentController:WKUserContentController,
                               didReceive message: WKScriptMessage) {
        let sentData = message.body as! Dictionary<String,String>
        
        if(sentData["method"] == "load" ){

            self.getBrainStromStuInfo()
        }else if(sentData["method"] == "previewimg"){
            let vc = whiteboardView()
            vc.modalTransitionStyle = .crossDissolve
            vc.file = sentData["url"]!
            self.present(vc, animated: true, completion: nil)
        }else if (sentData["method"] == "stormDetails"){

            let vc = stormDetailsView()
            let m = self.brainStormInfos[Int(sentData["index"]!)!]
            vc.brainstorm = m

            self.navigationController?.pushViewController(vc, animated: true)
        }else if (sentData["method"] == "singleCheckScore"){
            self.openkeyboard(replyId:sentData["replyId"]!,name:sentData["name"]!)
        }else if(sentData["method"] == "allcheckScore"){
            if(Int(sentData["count"]!)!==0){
                ZKProgressHUD.showMessage("请选择要打分的学生!")
                return
            }else{
                self.openkeyboard(replyId:sentData["replyId"]!,name:"全部")
            }
        }
    }
    


    lazy  var saveBtn : UIButton = {
        let btn = UIButton()
        btn.contentMode = .center
        btn.setTitleColor(UIColor.white, for: .normal)
        btn.setTitle("全选", for: .normal)
        btn.tag = 1
        btn.backgroundColor = UIColor.colorWithHex(hexColor: 0x23c397)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 16)
        btn.addTarget(self, action: #selector(self.checkAll), for: .touchUpInside)
        return btn ;

    }()

    lazy  var submitBtn : UIButton = {
        let btn = UIButton()
        btn.contentMode = .center
        btn.setTitleColor(UIColor.white, for: .normal)
        btn.backgroundColor = UIColor.bg
        btn.setTitle("批量打分", for: .normal)
        btn.tag = 2
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 16)
        btn.addTarget(self, action: #selector(self.batchScore), for: .touchUpInside)
        return btn ;

    }()


    var brainStormInfos = [stuBrainStormInfo]()

    fileprivate lazy var bgview : UIView = {
        
        let view = UIView()
        view.isHidden = true
        return view
    }()
    lazy var theWebView:WKWebView = {
        let WK = WKWebView()
        
        return WK
    }()
    var  brainStormInfo = brainStormInfoModel()

    var isStu = false

    fileprivate lazy var width = UIScreen.main.bounds.width
    
}


