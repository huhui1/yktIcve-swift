//
//  brainStormListTableView.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2018/1/13.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import SwiftyJSON

class brainStormListTableView: UITableViewController {

    var list = [brainStormInfoModel]()
    
    let NotifyEventListener = NSNotification.Name("reloadBrainstorm")

    override func viewDidLoad() {
        super.viewDidLoad()
        self.navigationController?.navigationBar.setBackgroundImage(UIImage(), for: UIBarMetrics.default)
        self.navigationController?.navigationBar.shadowImage = UIImage()
        let topview = discussListTopView();
        topview.lab_title.text = "新建头脑风暴"
        topview.btn_add.addTarget(self, action: #selector(self.addbrainStorm), for: .touchUpInside)
        tableView.tableHeaderView = topview

        tableView.register(discussTableViewCell.self, forCellReuseIdentifier: "SwiftCell");
        tableView.tableFooterView = UIView(frame:CGRect.zero)//除去多余的cell
        tableView.separatorInset = UIEdgeInsets.zero;
        tableView.layoutMargins = UIEdgeInsets.zero;

        if #available(iOS 9.0, *) {
            tableView.cellLayoutMarginsFollowReadableWidth = false
        }

        self.refreshItemData()

        NotificationCenter.default.addObserver(self, selector: #selector(self.reloadBrainStormList), name: NotifyEventListener, object: nil)
        //下拉刷新相关设置,使用闭包Block
        self.tableView.mj_header = MJRefreshNormalHeader(refreshingBlock: {
            //重现生成数据
            self.refreshItemData();

        })

        let item = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = item
    }



    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    override func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }

    override func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat
    {
        return 50;
    }

    //返回表格行数（也就是返回控件数）
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {

        return self.list.count;
    }

    //创建各单元显示内容(创建参数indexPath指定的单元）
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath)
        -> UITableViewCell {
            let colorarr = [0x53d135,0x53d135,0x04ae84,0xf2f2f2];
            let Staterarr = ["","未开始","进行中","已结束"];
            let cell:discussTableViewCell = tableView.dequeueReusableCell(withIdentifier: "SwiftCell") as! discussTableViewCell

            let m = self.list[indexPath.row]

            cell.lab_state.text = Staterarr[m.State];
            cell.lab_state.backgroundColor = UIColor.colorWithHex(hexColor: Int64(colorarr[m.State]))
            cell.lab_title.text = m.title
            if(m.State == 3){
                cell.lab_state.textColor = UIColor.gray;
            }else{
                cell.lab_state.textColor = UIColor.white;
            }
            cell.lab_count.text = "\(m.joinStuCount)/\(m.total)"
            cell.lab_count.textColor = UIColor.colorWithHex(hexColor: 0xc7c7c7)
            return cell
    }



    //点击
    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {

        tableView .deselectRow(at: indexPath, animated: true)
        let m =  self.list[indexPath.row]
        if( m.State  == 1 ){
            let vc = createStormView();
             vc.brainStormInfo = m
             self.isPushed = true
            self.navigationController?.pushViewController(vc, animated: true);
        }else if(m.State == 2){
            let vc = stormIngView()
               vc.brainstorm = m
               self.isPushed = true
               self.navigationController?.pushViewController(vc, animated: true)
        }else{
            let vc = brainStormView()
            vc.brainStormInfo = m
            self.isPushed = true
            self.navigationController?.pushViewController(vc, animated: true);

        }

    }

    //返回编辑类型，滑动删除

    override func tableView(_ tableView: UITableView, editingStyleForRowAt indexPath: IndexPath) -> UITableViewCellEditingStyle {

        return UITableViewCellEditingStyle.delete

    }

    //在这里修改删除按钮的文字

    override func tableView(_ tableView: UITableView, titleForDeleteConfirmationButtonForRowAt indexPath: IndexPath) -> String? {

        return "删除"

    }

    //点击删除按钮的响应方法，在这里处理删除的逻辑

    override func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {
        //删除数据源当前的数据
        let alertController = UIAlertController(title: "提示！",
                                                message:"是否删除该次头脑风暴？", preferredStyle: .alert)
        let cancelAction = UIAlertAction(title: "取消", style: .cancel, handler: nil)
        
        let okAction = UIAlertAction(title: "确定", style: .destructive, handler: {
            action in
            if editingStyle == UITableViewCellEditingStyle.delete {
                
                if editingStyle == UITableViewCellEditingStyle.delete {
                    //删除数据源当前的数据
                    self.delbrainStorm(Id: self.list[indexPath.row].Id, tableView, forRowAt: indexPath)
                    
                }
            }
        })
        alertController.addAction(cancelAction)
        alertController.addAction(okAction)
        self.present(alertController, animated: true, completion: nil)
     

    }

    override func viewWillDisappear(_ animated: Bool) {
        if(!self.isPushed){
            NotificationCenter.default.removeObserver(self)
        }
        self.isPushed = false
    }
    lazy var activityId :String = {return ""}()
    lazy var courseOpenId :String = {return ""}()
    lazy var classState:Int = {return 0 }()
    lazy var openClassIds :String = {return ""}()
    var total = 0
    var isPushed = false

}
