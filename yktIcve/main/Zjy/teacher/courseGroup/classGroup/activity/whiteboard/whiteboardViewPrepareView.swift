//
//  whiteboardViewPrepareView.swift
//  云课堂2
//
//  Created by 尤增强 on 2018/7/21.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import JavaScriptCore

// 定义一个模型 该模型实现SwiftJavaScriptDelegate协议
@objc class whiteboardJavaScriptModel: NSObject, SwiftJavaScriptDelegate {
    func down() {
        
    }

    func showBBS() {
        
    }


    weak var controller: whiteboardViewPrepareView?
    weak var jsContext: JSContext?

    func back() {

        let value = UIInterfaceOrientation.portrait.rawValue
        (UIApplication.shared.delegate as! AppDelegate).allowRotation = false
        UIDevice.current.setValue(value, forKey: "orientation")
        let  dict = ["type":"closeRes","fromRes":"true"]
        controller?.emitorder(dict: dict)

        controller?.presentingViewController?.dismiss(animated: false, completion: nil);
    }

    func showFaceMS() {

//        let vc = CourseTeachingView()
//        vc.openClassId = (controller?.openClassId)!
//        vc.courseOpenId = (controller?.courseOpenId)!
//        vc.view.backgroundColor = UIColor(red: 0, green: 0, blue: 0, alpha: 0.1);
//        controller?.present(vc, animated: true, completion: nil)
    }
    
    func postMessage(_ dict: [String: String]) {
        let dic = ["type":"whiteboard","params":dict["params"]!]
        controller?.emitorder(dict: dic)
    }

}
class whiteboardViewPrepareView: UIViewController,UIWebViewDelegate {


    override func viewDidLoad() {
        super.viewDidLoad()

        self.view.backgroundColor = UIColor.colorWithHex(hexColor: 0xf1f1f1);
        self.setWebUI();

    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    override func viewDidDisappear(_ animated: Bool) {
        appDelegate.isEffective = true
        appDelegate.allowRotation = true
        super.viewWillDisappear(animated)
        let value = UIInterfaceOrientation.portrait.rawValue
        UIDevice.current.setValue(value, forKey: "orientation")
    }

    override  func viewWillAppear(_ animated: Bool) {
        self.view.backgroundColor = UIColor.white;
        appDelegate.isEffective = false
        appDelegate.allowRotation = false
        // 打开横屏功能
        let value = UIInterfaceOrientation.landscapeRight.rawValue

        UIDevice.current.setValue(UIInterfaceOrientation.unknown.rawValue, forKey: "orientation")
        UIDevice.current.setValue(value, forKey: "orientation")

    }
    fileprivate func setWebUI() {

        let dict = ["type":"openBoard",
                    "img":self.file] as [String : String]
        self.emitorder(dict:dict)
        let path = Bundle.main.path(forResource: "whiteboard", ofType: ".html",
                                    inDirectory: "HTML5/src");

        let url = URL(fileURLWithPath:path!);
        let request = URLRequest(url:url);

        webView.loadRequest(request as URLRequest)
        webView.scalesPageToFit = true
        webView.delegate = self
        self.view.addSubview(self.webView)
        var frame = CGRect(x:0, y:0, width:UIScreen.main.bounds.height,
                           height:UIScreen.main.bounds.width )
        if(UIDevice.current.model == "iPad"){
            frame = CGRect(x:0, y:0, width:UIScreen.main.bounds.width,
                           height:UIScreen.main.bounds.height  )

        }
        webView.frame = frame
        webView.delegate = self
        webView.scrollView.bounces = false
    }

    func webViewDidFinishLoad(_ webView: UIWebView) {


        self.jsContext = webView.value(forKeyPath: "documentView.webView.mainFrame.javaScriptContext") as! JSContext
        let model = whiteboardJavaScriptModel()
        model.controller = self
        model.jsContext = self.jsContext

        // 这一步是将SwiftJavaScriptModel模型注入到JS中，在JS就可以通过WebViewJavascriptBridge调用我们暴露的方法了。
        self.jsContext.setObject(model, forKeyedSubscript: "WebViewJavascriptBridge" as NSCopying & NSObjectProtocol)

        // 注册到本地的Html页面中
        let path = Bundle.main.path(forResource: "whiteboard", ofType: ".html",
                                    inDirectory: "HTML5/src");
        let url = URL(fileURLWithPath:path!);
        self.jsContext.evaluateScript(try? String(contentsOf: url, encoding: String.Encoding.utf8))



        self.jsContext.exceptionHandler = { (context, exception) in
            print("exception：", exception as Any)
        }

        if(!self.isload){
            let jsHandlerFunc = self.jsContext?.objectForKeyedSubscript("jsHandlerFunc")
//            let dict = ["data":self.resourceUrl,
//                        "cellId":self.cellId,
//                        "isTeaching":self.isTeaching] as [String : Any]
//            let _ = jsHandlerFunc?.call(withArguments: [dict])
//            self.isload = true

        }

    }

    //投屏指令
    func emitorder(dict:[String:String]){
        ZQSocketManager.share.notificationSocketManager(data: dict)
    }

   var jsContext:JSContext!

    lazy var uploadUrl:String = {
        return ""
    }()
    lazy var imgurl:String = {
        return ""
    }()
   var isload = false
    lazy var webView : UIWebView = {
        let web = UIWebView()
        return web
    }()
    lazy var appDelegate = UIApplication.shared.delegate as! AppDelegate


    lazy var file:String = {
        return ""
    }()
}
