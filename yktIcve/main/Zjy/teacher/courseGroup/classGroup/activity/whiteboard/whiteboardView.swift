//
//  whiteboardView.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2018/1/29.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import WebKit

class whiteboardView: UIViewController,WKScriptMessageHandler,UIImagePickerControllerDelegate,UINavigationControllerDelegate{

    override func viewDidLoad() {
        super.viewDidLoad()
//
        self.view.backgroundColor = UIColor.colorWithHex(hexColor: 0xf1f1f1);
        self.setWebUI();
        // Do any additional setup after loading the view.
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    override func viewDidDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
         appDelegate.isEffective = true
         appDelegate.allowRotation = true
        let value = UIInterfaceOrientation.portrait.rawValue

        UIDevice.current.setValue(value, forKey: "orientation")


    }
    
    override  func viewWillAppear(_ animated: Bool) {
        self.view.backgroundColor = UIColor.white;
        appDelegate.isEffective = false
        appDelegate.allowRotation = false
        // 打开横屏功能
        let value = UIInterfaceOrientation.landscapeRight.rawValue
        UIDevice.current.setValue(value, forKey: "orientation")
        
    }
    fileprivate func setWebUI() {
//          appDelegate.isEffective = false
//          appDelegate.allowRotation = false    // 打开横屏功能
//        let value = UIInterfaceOrientation.landscapeRight.rawValue
//        (UIApplication.shared.delegate as! AppDelegate).allowRotation = false
//                let sysyemValue = UIDevice.current.value(forKey: "orientation")
//        
//        UIDevice.current.setValue(UIInterfaceOrientation.unknown.rawValue, forKey: "orientation")
//        UIDevice.current.setValue(value, forKey: "orientation")

    let dict = ["type":"openBoard",

                    "img":self.file] as [String : String]
        self.emitorder(dict:dict)
        let path = Bundle.main.path(forResource: "whiteboard", ofType: ".html",
                                    inDirectory: "HTML5/src");
        let url = URL(fileURLWithPath:path!);
        //let request = URLRequest(url:url);

        //创建供js调用的接口
        let theConfiguration = WKWebViewConfiguration()
        theConfiguration.userContentController.add(self, name: "interOp")
//
//        var frame = CGRect(x:0, y:0, width:UIScreen.main.bounds.height,
//                           height:UIScreen.main.bounds.width )
        if(UIDevice.current.model == "iPad"){
            let  frame = CGRect(x:0, y:0, width:UIScreen.main.bounds.width,
                           height:UIScreen.main.bounds.height)
            theWebView = WKWebView(frame:frame, configuration: theConfiguration)
        }else{
            let  frame = CGRect(x:0, y:0, width:UIScreen.main.bounds.height,
                                height:UIScreen.main.bounds.width)
            theWebView = WKWebView(frame:frame, configuration: theConfiguration)
        }
        
        //禁用页面在最顶端时下拉拖动效果
        theWebView?.scrollView.bounces = false;
        theWebView?.scrollView.isScrollEnabled = false;
        //加载页面
        if #available(iOS 9.0, *) {
            
            theWebView?.loadFileURL(url, allowingReadAccessTo: url)
        } else {
            
            do{
                
                let url1 = try common.share.fileURLForBuggyWKWebView8(fileURL:url as NSURL)
                let request = URLRequest(url:url1 as URL);
                theWebView?.load(request)
                
            }catch{}
        }
        //theWebView?.load(request)
        self.view.addSubview(theWebView!);
    }
    //响应处理js那边的调用
    func userContentController(_ userContentController:WKUserContentController,
                               didReceive message: WKScriptMessage) {
        let sentData = message.body as! Dictionary<String,String>

        if(sentData["method"] == "tapback"){
            theWebView?.configuration.userContentController.removeScriptMessageHandler(forName: "interOp")
            //返回处理
            let value = UIInterfaceOrientation.portrait.rawValue
            (UIApplication.shared.delegate as! AppDelegate).allowRotation = false
            UIDevice.current.setValue(value, forKey: "orientation")
            let  dict = ["type":"closeRes","fromRes":"true"] as [String : String];

            self.emitorder(dict: dict );

            self.presentingViewController?.dismiss(animated: true, completion: nil)

        }else if(sentData["method"] == "selectPicture"){

            //选择图片
            self.funcChooseFromPhotoAlbum()
        }else if(sentData["method"] == "selectCamera"){

            //拍照处理
            self.funcChooseFromCamera()
        }else if(sentData["method"] == "emit"){
            let dict = ["type":"whiteboard","params":sentData["params"]!]
           self.emitorder(dict: dict)

        }else if(sentData["method"] == "loadimg"){
            self.theWebView!.evaluateJavaScript("whiteboard.setimgsrc('\(self.file)')",
                completionHandler: nil)
        }

    }

    //投屏指令
    func emitorder(dict:[String:String]){
       ZQSocketManager.share.notificationSocketManager(data: dict)
    }


    lazy var uploadUrl:String = {
        return ""
    }()
    lazy var imgurl:String = {
        return ""
    }()

    var theWebView:WKWebView?;
    lazy var appDelegate = UIApplication.shared.delegate as! AppDelegate
  

    lazy var file:String = {
        return ""
    }()

}
