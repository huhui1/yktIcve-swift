//
//  faceCoursewarelistViewController.swift
//  云课堂职教云
//
//  Created by 志辉教育 on 2018/4/19.
//  Copyright © 2018年 jcjy. All rights reserved.
//

import UIKit
import Alamofire
import SwiftyJSON
import SCLAlertView

extension faceCoursewareListTableView{
    //引用课件
    @objc func citecourseware(){
        let vc = selectCourseWareView()
        vc.courseOpenId = self.courseOpenId
        vc.openClassId = self.openClassId
        vc.activityId = self.activityId
        vc.classState = self.classState
        vc.courseWare = self.courseWare
        self.navigationController?.pushViewController(vc, animated: true)

   }
    //获取面授课件列表
    func refreshcoursewareItemData(){
        XLBallLoading.show(in: self.view)
        let dict = ["activityId":self.activityId,
                    "classState":self.classState] as [String:Any]
        Alamofire.request(appAPI.FaceTeach_getFaceTeachCellList, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    self.list = json["dataList"].arrayValue as NSArray
                    
                    //重现加载表格数据
                    self.tableView!.reloadData();
                    common.share.setTableFootView_noData(self.tableView, list: self.list)
                    
                }else{
                    ZKProgressHUD.showError("网络异常请稍后再试！");
                }
                if self.tableView.mj_header != nil {
                     //结束刷新
                    self.tableView!.mj_header.endRefreshing();
                }
                XLBallLoading.hide(in: self.view)
            }
            else{
                XLBallLoading.hide(in: self.view)
                ZKProgressHUD.showError("网络异常请稍后再试！");
            }
        }
    }
    //删除面授课件
    func deletecourseware(coursewareId:String,_ tableView: UITableView,forRowAt indexPath: IndexPath){
        let dict = ["activityId":self.activityId,
                    "cellId":coursewareId] as [String:Any]
        Alamofire.request(appAPI.FaceTeach_deleteFaceTeachCell, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                ZKProgressHUD.showMessage(json["msg"].stringValue);
                let dellist :NSMutableArray = [];
                if(json["code"] == 1){
                    for i in 0 ..< self.list.count {
                        if(i != indexPath.row){
                            dellist.add(JSON(self.list[i]))
                        }
                    }
                    self.list = dellist;
                    tableView.deleteRows(at: [indexPath], with: UITableViewRowAnimation.fade);
                    
                    common.share.setTableFootView_noData(self.tableView, list: self.list)
                }else{
                    ZKProgressHUD.showMessage(json["msg"].stringValue);
                    
                }
                
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }
    }
    
//老师课堂教学课件跳转
    //判断文件是否被下载过
    func  isfileDownload(cell:JSON){
        let cx = SQLiteManagerCache()
        let path = cx.readOneData(_userId: Account.defaultAccount.id!, docId: cell["cellId"].stringValue)
        if path.docPath.isEmpty {
            self.pushstuCourseWareVC(cell:cell)
        }else {
            switch cell["categoryName"].stringValue {

            case "音频":
                let vc = audioViewController()
                vc.cellId = cell["cellId"].stringValue
                vc.courseOpenId = self.courseOpenId
                vc.openClassId = self.openClassId
                vc.moduleId = cell["cellId"].stringValue
                vc.isNet = false
                vc.audiourl = path.docPath
                vc.isAllowDownLoad = true
                vc.title = cell["cellName"].stringValue
                vc.isStu = false
                vc.isKJ = true
                vc.hidesBottomBarWhenPushed = true
                
                self.navigationController?.pushViewController(vc, animated: true)
            default:
                self.pushstuCourseWareVC(cell:cell)
            }
        }
    }
    //观看跳转页面
    func pushstuCourseWareVC(cell:JSON){
        
        switch cell["categoryName"].stringValue {
        case "视频":
            
            if(UIDevice.current.model == "iPad"){
                
                let vc = ipadVideoPlayView()
                vc.isStu = false
                vc.videotittle = cell["cellName"].stringValue
                vc.courseOpenId = self.courseOpenId
                vc.docId = cell["cellId"].stringValue
                vc.openClassId = self.openClassId
                vc.isAllowDownLoad = cell["isAllowDownLoad"].boolValue
                self.resourcesUrl = JSON.init(parseJSON: cell["resourceUrl"].description)
                //拼接URL
                for (key, value) in self.resourcesUrl["args"]{
                    if self.resourcesUrl["urls"]["preview_oss_gen"].stringValue.isEmpty{
                        if value.boolValue{
                            let videoUrl = "\(self.resourcesUrl["urls"]["preview"].stringValue)/\(key).mp4"
                            vc.videourls.append(videoUrl)
                        }
                    }else{
                        if value.boolValue{
                            let videoUrl = "\(self.resourcesUrl["urls"]["preview_oss_gen"].stringValue)/\(key).mp4"
                            vc.videourls.append(videoUrl)
                        }
                    }
                }
                vc.hidesBottomBarWhenPushed = true
                self.navigationController?.pushViewController(vc, animated: true)
                
            }else {
                
                let vc = zjyVideoPlayView()
                vc.isStu = false
                vc.videotittle = cell["cellName"].stringValue
                vc.courseOpenId = self.courseOpenId
                vc.docId = cell["cellId"].stringValue
                vc.openClassId = self.openClassId
                vc.isAllowDownLoad = cell["isAllowDownLoad"].boolValue
                self.resourcesUrl = JSON.init(parseJSON: cell["resourceUrl"].description)
                //拼接URL
                for (key, value) in self.resourcesUrl["args"]{
                    if self.resourcesUrl["urls"]["preview_oss_gen"].stringValue.isEmpty{
                        if value.boolValue{
                            let videoUrl = "\(self.resourcesUrl["urls"]["preview"].stringValue)/\(key).mp4"
                            vc.videourls.append(videoUrl)
                        }
                    }else{
                        if value.boolValue{
                            let videoUrl = "\(self.resourcesUrl["urls"]["preview_oss_gen"].stringValue)/\(key).mp4"
                            vc.videourls.append(videoUrl)
                        }
                    }
                }
                vc.hidesBottomBarWhenPushed = true
                self.navigationController?.pushViewController(vc, animated: true)
            }
            
            
        case "图片":
            self.resourcesUrl = JSON.init(parseJSON: cell["resourceUrl"].description)
            let vc = previewOfficeViewController()
            vc.cellId = cell["cellId"].stringValue
            vc.courseOpenId = self.courseOpenId
            vc.openClassId = self.openClassId
            vc.resourceUrl = self.resourcesUrl.description
            vc.hidesBottomBarWhenPushed = true
            self.present(vc, animated: true, completion: nil)
            
            print("---图片---")
        case "图文":
            let vc = courseware_tuWenView()
            vc.courseOpenId = self.courseOpenId
            vc.openClassId = self.openClassId
            vc.cellId = cell["cellId"].stringValue
            vc.isStu = false
//            vc.moduleId = cell.moduleId
            vc.hidesBottomBarWhenPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        case "音频":
            let vc = audioViewController()
            vc.cellId = cell["cellId"].stringValue
            vc.courseOpenId = self.courseOpenId
            vc.openClassId = self.openClassId
//            vc.moduleId = cell.moduleId
            vc.isNet = true
            vc.isAllowDownLoad = cell["isAllowDownLoad"].boolValue
            vc.isStu = false
            vc.isKJ = true
            vc.title = cell["cellName"].stringValue
            self.resourcesUrl = JSON.init(parseJSON: cell["resourceUrl"].description)
            if !self.resourcesUrl["urls"]["preview_oss_ori"].stringValue.isEmpty{
                vc.audiourl = self.resourcesUrl["urls"]["preview_oss_ori"].stringValue
            }else {
                vc.audiourl = self.resourcesUrl["urls"]["preview"].stringValue.substring(toIndex: self.resourcesUrl["urls"]["preview"].stringValue.length - 9)
            }
            vc.hidesBottomBarWhenPushed = true
            
            self.navigationController?.pushViewController(vc, animated: true)
        case "ppt":
            self.resourcesUrl = JSON.init(parseJSON: cell["resourceUrl"].description)
            if(self.resourcesUrl["isH5"] == 1){
                let vc = teacherPPTOffficeViewViewController()
                vc.cellId = cell["cellId"].stringValue
                vc.courseOpenId = self.courseOpenId
                vc.openClassId = self.openClassId
                vc.resourceUrl = self.resourcesUrl.description
                vc.isTeaching = true
                vc.resourceUrl = self.resourcesUrl.description
                vc.hidesBottomBarWhenPushed = true
                self.present(vc, animated: true, completion: nil)
            }else{
                let vc = previewOfficeViewController()
                vc.cellId = cell["cellId"].stringValue
                vc.courseOpenId = self.courseOpenId
                vc.openClassId = self.openClassId
                vc.resourceUrl = self.resourcesUrl.description
                vc.hidesBottomBarWhenPushed = true
                self.present(vc, animated: true, completion: nil)
            }
            print("---ppt---")
        case "文档":
            self.resourcesUrl = JSON.init(parseJSON: cell["resourceUrl"].description)
            let vc = previewOfficeViewController()
            vc.cellId = cell["cellId"].stringValue
            vc.courseOpenId = self.courseOpenId
            vc.openClassId = self.openClassId
            vc.resourceUrl = self.resourcesUrl.description
            vc.hidesBottomBarWhenPushed = true
            self.present(vc, animated: true, completion: nil)
            print("---文档--")
        case "链接":
            print("----链接----")
            let vc = LinkView()
            vc.linkStr = cell["externalLinkUrl"].description
            vc.courseOpenId = self.courseOpenId
            vc.openClassId = self.openClassId
            vc.cellId = cell["cellId"].stringValue
            vc.isStu = false
            vc.isKJ = true
            vc.hidesBottomBarWhenPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        default:
            SCLAlertView().showInfo("温馨提示！", subTitle: "该课件暂不支持打开",closeButtonTitle: "确定")
        }
        self.openRes(cell: cell)
    }
    //同屏打开课件
    func openRes(cell:JSON){
        let dict = ["type":"openRes","cellId":cell["cellId"].stringValue,"fromRes":"true"]
        ZQSocketManager.share.notificationSocketManager(data: dict)
    }
}
