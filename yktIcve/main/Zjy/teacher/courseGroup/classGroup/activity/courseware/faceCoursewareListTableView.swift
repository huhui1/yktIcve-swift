//
//  faceCoursewareView.swift
//  云课堂职教云
//
//  Created by cc on 2018/4/16.
//  Copyright © 2018年 jcjy. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire
class faceCoursewareListTableView: UITableViewController {

    var courseWare : courseWareModel?

    override func viewDidLoad() {
        super.viewDidLoad()
        self.courseWare = courseWareModel.init(isReload: false)
        self.courseWare?.addObserver(self, forKeyPath: "isReload", options: [.new, .old], context: nil)
        self.view.backgroundColor = UIColor.white
        // Do any additional setup after loading the view.
        self.refreshcoursewareItemData()
        //下拉刷新相关设置,使用闭包Block
        self.settabview()
        self.tableView.mj_header = MJRefreshNormalHeader(refreshingBlock: {
            //重现生成数据
            self.refreshcoursewareItemData();
            
        })
        let item = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = item
        self.navigationController?.navigationBar.setBackgroundImage(UIImage(), for: UIBarMetrics.default)
        self.navigationController?.navigationBar.shadowImage = UIImage()
    }
    func settabview(){
        let topview = discussListTopView();
        tableView.register(discussTableViewCell.self, forCellReuseIdentifier: "SwiftCell");
        topview.lab_title.text = "引用课件"
        topview.btn_add.addTarget(self, action: #selector(self.citecourseware), for: .touchUpInside)
        tableView.tableHeaderView = topview
        tableView.tableFooterView = UIView(frame:CGRect.zero)//除去多余的cell
        tableView.separatorInset = UIEdgeInsets.zero;
        tableView.layoutMargins = UIEdgeInsets.zero;
        if #available(iOS 9.0, *) {
            self.tableView.cellLayoutMarginsFollowReadableWidth = false
        } else {
            
        }
    }
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    override func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    override func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat
    {
        return 50;
    }
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        
        return self.list.count;
    }
    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell:discussTableViewCell = tableView.dequeueReusableCell(withIdentifier: "SwiftCell") as! discussTableViewCell
        let json = JSON(self.list[indexPath.row]);
        cell.lab_state.text = json["categoryName"].stringValue
        cell.lab_state.textColor = UIColor.white
        cell.lab_state.backgroundColor = UIColor.bg
        cell.lab_title.text = json["cellName"].stringValue
        cell.accessoryType = .disclosureIndicator;
        return cell
    }

    //添加监听后,使用完必须移除监听(一个add 对应一个 remove)
    deinit {
        self.courseWare?.removeObserver(self, forKeyPath: "isReload", context: nil)
    }

    override func observeValue(forKeyPath keyPath: String?, of object: Any?, change: [NSKeyValueChangeKey : Any]?, context: UnsafeMutableRawPointer?) {
        if keyPath == "isReload" {
            self.refreshcoursewareItemData()
        }
    }
    //点击
    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        tableView .deselectRow(at: indexPath, animated: true)
        let json = JSON(self.list[indexPath.row]);
        self.isfileDownload(cell: json)
        print("点击课件")
    }
    //返回编辑类型，滑动删除
    
    override func tableView(_ tableView: UITableView, editingStyleForRowAt indexPath: IndexPath) -> UITableViewCellEditingStyle {
        return UITableViewCellEditingStyle.delete
    }
    
    //在这里修改删除按钮的文字
    
    override func tableView(_ tableView: UITableView, titleForDeleteConfirmationButtonForRowAt indexPath: IndexPath) -> String? {
        return "删除"
    }
    
    //点击删除按钮的响应方法，在这里处理删除的逻辑
    
    override func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {
        
        if editingStyle == UITableViewCellEditingStyle.delete {
            
            //删除数据源当前的数据
            
            let alertController = UIAlertController(title: "提示！",
                                                    message:"是否删除该次课件", preferredStyle: .alert)
            let cancelAction = UIAlertAction(title: "取消", style: .cancel, handler: nil)
            let okAction = UIAlertAction(title: "确定", style: .destructive, handler: {
                action in
            self.deletecourseware(coursewareId: JSON(self.list[indexPath.row])["cellId"].stringValue, tableView, forRowAt: indexPath)
            })
            alertController.addAction(cancelAction)
            alertController.addAction(okAction)
            
            self.present(alertController, animated: true, completion: nil)
            
        }
        
    }
    

    let width = UIScreen.main.bounds.width
    let height = UIScreen.main.bounds.height
    lazy var classState:Int = {return 0 }()
    lazy var courseOpenId :String = {return ""}()
    lazy var openClassId :String = {return ""}()
    lazy var activityId: String = {return ""}()
    lazy var list : NSArray = []
    var docType :Int = { return 0 }()
    var resourcesUrl : JSON = [];
    var isAllowDownLoad = false
    var linkstr = ""
}

