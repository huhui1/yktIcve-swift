//
//  selectCourseWareView.swift
//  云课堂2
//
//  Created by 尤增强 on 2018/7/23.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SwiftyJSON
import SCLAlertView

class selectCourseWareView: UIViewController {
    @IBOutlet weak var tableView: UITableView!

    @IBOutlet weak var btn_done: UIButton!
    var courseWare : courseWareModel?
    override func viewDidLoad() {
        super.viewDidLoad()
        self.setUpTableview()
        self.getModuleList()
        self.title = "课件"
        // Do any additional setup after loading the view.
    }

    @IBAction func done_action(_ sender: UIButton) {
        if(self.ids.count < 1){
            ZKProgressHUD.showMessage("请选择需要添加的课件资源，至少选择一个")
            return
        }
       self.savecourse()
    }
    init() {
        super.init(nibName: "selectCourseWareView", bundle: nil)
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    //自定义提示框样式
    let appearance = SCLAlertView.SCLAppearance(
        showCloseButton: false //不显示关闭按钮
    )

    let cellArray : NSMutableArray = NSMutableArray()


    //带属性监视器的普通属性
    var moduleList = [zjycourseModule]()

    var classState = 1;
    var openClassId: String = "";

    var courseOpenId: String = "";

    var activityId:String = "";
    var ids = [String]()
    var isReload = false
}

extension selectCourseWareView:UITableViewDelegate,UITableViewDataSource,courseWareViewCellDelegate {

    func backId(id: String) {

        if !self.ids.contains(id){
            self.ids.append(id)
        }else{
            for (i,v) in self.ids.enumerated(){
                if(v == id){
                    self.ids.remove(at: i)
                }
            }
        }

    }

    func setUpTableview(){
        tableView.delegate = self
        tableView.dataSource = self
        tableView.tableFooterView = UIView.init(frame: CGRect.zero)
        if #available(iOS 9.0, *) {
            self.tableView.cellLayoutMarginsFollowReadableWidth = false
        }
     
        tableView.separatorStyle = UITableViewCellSeparatorStyle.singleLine
        tableView.estimatedRowHeight = 200 //预设cell高度
        tableView.rowHeight = UITableViewAutomaticDimension
    }
    //MARK:-UITableViewDelegate
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        //  获取数据判断是topic 还是cell
        let courseModule = self.moduleList[indexPath.section]
        let t = self.getshowList(model:courseModule, _section: indexPath.row)
        //如果是topic 判断是否有cell 没有请求接口
        if(t.level == 2){
            t.isUnfold = !t.isUnfold
            if(t.cell.count < 1){
                self.getCellList(indexPath: indexPath, topic: t)
            }else{
                self.tableView.reloadSections(IndexSet.init(integer: indexPath.section), with: .automatic)
            }
        }else{

        }
    }


    //MARK:-UITableViewDataSource
    func numberOfSections(in tableView: UITableView) -> Int {
        return moduleList.count
    }
    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        return 52
    }
    func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {
        let view : HelpSectionHeader = HelpSectionHeader()

        view.spreadBtn.isSelected = self.moduleList[section].isUnfold
        view.spreadBlock = {  () -> Void in
            self.moduleList[section].isUnfold = !self.moduleList[section].isUnfold
            self.getTopicList(moduleId: self.moduleList[section].moduleId,section:section)

        }
        view.titleLabel.text = self.moduleList[section].title
        return view
    }
    func tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {
        return 1
    }
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {

        return self.getCellNum(model:self.moduleList[section], _section: section)

    }
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 50
    }

    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {

        let courseModule = self.moduleList[indexPath.section]
        let courseTopicModule = self.getshowList(model:courseModule, _section: indexPath.row)

        let identifier = "cell\(courseTopicModule.id)"
        if ( courseTopicModule.level == 2){
            self.tableView.register(UINib.init(nibName: "courseWareViewTopic", bundle: Bundle.main), forCellReuseIdentifier: identifier)
            let cell : courseWareViewTopic = tableView.dequeueReusableCell(withIdentifier: identifier, for: indexPath) as! courseWareViewTopic
            cell.setZJYModel(courseTopicModule: courseTopicModule)
            print("------1------")
            return cell
        }else{
            if self.ids.contains(courseTopicModule.id){
                courseTopicModule.isChecked = true
            }
            self.tableView.register(UINib.init(nibName: "courseWareViewCell", bundle: Bundle.main), forCellReuseIdentifier: identifier)
            let cell : courseWareViewCell = tableView.dequeueReusableCell(withIdentifier: identifier, for: indexPath) as! courseWareViewCell
            cell.courseWareViewDelegate = self
            cell.setSelZJYModel(model: courseTopicModule)
            print("------2------")
            return cell
        }
    }
}

