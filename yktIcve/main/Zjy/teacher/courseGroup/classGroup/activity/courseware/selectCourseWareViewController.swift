//
//  selectCourseWareViewController.swift
//  云课堂2
//
//  Created by 尤增强 on 2018/7/23.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import Alamofire
import SwiftyJSON
import SCLAlertView

extension selectCourseWareView {

    //获取单元
    func getModuleList(){
        let dict = ["courseOpenId": self.courseOpenId,
                    "openClassId":self.openClassId]

        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.AssistTeacher_getModuleListByClassId, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    self.makeData(json:json["moduleList"])
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }

    //  模块列表
    func makeData(json:JSON){

        for i in json {
            let m = zjycourseModule.init(data: i.1, _isUnfold: false)
            self.moduleList.append(m)
        }
        self.tableView.reloadData()
    }

    //获取单元列表
    func getTopicList(moduleId:String,section:Int){
        if( self.moduleList[section].topic.count > 0){

            self.tableView.reloadSections(IndexSet.init(integer: section), with: UITableViewRowAnimation.automatic)

        }else {

            let dict = ["courseOpenId": self.courseOpenId,
                        "openClassId":self.openClassId,
                        "moduleId":moduleId]
            XLBallLoading.show(in: self.view)
            Alamofire.request(appAPI.AssistTeacher_getTopicListByModuleId, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
                if let value = response.result.value {
                    let json = JSON(value)
                    if json["code"] == 1{
                        self.setTopicList(section: section, data: json["topicList"])
                    }else{
                        ZKProgressHUD.showError(json["msg"].stringValue);
                    }
                    XLBallLoading.hide(in: self.view)
                }else{
                    ZKProgressHUD.showError("网络环境异常请稍后再试！");
                    XLBallLoading.hide(in: self.view)
                }
            }

        }
    }

    //填充数据
    func setTopicList(section:Int,data:JSON){
        let m =  self.moduleList[section]
        var j = 0
        for i in data{

            let t = zjycourseTopic.init(data: i.1, _level: 2, _topicIndex: j, _isUnfold: false, _isFirstModule: m.isFirstModule,_moduleId: m.moduleId)
            j += 1
            self.moduleList[section].topic.append(t)

        }
        self.tableView.reloadSections(IndexSet.init(integer: section), with: UITableViewRowAnimation.automatic)
    }


    //获取获得课程下的单元
    func getCellList(indexPath:IndexPath,topic:zjycourseTopic){


        let dict = ["courseOpenId": self.courseOpenId,
                    "topicId":topic.id,
                    "openClassId":self.openClassId,
                    "stuId":Account.defaultAccount.id!] as [String : Any]

        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.AssistTeacher_getCellListByTopicId, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    if(json["cellList"].count < 1){
                        //使用自定义样式的提示框
                        let alert = SCLAlertView(appearance: self.appearance)
                        //显示提示框（2秒后自定关闭）
                        let timeout = SCLAlertView.SCLTimeoutConfiguration(timeoutValue: 2) {
                            print("提示框自动关闭了")
                        }
                        alert.showError("", subTitle: "sorry!此章节下没有课件", timeout: timeout);
                    }
                    self.setCellInTopicList(indexPath: indexPath, data: json["cellList"], topic: topic)

                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }

    }

    //set cell数据

    func setCellInTopicList(indexPath:IndexPath,data:JSON,topic:zjycourseTopic){


        for i in data{
            let c = zjycourseTopic.init(data: i.1, _level: 3, _topicIndex: -99, _isUnfold: false, _isFirstModule: topic.isFirstModule,_moduleId: topic.moduleId)
            topic.cell.append(c)
            //子节点
            if( i.1["cellType"].intValue == 4){

                for k in i.1["cellChildNodeList"]{
                    let c1 = zjycourseTopic.init(data: k.1, _level: 3, _topicIndex: 99, _isUnfold: false,_isFirstModule: topic.isFirstModule,_moduleId: topic.moduleId)
                    topic.cell.append(c1)
                }
            }
        }
        self.tableView.reloadSections(IndexSet.init(integer: indexPath.section), with: .automatic)
    }

    //分区下标 与当前分区下所有topic
    func getshowList(model:zjycourseModule,_section: Int) -> zjycourseTopic{

        var courseTopicModelR = zjycourseTopic.init(data: JSON(), _level: 0, _topicIndex: -99, _isUnfold: false, _isFirstModule: model.isFirstModule,_moduleId: model.moduleId)
        if model.isUnfold {
            var index = 0

            for i in 0..<model.topic.count{
                let courseTopicModel = model.topic[i]

                if(_section<index+1){
                    courseTopicModelR = courseTopicModel
                    courseTopicModelR.level = 2;
                    return courseTopicModelR;
                }
                index = index + 1 ;

                if (courseTopicModel.isUnfold){
                    if(_section<index+courseTopicModel.cell.count){
                        courseTopicModelR = courseTopicModel.cell[_section-index]
                        courseTopicModelR.level = 3;
                        return courseTopicModelR;
                    }
                    index = index + courseTopicModel.cell.count;

                }

            }
            return courseTopicModelR;
        }else{
            return courseTopicModelR
        }

    }

    func getCellNum(model:zjycourseModule,_section: Int) -> Int{
        if model.isUnfold {
            var i = model.topic.count;

            for courseTopicModel in model.topic{

                if (courseTopicModel.isUnfold){
                    i = i + courseTopicModel.cell.count
                }
            }
            return i ;
        }else{
            return 0
        }
    }


    //保存课件
    func savecourse(){

        XLBallLoading.show(in: self.view)
        let dict = ["teaId":Account.defaultAccount.id!,
                    "activityId":self.activityId,
                    "sourceType":3,
                    "classState":self.classState,
                    "cellIds":self.ids.joined(separator: ",")] as [String:Any]
        Alamofire.request(appAPI.FaceTeach_saveFaceTeachCell, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if(json["code"] == 1){
                    self.courseWare?.isReload = true
                    ZKProgressHUD.showMessage(json["msg"].stringValue)
                    self.navigationController?.popViewController(animated: true)
                }else{
                    ZKProgressHUD.showMessage(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showMessage("网络异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }

    }

}
