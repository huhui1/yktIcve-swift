//
//  createdOneKeyController.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2017/12/29.
//  Copyright © 2017年 zqy. All rights reserved.
//

import UIKit
import Alamofire
import SwiftyJSON

extension createdOneKeyView {

    @objc func touch(_ button:UIButton) {

        let alertController = UIAlertController(title: "系统提示",
                                                message: "签到马上开始让学生做好准备",
                                                preferredStyle: .alert);
        let cancelAction = UIAlertAction(title: "取消", style: .cancel, handler: nil);
        let okAction = UIAlertAction(title: "确定", style: .default, handler: {
            action in
            self.createdSign();
        })
        alertController.addAction(cancelAction)
        alertController.addAction(okAction)
        self.present(alertController, animated: true, completion: nil);

    }

    //创建签到
    func createdSign(){

        let dict = ["activityId": activityId,
                    "SourceType":3,
                    "CreatorId": Account.defaultAccount.id!,
                    "CourseOpenId":courseOpenId,
                    "CheckTitle":titleUI.text ?? " ",
                    "Gesture":gestrue,
                    "SignType":SignType] as [String : Any]

        let newdict = ["data":common.share.getJSONStringFromDictionary(dictionary:dict as NSDictionary)];
        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.FaceTeach_addSign, method: .post, parameters: newdict, encoding: URLEncoding.default).responseJSON { response in

            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    self.signListClosure!();
                    self.pushvc(signId:json["signInfo"]["signId"].stringValue,studycount:json["signInfo"]["classStuCount"].intValue);
                    self.sendGTmsg(signId: json["signInfo"]["signId"].stringValue)
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }

    //开启个消息推送
    func sendGTmsg(signId:String){
        let dict = ["actionType":"signing",
                    "title":titleUI.text ?? " ",
                    "signType":SignType,
                    "actId":signId,
                    "signContent":gestrue,
                    "creatorId":Account.defaultAccount.id!,
                    "faceId":self.activityId,
                    "openClassIds":self.openClassIds,
                    "courseOpenId":self.courseOpenId] as [String : Any];

        geTuiSendController.share.sendGTMSG(str: JSON.init(dict).description, userId: Account.defaultAccount.id!, openClassIds: self.openClassIds)

    }
    func pushvc(signId:String,studycount:Int){
        if(self.SignType == 2){
            let vc = statisticslockerViewController();
            vc.title = "签到进行中";
            vc.openClassIds = self.openClassIds;
            vc.activityId = self.activityId;
            vc.courseOpenId = self.courseOpenId;
            vc.signId = signId;
            vc.studycount = studycount;
            vc.gestrue = self.gestrue;
            self.navigationController?.pushViewController(vc, animated: true);
        }else{
            let vc = statisticsChartsViewController();
            vc.title = "签到进行中";
            vc.openClassIds = self.openClassIds;
            vc.activityId = self.activityId;
            vc.courseOpenId = self.courseOpenId;
            vc.signId = signId;
            vc.studycount = studycount;
            vc.signListClosure = {
                self.self.signListClosure!();
            }
            self.navigationController?.pushViewController(vc, animated: true);
        }
       
        let count = self.navigationController?.viewControllers.count;
        self.navigationController?.viewControllers.remove(at: count!-2)

    }

}
