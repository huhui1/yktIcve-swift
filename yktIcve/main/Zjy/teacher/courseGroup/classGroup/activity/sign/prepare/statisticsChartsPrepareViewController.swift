//
//  statisticsChartsPrepareViewController.swift
//  云课堂2
//
//  Created by 尤增强 on 2018/7/21.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import Alamofire
import SwiftyJSON

extension statisticsChartsPrepareView {

    @objc func stufeedback(notice: NSNotification){
        let dict =  notice.object as? Dictionary<String ,String>

        if(dict!["type"] == "stuSigned"){

            let data = JSON.init(parseJSON: dict!["data"]!)
            let params = ["type":"signed",
                          "actId":self.signId,
                          "userId":data["userId"],
                          "displayName":data["displayName"],
                          "avator":"",
                          "fromRes":false] as [String : Any];
            let dict = ["type":"face",
                        "params":JSON.init(params).description ];
            self.emitorder(dict: dict)

            self.EventListener(data: data)
        }

        print("sign反馈。。。。。")
    }

    func isOverSign(){
        let alertController = UIAlertController(title: "系统提示",
                                                message: "是否要结束此次签到活动？",
                                                preferredStyle: .alert)
        let cancelAction = UIAlertAction(title: "取消", style: .cancel, handler: nil)
        let okAction = UIAlertAction(title: "确定", style: .default, handler: {
            action in
            self.overSign();
        })
        alertController.addAction(cancelAction)
        alertController.addAction(okAction)
        self.present(alertController, animated: true, completion: nil);
    }


    func overSign(){
        let dict = ["signId": signId,"sourceType":"3"]
        Alamofire.request(appAPI.FaceTeach_closeSign, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in

            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    let vc = signResultView();
                    vc.signId = self.signId;
                    vc.openClassIds = self.openClassIds;
                    vc.activityId = self.activityId;
                    vc.title = "签到结果";
                    vc.courseOpenId = self.courseOpenId
                    self.signListClosure!();
                    self.navigationController?.pushViewController(vc, animated: true);
                    let  count = self.navigationController?.viewControllers.count
                    self.navigationController?.viewControllers.remove(at: count!-2)

                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }

            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }
    }

    func EventListener (data:JSON){

        self.signcount += 1
    }

    func setTime(){

        // 在global线程里创建一个时间源
        codeTimer = DispatchSource.makeTimerSource(queue:  DispatchQueue.global())
        // 设定这个时间源是每10秒循环一次，立即开始
        codeTimer?.schedule(deadline: .now(), repeating: .seconds(10))
        // 设定时间源的触发事件
        codeTimer?.setEventHandler(handler: {
            // 每秒计时一次
            print(self.refreshCount)
            self.refreshCount = self.refreshCount + 1
        })
        // 启动时间源
        codeTimer?.resume()
    }

    @objc func refresh(){

        XLBallLoading.show(in: self.view)
        let dict = ["signId": self.signId,"ActivityId":self.activityId] ;
        Alamofire.request(appAPI.FaceTeach_getCheckStuInfo, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in

            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{

                    //已签
                    if json["signedList"].count > 0{
                        self.signcount = json["signedList"].count
                        
                    }
                }else{
                    ZKProgressHUD.showMessage(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showMessage("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }

}
