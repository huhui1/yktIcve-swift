//
//  statisticsViewController.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2017/7/7.
//  Copyright © 2017年 zqy. All rights reserved.
//

import UIKit
import WebKit
import Alamofire
import SwiftyJSON
import Charts

class statisticsViewController: UIViewController {

    var chartView: PieChartView!
    var openClassIds: String = "";
    
    var courseOpenId: String = "";
    
    var activityId :String = "";
    
    var signId :String = "";
    var percent : JSON = []
    var count : JSON = []
    lazy var list : Array = []

    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.title = "签到统计图"
        self.view.backgroundColor = UIColor.colorWithHex(hexColor: 0xEdecf2)
        let params = ["type": "signAnalysis",
                      "courseOpenId": self.courseOpenId,
                      "activityId": self.activityId,
                      "signId": self.signId ]
          let dict = ["type":"face","params":JSON.init(params).description ];
          ZQSocketManager.share.notificationSocketManager(data: dict)
        
        self.getData()
        
    }
    


    func setPieUI(){
        chartView = PieChartView.init(frame: self.view.frame)
        chartView.backgroundColor = UIColor.colorWithHex(hexColor: 0xEdecf2)
        self.view.addSubview(chartView)

        chartView.legend.enabled = true
        chartView.setExtraOffsets(left: 20, top: 20, right: 20, bottom: 0)
        
        chartView.animate(xAxisDuration: 1.4, easingOption: .easeOutBack)
        self.setDataCount()
        chartView.chartDescription?.text = "签到统计分析图示例"
        self.chartView.addSubview(self.lab_title)
        self.chartView.addSubview(self.lab_sign)
        self.chartView.addSubview(self.signIcon)
        self.chartView.addSubview(self.lab_signLack)
        self.chartView.addSubview(self.signLackIcon)
        self.chartView.addSubview(self.lab_signLate)
        self.chartView.addSubview(self.signLateIcon)
        self.chartView.addSubview(self.lab_signLatter)
        self.chartView.addSubview(self.signLatterIcon)
        self.chartView.addSubview(self.lab_signHoliday)
        self.chartView.addSubview(self.signHolidayIcon)
        self.chartView.addSubview(self.lab_signIllness)
        self.chartView.addSubview(self.signIllnessIcon)
        self.chartView.addSubview(self.lab_signLeaveEarly)
        self.chartView.addSubview(self.signLeaveEarlyIcon)
        
        self.lab_title.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(40)
            make.top.equalTo(0)
            make.left.equalTo(0)
        }
        self.signIcon.snp.makeConstraints { (make) in
            make.width.equalTo(25)
            make.height.equalTo(15)
            make.top.equalTo(self.lab_title.snp.bottom).offset(10)
            make.left.equalTo(60)
        }
        self.lab_sign.snp.makeConstraints { (make) in
            make.width.equalTo(80)
            make.height.equalTo(15)
            make.centerY.equalTo(self.signIcon.snp.centerY)
            make.left.equalTo(self.signIcon.snp.right).offset(4)
        }
        self.signLateIcon.snp.makeConstraints { (make) in
            make.width.equalTo(25)
            make.height.equalTo(15)
            make.centerY.equalTo(self.signIcon.snp.centerY)
            make.left.equalTo(self.lab_sign.snp.right).offset(30)
        }
        self.lab_signLate.snp.makeConstraints { (make) in
            make.width.equalTo(80)
            make.height.equalTo(15)
            make.centerY.equalTo(self.signLateIcon.snp.centerY)
            make.left.equalTo(self.signLateIcon.snp.right).offset(4)
        }
        self.signLatterIcon.snp.makeConstraints { (make) in
            make.width.equalTo(25)
            make.height.equalTo(15)
            make.centerX.equalTo(self.signIcon.snp.centerX)
            make.top.equalTo(self.signIcon.snp.bottom).offset(8)
        }
        self.lab_signLatter.snp.makeConstraints { (make) in
            make.width.equalTo(80)
            make.height.equalTo(15)
            make.centerY.equalTo(self.signLatterIcon.snp.centerY)
            make.left.equalTo(self.signLatterIcon.snp.right).offset(4)
        }
        self.signLeaveEarlyIcon.snp.makeConstraints { (make) in
            make.width.equalTo(25)
            make.height.equalTo(15)
            make.centerX.equalTo(self.signLateIcon.snp.centerX)
            make.top.equalTo(self.signLateIcon.snp.bottom).offset(8)
        }
        self.lab_signLeaveEarly.snp.makeConstraints { (make) in
            make.width.equalTo(80)
            make.height.equalTo(15)
            make.centerY.equalTo(self.signLeaveEarlyIcon.snp.centerY)
            make.left.equalTo(self.signLeaveEarlyIcon.snp.right).offset(4)
        }
        self.signIllnessIcon.snp.makeConstraints { (make) in
            make.width.equalTo(25)
            make.height.equalTo(15)
            make.centerX.equalTo(self.signLatterIcon.snp.centerX)
            make.top.equalTo(self.signLatterIcon.snp.bottom).offset(8)
        }
        self.lab_signIllness.snp.makeConstraints { (make) in
            make.width.equalTo(80)
            make.height.equalTo(15)
            make.centerY.equalTo(self.signIllnessIcon.snp.centerY)
            make.left.equalTo(self.signIllnessIcon.snp.right).offset(4)
        }
        self.signLackIcon.snp.makeConstraints { (make) in
            make.width.equalTo(25)
            make.height.equalTo(15)
            make.centerX.equalTo(self.signLeaveEarlyIcon.snp.centerX)
            make.top.equalTo(self.signLeaveEarlyIcon.snp.bottom).offset(8)
        }
        self.lab_signLack.snp.makeConstraints { (make) in
            make.width.equalTo(80)
            make.height.equalTo(15)
            make.centerY.equalTo(self.signLackIcon.snp.centerY)
            make.left.equalTo(self.signLackIcon.snp.right).offset(4)
        }
        self.signHolidayIcon.snp.makeConstraints { (make) in
            make.width.equalTo(25)
            make.height.equalTo(15)
            make.centerX.equalTo(self.signIllnessIcon.snp.centerX)
            make.top.equalTo(self.signIllnessIcon.snp.bottom).offset(8)
        }
        self.lab_signHoliday.snp.makeConstraints { (make) in
            make.width.equalTo(80)
            make.height.equalTo(15)
            make.centerY.equalTo(self.signHolidayIcon.snp.centerY)
            make.left.equalTo(self.signHolidayIcon.snp.right).offset(4)
        }
        
        self.lab_sign.text = "签到 (\(count["signStuCount"].stringValue)) 人"
        self.lab_signLate.text = "迟到 (\(count["signLateStuCount"].stringValue)) 人"
        self.lab_signLatter.text = "事假 (\(count["signLatterStuCount"].stringValue)) 人"
        self.lab_signLeaveEarly.text = "早退 (\(count["signLeaveEarlyStuCount"].stringValue)) 人"
        self.lab_signIllness.text = "病假 (\(count["signIllnessStuCount"].stringValue)) 人"
        self.lab_signLack.text = "缺勤 (\(count["signLackStuCount"].stringValue)) 人"
        self.lab_signHoliday.text = "公假 (\(count["signHolidayStuCount"].stringValue)) 人"
    }

    override func viewDidDisappear(_ animated: Bool) {
        let dict = ["type":"closeRes"];
        ZQSocketManager.share.notificationSocketManager(data: dict)
    }

    func setDataCount() {
        
        let entries1  =  PieChartDataEntry(value:percent["signPercent"].doubleValue,label: "签到")
        let entries2  =  PieChartDataEntry(value:percent["signLatePercent"].doubleValue,label: "迟到")
        let entries3  =  PieChartDataEntry(value:percent["signLatterPercent"].doubleValue,label: "事假")
        let entries4  =  PieChartDataEntry(value:percent["signLeaveEarlyPercent"].doubleValue,label: "早退")
        let entries5  =  PieChartDataEntry(value:percent["signIllnessPercent"].doubleValue,label: "病假")
        let entries6  =  PieChartDataEntry(value:percent["signLackPercent"].doubleValue,label: "缺勤")
        let entries7  =  PieChartDataEntry(value:percent["signHolidayPercent"].doubleValue,label: "公假")
        if(percent["signPercent"].doubleValue != 0.0){
            self.list.append(entries1)
        }
        if(percent["signLatePercent"].doubleValue != 0.0){
            self.list.append(entries2)
        }
        if(percent["signLatterPercent"].doubleValue != 0.0){
            self.list.append(entries3)
        }
        if(percent["signLeaveEarlyPercent"].doubleValue != 0.0){
            self.list.append(entries4)
        }
        if(percent["signIllnessPercent"].doubleValue != 0.0){
            self.list.append(entries5)
        }
        if(percent["signLackPercent"].doubleValue != 0.0){
            self.list.append(entries6)
        }
        if(percent["signHolidayPercent"].doubleValue != 0.0){
            self.list.append(entries7)
        }
        //[entries1,entries2,entries3,entries4,entries5,entries6,entries7]
        let set = PieChartDataSet(values: list as? [ChartDataEntry], label: "")
        
        set.sliceSpace = 2

        set.colors =  [UIColor.colorWithHex(hexColor: 0x3081fa),UIColor.colorWithHex(hexColor: 0xf2292f),UIColor.colorWithHex(hexColor: 0xc93452),UIColor.colorWithHex(hexColor: 0x6db148),UIColor.colorWithHex(hexColor: 0xfb7521),UIColor.colorWithHex(hexColor: 0xfebe29),UIColor.colorWithHex(hexColor: 0x8874e5)]

        set.valueLinePart1OffsetPercentage = 0.8
        set.valueLinePart1Length = 0.2
        set.valueLinePart2Length = 0.4
        //set.xValuePosition = .outsideSlice
        set.yValuePosition = .insideSlice

        let data = PieChartData(dataSet: set)

        let pFormatter = NumberFormatter()
        pFormatter.numberStyle = .percent
        pFormatter.maximumFractionDigits = 1
        pFormatter.multiplier = 1

        pFormatter.percentSymbol = " %"
        data.setValueFormatter(DefaultValueFormatter(formatter: pFormatter))

        data.setValueTextColor(.black)

        chartView.data = data
        chartView.highlightValues(nil)
    }


    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    let width = UIScreen.main.bounds.width
    let height = UIScreen.main.bounds.height
    //标题
    lazy var lab_title:UILabel = {
        let lab = UILabel()
        lab.backgroundColor = UIColor.white
        lab.textAlignment = .center
        lab.textColor = UIColor.colorWithHex(hexColor: 0x808080)
        lab.font = UIFont.init(name: "Helvetica-Light", size: 15)
        return lab
    }()
    //签到学生
    lazy var lab_sign:UILabel = {
        let lab = UILabel()
//        lab.backgroundColor = UIColor.colorWithHex(hexColor: 0xEdecf2)
        lab.textAlignment = .center
        lab.textColor = UIColor.colorWithHex(hexColor: 0x808080)
        lab.font = UIFont.init(name: "Helvetica-Light", size: 11)
        return lab
    }()
    lazy var signIcon : UILabel = {
       let lab = UILabel()
        lab.backgroundColor = UIColor.colorWithHex(hexColor: 0x3081fa)
        lab.layer.masksToBounds = true
        lab.layer.cornerRadius = 2
        return lab
    }()
    //缺勤学生
    lazy var lab_signLack:UILabel = {
        let lab = UILabel()
//        lab.backgroundColor = UIColor.colorWithHex(hexColor: 0xEdecf2)
        lab.textAlignment = .center
        lab.textColor = UIColor.colorWithHex(hexColor: 0x808080)
        lab.font = UIFont.init(name: "Helvetica-Light", size: 11)
        return lab
    }()
    lazy var signLackIcon : UILabel = {
        let lab = UILabel()
        lab.backgroundColor = UIColor.colorWithHex(hexColor: 0xfebe29)
        lab.layer.masksToBounds = true
        lab.layer.cornerRadius = 2
        return lab
    }()
    //迟到人数
    lazy var lab_signLate:UILabel = {
        let lab = UILabel()
//        lab.backgroundColor = UIColor.colorWithHex(hexColor: 0xEdecf2)
        lab.textAlignment = .center
        lab.textColor = UIColor.colorWithHex(hexColor: 0x808080)
        lab.font = UIFont.init(name: "Helvetica-Light", size: 11)
        return lab
    }()
    lazy var signLateIcon : UILabel = {
        let lab = UILabel()
        lab.backgroundColor = UIColor.colorWithHex(hexColor: 0xf2292f)
        lab.layer.masksToBounds = true
        lab.layer.cornerRadius = 2
        return lab
    }()
    //事假学生signLatter
    lazy var lab_signLatter:UILabel = {
        let lab = UILabel()
//        lab.backgroundColor = UIColor.colorWithHex(hexColor: 0xEdecf2)
        lab.textAlignment = .center
        lab.textColor = UIColor.colorWithHex(hexColor: 0x808080)
        lab.font = UIFont.init(name: "Helvetica-Light", size: 11)
        return lab
    }()
    lazy var signLatterIcon : UILabel = {
        let lab = UILabel()
        lab.backgroundColor = UIColor.colorWithHex(hexColor: 0xc93452)
        lab.layer.masksToBounds = true
        lab.layer.cornerRadius = 2
        return lab
    }()
    //早退学生signLeaveEarly
    lazy var lab_signLeaveEarly:UILabel = {
        let lab = UILabel()
//        lab.backgroundColor = UIColor.colorWithHex(hexColor: 0xEdecf2)
        lab.textAlignment = .center
        lab.textColor = UIColor.colorWithHex(hexColor: 0x808080)
        lab.font = UIFont.init(name: "Helvetica-Light", size: 11)
        return lab
    }()
    lazy var signLeaveEarlyIcon : UILabel = {
        let lab = UILabel()
        lab.backgroundColor = UIColor.colorWithHex(hexColor: 0x6db148)
        lab.layer.masksToBounds = true
        lab.layer.cornerRadius = 2
        return lab
    }()
    //病假学生signIllness
    lazy var lab_signIllness:UILabel = {
        let lab = UILabel()
//        lab.backgroundColor = UIColor.colorWithHex(hexColor: 0xEdecf2)
        lab.textAlignment = .center
        lab.textColor = UIColor.colorWithHex(hexColor: 0x808080)
        lab.font = UIFont.init(name: "Helvetica-Light", size: 11)
        return lab
    }()
    lazy var signIllnessIcon : UILabel = {
        let lab = UILabel()
        lab.backgroundColor = UIColor.colorWithHex(hexColor: 0xfb7521)
        lab.layer.masksToBounds = true
        lab.layer.cornerRadius = 2
        return lab
    }()
    //公假学生signHoliday
    lazy var lab_signHoliday:UILabel = {
        let lab = UILabel()
//        lab.backgroundColor = UIColor.colorWithHex(hexColor: 0xEdecf2)
        lab.textAlignment = .center
        lab.textColor = UIColor.colorWithHex(hexColor: 0x808080)
        lab.font = UIFont.init(name: "Helvetica-Light", size: 11)
        return lab
    }()
    lazy var signHolidayIcon : UILabel = {
        let lab = UILabel()
        lab.backgroundColor = UIColor.colorWithHex(hexColor: 0x8874e5)
        lab.layer.masksToBounds = true
        lab.layer.cornerRadius = 2
        return lab
    }()
}




extension statisticsViewController{
    //获取数据
    func getData(){
        let dict = ["activityId": activityId,
                    "schoolId":Account.defaultAccount.schoolId!,
                    "courseOpenId":courseOpenId,
                    "signId":signId]
        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.FaceTeach_signStatis, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    self.percent = json["signPercentData"]
                    self.count = json["signStuCountData"]
                    self.lab_title.text = json["signTitle"].stringValue
                    self.setPieUI()
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }
}

