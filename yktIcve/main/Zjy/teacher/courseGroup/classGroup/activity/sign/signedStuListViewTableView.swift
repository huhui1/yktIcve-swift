//
//  signedStuListViewTableView.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2018/1/10.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire
import SDWebImage

class signedStuListViewTableView: UITableViewController {

    var list  :NSArray = [];

    var openClassId: String = "";

    var courseOpenId: String = "";

    var activityId :String = "";

    var signId :String = "";
    var state : signResultModel?
    
    var selectedIndexs = [Int]()


    var SignResultType = ["缺勤","已签到","迟到","事假","早退","病假","公假"];
    override func viewDidLoad() {
        super.viewDidLoad()

        tableView.register(stuSignStateTableViewCell.self, forCellReuseIdentifier: "SwiftCell");
        tableView.tableFooterView = UIView(frame:CGRect.zero)//除去多余的cell
        tableView.separatorInset = UIEdgeInsets.zero;

        tableView.layoutMargins = UIEdgeInsets.zero;
        if #available(iOS 9.0, *) {
            tableView.cellLayoutMarginsFollowReadableWidth = false
        } else {
            // Fallback on earlier versions
        }
        self.state?.type = true
        self.fetchCoverDetails()
        // Uncomment the following line to preserve selection between presentations
        // self.clearsSelectionOnViewWillAppear = false

        // Uncomment the following line to display an Edit button in the navigation bar for this view controller.
        // self.navigationItem.rightBarButtonItem = self.editButtonItem()
    }

    func  fetchCoverDetails(){
        self.tableView.reloadData()
        common.share.setTableFootView_noData(self.tableView, list: list)
    }
    

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    // MARK: - Table view data source

    override func numberOfSections(in tableView: UITableView) -> Int {
        // #warning Incomplete implementation, return the number of sections
        return 1
    }

    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        // #warning Incomplete implementation, return the number of rows
        return self.list.count
    }
    override func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 70
    }

    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {

        let cell:stuSignStateTableViewCell =  tableView.dequeueReusableCell(withIdentifier: "SwiftCell",for: indexPath) as! stuSignStateTableViewCell
        let data = JSON(self.list[indexPath.row])
        cell.setUnSign(data: data)
        cell.labstate.text = SignResultType[data["SignResultType"].intValue]
        cell.btnScore.tag = indexPath.row
        cell.btnScore.addTarget(self, action: #selector(self.setScore(_:)), for: .touchUpInside)

        return cell
    }

    //点击
    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {

        tableView .deselectRow(at: indexPath, animated: true)

        if(self.list.count < 1){
            return ;
        }
        let entry = JSON(self.list[indexPath.row]);
        popupView(entry: entry, indexPath: indexPath);
    }
    //打分
    @objc func setScore(_ btn:UIButton){
        let tag = btn.tag
        let data = JSON(self.list[tag]);
        if tag >= 0{
            selectedIndexs.append(tag)
        }
        
        let vc = keyBoardView()
        vc.modalTransitionStyle = .crossDissolve
        vc.view.backgroundColor = UIColor(red: 0, green: 0, blue: 0, alpha: 0.1);
        vc.setSocreClosure = {(score) in
            if(score < 99){
                self.saveStuSignScore(score: score, signStuId: data["SignStuId"].stringValue)
            }
            self.dismiss(animated: true, completion: nil)
        }
        self.present(vc, animated: true, completion: nil)
    }
    //底部弹窗
    func popupView( entry:JSON, indexPath: IndexPath){
        let alertController = UIAlertController(title: "修改签到状态", message: "",preferredStyle: .actionSheet);
        let cancelAction = UIAlertAction(title: "取消", style: .cancel, handler: nil);
        let queqin = UIAlertAction(title: "缺勤", style: .default, handler: {action in self.changeState(SignResultType: 0,entry:entry, indexPath: indexPath)});
        let gongjia = UIAlertAction(title: "公假", style: .default, handler: {action in self.changeState(SignResultType: 6,entry:entry, indexPath: indexPath)});
        let shijia = UIAlertAction(title: "事假", style: .default, handler: {action in self.changeState(SignResultType: 3,entry:entry, indexPath: indexPath)});
        let bingjia = UIAlertAction(title: "病假", style: .default, handler: {action in self.changeState(SignResultType: 5,entry:entry, indexPath: indexPath)});
        let chidao = UIAlertAction(title: "迟到", style: .default, handler: {action in self.changeState(SignResultType: 2,entry:entry, indexPath: indexPath)});
        let zaotui = UIAlertAction(title: "早退", style: .default, handler: {action in self.changeState(SignResultType: 4,entry:entry, indexPath: indexPath)});
        let yiqiandao = UIAlertAction(title: "已签到", style: .default, handler: {action in self.changeState(SignResultType: 1,entry:entry, indexPath: indexPath)});
        alertController.addAction(cancelAction);
        alertController.addAction(queqin);
        alertController.addAction(gongjia);
        alertController.addAction(shijia);
        alertController.addAction(bingjia);
        alertController.addAction(chidao);
        alertController.addAction(zaotui);
        alertController.addAction(yiqiandao);

        if(UIDevice.current.model == "iPad")
        {
            let mine = UIView.init(frame: CGRect(x:self.view.bounds.width/2,y:self.view.bounds.height,width:20,height:20))
            self.view.addSubview(mine)
            let popPresenter =  alertController.popoverPresentationController

            popPresenter?.sourceView = mine
            popPresenter?.sourceRect = mine.bounds
            self.present(alertController, animated: true, completion: nil)

        }
        else{
            self.present(alertController, animated: true, completion: nil)
        }
    }

    //修改签到状态
    func changeState(SignResultType:Int,entry:JSON,indexPath: IndexPath){
        XLBallLoading.show(in: self.view)
        let dict = ["Id":entry["SignStuId"].stringValue,"SignResultType": SignResultType,"SourceType":3,"SignId":self.signId,"StuId":entry["StuId"].stringValue,"OpenClassId":entry["OpenClassId"].stringValue] as [String : Any];
        let newdict = ["data":common.share.getJSONStringFromDictionary(dictionary:dict as NSDictionary)];
        Alamofire.request(appAPI.FaceTeach_changeSignType, method: .post, parameters: newdict, encoding: URLEncoding.default).responseJSON { response in

            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    self.state?.changeState = true
                    ZKProgressHUD.showMessage(json["msg"].stringValue);
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }


    //打分
    func saveStuSignScore(score:Int,signStuId:String){
        var signStuIds = [String]()
        signStuIds.append(signStuId)
        let dict = ["signId":self.signId,
                    "signStuIds":signStuIds,
                    "score":score] as [String : Any]
        XLBallLoading.show(in: self.view)
       Alamofire.request(appAPI.FaceTeach_saveSignStuScore, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    self.state?.changeState = true
                    ZKProgressHUD.showMessage(json["msg"].stringValue);
                }else{
                    ZKProgressHUD.showMessage(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showMessage("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }
    
}
