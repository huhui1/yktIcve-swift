//
//  signListViewController.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2017/7/4.
//  Copyright © 2017年 zqy. All rights reserved.
//

import UIKit
import SnapKit
import SwiftyJSON

class signListView: UIViewController,UITableViewDelegate,UITableViewDataSource {

    var openClassIds: String = "";
    
    var courseOpenId: String = "";
    
    var activityId :String = "";
    
    var State = 1;
    
    var catalog  :NSArray = []
    
    var tableView:UITableView!
    
    var studycount = 0;
    let width = UIScreen.main.bounds.width
    let height = UIScreen.main.bounds.height

    override func loadView() {
        super.loadView()
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.navigationController?.navigationBar.setBackgroundImage(UIImage(), for: UIBarMetrics.default)
        self.navigationController?.navigationBar.shadowImage = UIImage()
        self.view.backgroundColor = UIColor.white;
        self.refreshItemData(isRefresh:true);
        // Do any additional setup after loading the view.
        let item = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = item
    }
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    func setTopView()->UIView{
        let topView = UIView.init(frame: CGRect.init(x: 0, y:0, width: width, height: 160));

        let leftview = UIView.init(frame: CGRect.init(x: 0, y: 0, width: width / 2, height: 100));
        let rightview = UIView.init(frame: CGRect.init(x: width / 2, y: 0, width: width / 2, height: 100));
        topView.backgroundColor = UIColor.bg;

        topView.addSubview(leftview);

        topView.addSubview(rightview);


        let oneKeyButton = UIButton.init();
        leftview.addSubview(oneKeyButton);
        oneKeyButton.snp.makeConstraints { (make) in
            make.width.equalTo(100)
            make.height.equalTo(70)
            make.center.equalTo(leftview.snp.center)
        }

        oneKeyButton.setTitleColor(UIColor.white, for: .normal);
        oneKeyButton.titleLabel?.font = UIFont(name: "iconfont", size: 55);
        oneKeyButton.setTitle("\u{e65f}", for:.normal);
        oneKeyButton.addTarget(self, action:#selector(touch(_:)), for:.touchUpInside)
        
        let oneKeyTitle = UILabel.init();
        leftview.addSubview(oneKeyTitle);
        oneKeyTitle.snp.makeConstraints { (make) in
            make.width.equalTo(100)
            make.height.equalTo(30)
            make.centerX.equalTo(oneKeyButton.snp.centerX)
            make.top.equalTo(oneKeyButton.snp.bottom)
        }
        oneKeyTitle.text = "一键签到";
        oneKeyTitle.textColor = UIColor.white;
        oneKeyTitle.textAlignment = .center;
        
        let handleButton = UIButton.init();
        rightview.addSubview(handleButton);
        handleButton.snp.makeConstraints { (make) in
            make.width.equalTo(100)
            make.height.equalTo(70)
            make.center.equalTo(rightview.snp.center)
        }
        handleButton.setTitleColor(UIColor.white, for: .normal);
        handleButton.titleLabel?.font = UIFont(name: "iconfont", size: 65);
        handleButton.setTitle("\u{e690}", for:.normal);
        handleButton.addTarget(self, action:#selector(touch(_:)), for:.touchUpInside)
        handleButton.tag = 1;
        
        let handleTitle = UILabel.init();
        rightview.addSubview(handleTitle)
        handleTitle.snp.makeConstraints { (make) in
            make.width.equalTo(100)
            make.height.equalTo(30)
            make.centerX.equalTo(rightview.snp.centerX)
            make.top.equalTo(handleButton.snp.bottom)
        }
        handleTitle.text = "手势签到";
        handleTitle.textAlignment = .center;
        handleTitle.textColor = UIColor.white;
        
        
        let titleMsg = UILabel.init(frame: CGRect.init(x: 12, y: topView.bounds.height - 40, width: 300, height: 40));
        
        titleMsg.textColor = UIColor.white;
        
        titleMsg.text = "签到列表";
        topView.addSubview(titleMsg)
        return topView;
    }
    
       
    func  setTableView(){
        
        //创建表视图
        self.tableView = UITableView.init(frame: CGRect(x:0, y:0, width:self.view.bounds.width, height:self.view.bounds.height));
        
        self.tableView.delegate = self;
        self.tableView.dataSource = self;
        //创建一个重用的单元格
        self.tableView.register(UITableViewCell.self, forCellReuseIdentifier: "SwiftCell");
        
        self.tableView.tableFooterView = UIView(frame:CGRect.zero)//除去多余的cell
        
        if #available(iOS 9.0, *) {
            self.tableView.cellLayoutMarginsFollowReadableWidth = false
        } else {
            
        }
        //rowHeight属性设置为UITableViewAutomaticDimension
        self.tableView.rowHeight = UITableViewAutomaticDimension;
        let mm = setTopView();
        self.tableView.tableHeaderView = mm;
        
        let nn = common.share.setFootView(msg: "我是有底线的");
        
        if(catalog.count>8){
            self.tableView.tableFooterView = nn;
        }

        
        //下拉刷新相关设置,使用闭包Block
        self.tableView!.mj_header = MJRefreshNormalHeader(refreshingBlock: {
            //重现生成数据
            self.refreshItemData(isRefresh:false);
           
        })
        
        self.view.addSubview(self.tableView!);
        
    }
    
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat
    {
        return 50;
    }
    
    //返回表格行数（也就是返回控件数）
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {

        return self.catalog.count;

    }
    
    //创建各单元显示内容(创建参数indexPath指定的单元）
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath)
        -> UITableViewCell {
            
            //为了提供表格显示性能，已创建完成的单元需重复使用
            let identify:String = "SwiftCell"
            //同一形式的单元格重复使用，在声明时已注册
            let cell = tableView.dequeueReusableCell(withIdentifier: identify,
                                                     for: indexPath) as UITableViewCell

            //获取对应的条目内容
            let entry = JSON(self.catalog[indexPath.row]);
            
            //允许标签自动增长
            cell.textLabel?.numberOfLines = 0
            
            cell.textLabel?.text = "          \(entry["Title"])"
            
            cell.textLabel?.textColor =  UIColor.gray
            
            cell.selectionStyle = UITableViewCellSelectionStyle.none;
            cell.tag = 1;
            cell.accessoryType = UITableViewCellAccessoryType.disclosureIndicator;
            
            var lablecolor = UIColor(red: 43/255, green: 165/255, blue: 132/255, alpha: 1),
            labletext = "";
            
            
            switch entry["State"] {
            case 1:
                lablecolor = UIColor(red: 89/255, green: 207/255, blue: 65/255, alpha: 1);
                labletext = "未开始";
            case 2:
                lablecolor = UIColor(red: 28/255, green: 171/255, blue: 132/255, alpha: 1);
                labletext = "进行中";
            default:
                lablecolor = UIColor(red: 225/255, green: 225/255, blue: 230/255, alpha: 1);
                labletext = "已结束";
            }
            
            let statuslable = common.share.setStatusLable(color:lablecolor, text: labletext)
            
            cell.contentView.addSubview(statuslable);


            return cell
    }
    
    //点击
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        
        tableView .deselectRow(at: indexPath, animated: true)
        
        if(self.catalog.count < 1){
            return ;
        }
        let entry = JSON(self.catalog[indexPath.row]);
        
        if(entry["State"].intValue == 3){
           let  vc = signResultView();
            
           vc.courseOpenId = courseOpenId;
            
           vc.openClassIds = openClassIds;
            
           vc.signId = entry["Id"].stringValue;
            
           vc.activityId = activityId;
            
           vc.title = "签到结果";
            
           self.navigationController?.pushViewController(vc, animated: true);
        }else if(entry["State"].intValue == 2){

            if(entry["SignType"].intValue == 2){

                let vc = statisticslockerViewController()

                vc.courseOpenId = courseOpenId;

                vc.openClassIds = openClassIds;

                vc.studycount = self.studycount;
                vc.signcount = entry["SignedCount"].intValue;
                vc.signId = entry["Id"].stringValue;

                vc.activityId = activityId;
                vc.gestrue = entry["Gesture"].stringValue
                vc.title = "签到进行中";
                vc.signListClosure = { () -> Void in
                    //重现生成数据
                    self.refreshItemData(isRefresh:false);
                }
                self.navigationController?.pushViewController(vc, animated: true);
            }else{

                if #available(iOS 9.0, *) {
                    let vc = statisticsChartsViewController();

                    vc.courseOpenId = courseOpenId;

                    vc.openClassIds = openClassIds;

                    vc.studycount = self.studycount;
                    vc.signcount = entry["SignedCount"].intValue;
                    vc.signId = entry["Id"].stringValue;

                    vc.activityId = activityId;

                    vc.title = "签到进行中";
                    vc.signListClosure = { () -> Void in
                        //重现生成数据
                        self.refreshItemData(isRefresh:false);
                    }
                    self.navigationController?.pushViewController(vc, animated: true);
                } else {
                    let vc = statisticsChartsPrepareView()

                    vc.courseOpenId = courseOpenId;

                    vc.openClassIds = openClassIds;

                    vc.studycount = self.studycount;
                    vc.signcount = entry["SignedCount"].intValue;
                    vc.signId = entry["Id"].stringValue;

                    vc.activityId = activityId;

                    vc.title = "签到进行中";
                    vc.signListClosure = { () -> Void in
                        //重现生成数据
                        self.refreshItemData(isRefresh:false);
                    }
                    self.navigationController?.pushViewController(vc, animated: true);
                }

            }
        }
    }

    //返回编辑类型，滑动删除

    func tableView(_ tableView: UITableView, editingStyleForRowAt indexPath: IndexPath) -> UITableViewCellEditingStyle {

        return UITableViewCellEditingStyle.delete

    }

    //在这里修改删除按钮的文字

    func tableView(_ tableView: UITableView, titleForDeleteConfirmationButtonForRowAt indexPath: IndexPath) -> String? {
        
        return "删除"
        
    }

    //点击删除按钮的响应方法，在这里处理删除的逻辑

    func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {

        if editingStyle == UITableViewCellEditingStyle.delete {

            if editingStyle == UITableViewCellEditingStyle.delete {
                //删除数据源当前的数据
                // self.catalog.removeObject(at: indexPath.row);

                let alertController = UIAlertController(title: "删除签到",
                                                        message: "您确定要删除签到吗？", preferredStyle: .alert)
                let cancelAction = UIAlertAction(title: "取消", style: .cancel, handler: nil)
                let okAction = UIAlertAction(title: "删除", style: .destructive, handler: {
                    action in
                      self.delSign(Id: JSON(self.catalog[indexPath.row])["Id"].stringValue, tableView, forRowAt: indexPath)
                })

                alertController.addAction(cancelAction)
                alertController.addAction(okAction)

                self.present(alertController, animated: true, completion: nil)


            }
        }
        
    }

    @objc func touch(_ button:UIButton) {

        if(button.tag==1){
            let vc = createdHandleViewController();
            vc.title = "创建签到";
            vc.openClassIds = openClassIds;
            vc.activityId = activityId;
            vc.courseOpenId = courseOpenId;
            vc.handleRelodClosure = { () -> Void in
                //重现生成数据
                self.refreshItemData(isRefresh:false);
            }
            self.navigationController?.pushViewController(vc, animated: true);
        }else{
            let vc = createdOneKeyView();
            vc.title = "创建签到";
//            vc.openClassId = openClassId;
            vc.activityId = activityId;
            vc.courseOpenId = courseOpenId;
            vc.openClassIds = self.openClassIds
            vc.signListClosure = { () -> Void in
                //重现生成数据
                self.refreshItemData(isRefresh:false);
            }
            self.navigationController?.pushViewController(vc, animated: true);
        }

    }


    func setFootUIview(){
        common.share.setTableFootView_noData(self.tableView, list: self.catalog)
    }


    func reloadData() {
      
      refreshItemData(isRefresh:false);
        //重现生成数据
        self.refreshItemData(isRefresh:false);
        //重现加载表格数据
        self.tableView!.reloadData()
    }
    /*
    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        // Get the new view controller using segue.destinationViewController.
        // Pass the selected object to the new view controller.
    }
    */


}
