//
//  statisticsChartsViewController.swift
//  66iclasscloud
//  非手势类型的签到
//  Created by 尤增强 on 2017/7/14.
//  Copyright © 2017年 zqy. All rights reserved.
//

import UIKit
import WebKit

import SwiftyJSON

class statisticsChartsViewController: UIViewController,WKScriptMessageHandler {
    

    override func viewDidLoad() {
        super.viewDidLoad()

        let item = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = item
        NotificationCenter.default.addObserver(self, selector: #selector(self.stufeedback), name: NotifyEventListener, object: nil)

        self.view.backgroundColor = UIColor(red: 57/255, green: 163/255, blue: 132/255, alpha: 1);
        self.setUI()

        let params = ["type":"signing",
                    "signType":"none",
                    "studentNumber":self.signcount,
                    "studycount":self.studycount,
                    "numbers":"",
                    "signId":self.signId,
                    "courseOpenId":self.courseOpenId,
                    "fromRes":false,
                    "title":"123",
                    "send2student":false] as [String : Any]
        let dict = ["type":"face","params":JSON.init(params).description ];

        self.emitToPC(dict: dict)
        // Do any additional setup after loading the view.
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    //响应处理js那边的调用
    func userContentController(_ userContentController:WKUserContentController,
                               didReceive message: WKScriptMessage) {
        print(message.body)
        let sentData = message.body as! Dictionary<String,String>
        
        if(sentData["method"] == "load"){
            self.theWebView!.evaluateJavaScript("signing.setCharts(\(signcount),\(studycount));",
                completionHandler: nil)
             self.setTime()
        }else if(sentData["method"] == "endsign"){
            self.isOverSign();
        }else if(sentData["method"] == "params"){
            let dict = ["type":"face",
                        "params":sentData["params"]! ];

            self.emitToPC(dict: dict)
        }
    }


   fileprivate func setUI() {

        let path = Bundle.main.path(forResource: "signing", ofType: ".html",
                                    inDirectory: "HTML5/src");
        let url = URL(fileURLWithPath:path!);
        //let request = URLRequest(url:url);
        //创建供js调用的接口
        let theConfiguration = WKWebViewConfiguration()
        theConfiguration.userContentController.add(self, name: "interOp")

        //将浏览器视图全屏(在内容区域全屏,不占用顶端时间条)
        let frame = CGRect(x:0, y:0, width:UIScreen.main.bounds.width,
                           height:UIScreen.main.bounds.height)
        theWebView = WKWebView(frame:frame, configuration: theConfiguration)
        //禁用页面在最顶端时下拉拖动效果
        theWebView!.scrollView.bounces = false;
//        theWebView?.isUserInteractionEnabled = false;
        //加载页面
        if #available(iOS 9.0, *) {
            
            theWebView?.loadFileURL(url, allowingReadAccessTo: url)
        } else {
            
            do{
                
                let url1 = try common.share.fileURLForBuggyWKWebView8(fileURL:url as NSURL)
                let request = URLRequest(url:url1 as URL);
                theWebView?.load(request)
                
            }catch{}
        }
        //theWebView!.load(request)
        self.view.addSubview(theWebView!);
        let Item = UIBarButtonItem.init(title: "刷新", style: UIBarButtonItemStyle.plain, target: self, action: #selector(self.refresh));
        self.navigationItem.rightBarButtonItem = Item
    }

    ///    投屏事件
    ///
    /// - Parameter dict: [String:String]

    func emitToPC(dict:[String:String]){

        ZQSocketManager.share.notificationSocketManager(data: dict)
    }
    override func viewWillDisappear(_ animated: Bool) {
        let dict = ["type":"closeRes"];
        self.emitToPC(dict: dict)

        self.codeTimer?.cancel()

         NotificationCenter.default.removeObserver(self)
    theWebView?.configuration.userContentController.removeScriptMessageHandler(forName: "interOp")
    }

    var openClassIds: String = "";

    var courseOpenId: String = "";

    var activityId :String = "";

    var signId :String = "";

    var theWebView:WKWebView?;

    var studycount = 0;

    var signcount = 0;


    let NotifyEventListener = NSNotification.Name("stufeedback")

    //重命名一个闭包
    typealias signListreloadView = () -> Void

    var signListClosure : signListreloadView?;

    var refreshCount:Int = 0
    {

        willSet
        {
            print("do nothing")
        }
        didSet
        {
            if refreshCount<10
            {
                self.refresh()
            }else{
                 self.codeTimer?.cancel()
            }

        }
    }
    var codeTimer: DispatchSourceTimer?

}
