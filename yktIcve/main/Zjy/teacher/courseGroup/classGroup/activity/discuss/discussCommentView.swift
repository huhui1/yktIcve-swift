//
//  discussCommentView.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2018/1/17.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import SwiftyJSON
import SCLAlertView
class discussCommentView: UIViewController{
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.white
        self.setUI()
        self.addEventListener()
        // Do any additional setup after loading the view.
        //删除
        let item = UIBarButtonItem(title: "删除", style: .plain, target: self, action:  #selector(self.deletediscuss))
        self.navigationItem.rightBarButtonItem = item
    }
    
    func setUI(){
        
        self.view.addSubview(self.scrollView)
        self.scrollView.addSubview(self.avatar);
        self.scrollView.addSubview(self.lab_name);
        self.scrollView.addSubview(self.lab_date);
        self.scrollView.addSubview(self.text_content);
        self.scrollView.addSubview(self.imgview)
        self.discussReplyId = json["Id"].stringValue
        
        self.lab_name.snp.makeConstraints { (make) in
            make.width.equalTo(100)
            make.height.equalTo(16)
            make.left.equalTo(avatar.snp.right).offset(6)
            make.top.equalTo(avatar.snp.top)
        }
        self.lab_name.textColor = UIColor.black
        self.lab_name.font = UIFont.init(name: "iconfont", size: 12)
        self.lab_name.text = json["creatorName"].stringValue
        
        self.lab_date.snp.makeConstraints { (make) in
            make.width.equalTo(100)
            make.height.equalTo(8)
            make.bottom.equalTo(avatar.snp.bottom)
            make.centerX.equalTo(lab_name.snp.centerX)
        }
        
        //通过富文本来设置行间距
        let paraph = NSMutableParagraphStyle()
        //将行间距设置为4
        paraph.lineSpacing = 4
        //样式属性集合
        let attributes = [NSAttributedStringKey.font:UIFont.systemFont(ofSize: 13),
                          NSAttributedStringKey.paragraphStyle: paraph]
        self.text_content.attributedText = NSAttributedString(string:json["content"].stringValue, attributes: attributes)
        let texth = common.share.heightForTextView(textView: self.text_content, fixedWidth: width)
        
        self.lab_date.textColor = UIColor.gray
        self.lab_date.font = UIFont.init(name: "iconfont", size: 10)
        self.lab_date.text = json["dateCreated"].stringValue
        self.text_content.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(texth )
            make.top.equalTo(self.avatar.snp.bottom).offset(10)
            make.left.equalTo(0)
        }
        
        self.imgview.snp.makeConstraints { (make) in
            make.width.equalTo(100)
            make.height.equalTo(100 )
            make.top.equalTo(self.text_content.snp.bottom).offset(10)
            make.left.equalTo(4)
        }
        self.imgview.contentMode = .scaleAspectFit
        
        

       
        common.share.setSDImg(str: json["avatarUrl"].stringValue, imgview: self.avatar)
       
        

        if !json["docJson"].isEmpty{
            let imgInfoUrl =  json["docJson"][0]["docOssPreview"].stringValue
            self.onlineImgurl = imgInfoUrl
            common.share.setSDImg(str: self.onlineImgurl, imgview: self.imgview)
        }
        
        self.imgview.isUserInteractionEnabled = true
        if(self.Num == 1){
            let imageTapGesture = UITapGestureRecognizer.init(target: self, action: #selector(self.Touch_Image));
            self.imgview.addGestureRecognizer(imageTapGesture);
        }else{
            let imageTapGesture = UITapGestureRecognizer.init(target: self, action: #selector(self.touch_image(sender:)));
            self.imgview.addGestureRecognizer(imageTapGesture);
        }
        
    }
    @objc func deletediscuss(){
        if self.isteacher{
           self.delDiscussReply(discussReplyId: json["Id"].stringValue)
        }else {
            if Account.defaultAccount.id! == json["creatorId"].stringValue{
               self.delDiscussReply(discussReplyId: json["Id"].stringValue)
            }else{
                let alertView = SCLAlertView()
                alertView.showInfo("温馨提示！", subTitle: "不能删除他人的讨论",closeButtonTitle: "确定")
            }
        }
    }
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    override func viewWillDisappear(_ animated: Bool) {
        let params = ["type":"discussClose",
                      "fromRes":false] as [String : Any];
        
        let dict = ["type":"face",
                    "params":JSON.init(params).description ];

    }

    override func viewWillAppear(_ animated: Bool) {
//        self.addEventListener()
    }
    override func viewDidAppear(_ animated: Bool) {
        let texth = common.share.heightForTextView(textView: self.text_content, fixedWidth: width)
        if((texth + 200) > height){
            self.scrollView.contentSize = CGSize.init(width: width, height: texth + 200)
        }
    }
    lazy var json:JSON = {return []}()
    fileprivate lazy  var avatar :UIImageView = {
        let imageview = UIImageView()
        imageview.frame = CGRect.init(x: 10, y:10, width: 26, height: 26);
        imageview.layer.masksToBounds = true;
        imageview.layer.cornerRadius = 13;
        return imageview
        
    }()
    
    fileprivate lazy  var text_content : UITextView = {
        var text_content = UITextView()
        text_content.textColor = UIColor.black;
        text_content.isSelectable = false
        text_content.font = UIFont.init(name: "iconfont", size: 13);
        text_content.textContainerInset = .init(top: 3, left: 0, bottom: 0, right: 0);
        return text_content
        
    }()
    fileprivate var lab_name : UILabel = {
        let lab_name = UILabel()
        
        return  lab_name
        
    }()
    fileprivate lazy var lab_date : UILabel = {
        let lab_date = UILabel()
        return lab_date
    }()
    
    fileprivate lazy var line :UILabel = {
        let lab = UILabel()
        return lab
    }()
    lazy var imgview :UIImageView = {
        let view = UIImageView()
        view.layer.shadowOpacity = 1
        view.layer.shadowRadius = 2
        view.layer.shadowOffset = CGSize(width: 1, height: 1)
        view.layer.shadowColor = UIColor.colorWithHex(hexColor: 0xdfe8f7).cgColor
        view.isHidden = true
        return view
    }()

    
    fileprivate var discussReplyId = ""
    fileprivate var width = UIScreen.main.bounds.width
    lazy var onlineImgurl = ""
    
    lazy var scrollView :UIScrollView = {
        let scrollView = UIScrollView.init(frame: self.view.bounds)
        scrollView.isScrollEnabled = true
        return scrollView
    }()
    lazy var Num : Int = {return 1}()
    fileprivate  let height = UIScreen.main.bounds.height;
    //创建一个闭包属性
    var reloadDiscussReply :(()->Void)?
    var isteacher :Bool = false

    
}
