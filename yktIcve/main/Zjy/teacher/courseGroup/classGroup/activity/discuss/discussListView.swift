//
//  discussListView.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2017/12/29.
//  Copyright © 2017年 zqy. All rights reserved.
//

import UIKit
import SwiftyJSON
class discussListView: UIViewController,UITabBarDelegate,UITableViewDelegate, UITableViewDataSource {

    var list :NSArray = [];
    var activityId = "";
    var classState = 0;
    var courseOpenId = ""
    var openClassIds = ""
    let width = UIScreen.main.bounds.width;
    let height = UIScreen.main.bounds.height;
    var tableView: UITableView = UITableView();
    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.white;
        self.refreshItemData(isRefresh: true);
        // Do any additional setup after loading the view.
        let item = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = item
        self.navigationController?.navigationBar.setBackgroundImage(UIImage(), for: UIBarMetrics.default)
        self.navigationController?.navigationBar.shadowImage = UIImage()
    }
   

    func  setTableView(){

        //创建表视图
        self.tableView = UITableView.init(frame: CGRect(x:0, y:0, width:width, height:height));

        self.tableView.delegate = self;
        self.tableView.dataSource = self;
        //创建一个重用的单元格
        self.tableView.register(discussTableViewCell.self, forCellReuseIdentifier: "listCell");


        self.tableView.tableFooterView = UIView.init(frame: CGRect.zero)

        if #available(iOS 9.0, *) {
            self.tableView.cellLayoutMarginsFollowReadableWidth = false
        } else {

        }
        //rowHeight属性设置为UITableViewAutomaticDimension
        self.tableView.rowHeight = UITableViewAutomaticDimension;
        let topview = discussListTopView();
        topview.lab_title.text = "新建讨论"
        topview.btn_add.addTarget(self, action: #selector(self.addDiscuss), for: .touchUpInside)
        self.tableView.tableHeaderView = topview


        //下拉刷新相关设置,使用闭包Block
        self.tableView.mj_header = MJRefreshNormalHeader(refreshingBlock: {
            //重现生成数据
            self.refreshItemData(isRefresh:false);

        })

        self.view.addSubview(self.tableView);

    }

    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }

    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat
    {
        return 50;
    }

    //返回表格行数（也就是返回控件数）
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {

        return self.list.count;
    }

    //创建各单元显示内容(创建参数indexPath指定的单元）
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath)
        -> UITableViewCell {
             let colorarr = [0x53d135,0x53d135,0x04ae84,0xf2f2f2];
            let Staterarr = ["","未开始","进行中","已结束"];
            let cell:discussTableViewCell = tableView.dequeueReusableCell(withIdentifier: "listCell") as! discussTableViewCell

            let json = JSON(self.list[indexPath.row]);

            cell.lab_state.text = Staterarr[json["State"].intValue];
            cell.lab_state.backgroundColor = UIColor.colorWithHex(hexColor: Int64(colorarr[json["State"].intValue]))
            cell.lab_title.text = json["Title"].stringValue
            cell.accessoryType = .disclosureIndicator;
            if(json["State"].int == 3){
                 cell.lab_state.textColor = UIColor.gray;
            }else{
                 cell.lab_state.textColor = UIColor.white;
            }
            return cell
    }


    func edittapped(_ button:UIButton){
        let tag = button.tag;

    }
    //点击
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {

        tableView .deselectRow(at: indexPath, animated: true)
        let json = JSON(self.list[indexPath.row]);
        if(json["State"].intValue==1){
            let vc=createDiscussView();
            for i in json["DocJson"]{
                let m = UploadDocModel.init(i: i.1)
                vc.imgList.append(m)
            }
            vc.activityId=self.activityId
            vc.courseOpenId=self.courseOpenId
            vc.discussId=json["Id"].stringValue
            vc.json_discussInfo=json
            vc.userInfo = self.userInfo
            vc.openClassIds = self.openClassIds
            vc.reloadDiscussListClosure={()in
                self.refreshItemData(isRefresh: true)
            }
            self.navigationController?.pushViewController(vc, animated: true)
        }else if(json["State"].intValue == 3){
            let vc = DiscussInfoIngView();
            vc.discussId = json["Id"].stringValue;
            vc.state = json["State"].intValue
            vc.userInfo = self.userInfo
            self.navigationController?.pushViewController(vc, animated: true);
        }else if(json["State"].intValue == 2){
            
            let vc = DiscussInfoIngView();
            vc.state = json["State"].intValue
            vc.discussId = json["Id"].stringValue;
            vc.userInfo = self.userInfo
            vc.reloaddiscussListClosure = { () in
                self.refreshItemData(isRefresh:false)
            }
            self.navigationController?.pushViewController(vc, animated: true);
        }
    }

    //返回编辑类型，滑动删除

    func tableView(_ tableView: UITableView, editingStyleForRowAt indexPath: IndexPath) -> UITableViewCellEditingStyle {

        return UITableViewCellEditingStyle.delete

    }

    //在这里修改删除按钮的文字

    func tableView(_ tableView: UITableView, titleForDeleteConfirmationButtonForRowAt indexPath: IndexPath) -> String? {

        return "删除"

    }

    //点击删除按钮的响应方法，在这里处理删除的逻辑

    func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {
        //删除数据源当前的数据
        let alertController = UIAlertController(title: "提示！",
                                                message:"是否删除该次讨论？", preferredStyle: .alert)
        let cancelAction = UIAlertAction(title: "取消", style: .cancel, handler: nil)
        
        let okAction = UIAlertAction(title: "确定", style: .destructive, handler: {
            action in
            if editingStyle == UITableViewCellEditingStyle.delete {
                
                if editingStyle == UITableViewCellEditingStyle.delete {
                    if editingStyle == UITableViewCellEditingStyle.delete {
                        //删除数据源当前的数据
                        self.delDiscussActivity(Id: JSON(self.list[indexPath.row])["Id"].stringValue, tableView, forRowAt: indexPath)
                    }
                }
            }
        })
        alertController.addAction(cancelAction)
        alertController.addAction(okAction)
        self.present(alertController, animated: true, completion: nil)
    }
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    var userInfo :User!


    /*
    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        // Get the new view controller using segue.destinationViewController.
        // Pass the selected object to the new view controller.
    }
    */

}
