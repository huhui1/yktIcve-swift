//
//  replyDiscussView.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2018/1/16.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit

class replyDiscussView: UIViewController,UIImagePickerControllerDelegate,UINavigationControllerDelegate,UITextViewDelegate {

    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.colorWithHex(hexColor: 0xf2f2f2)
        self.title = "回复讨论"
        self.setreplyUI()
        self.textContent.delegate = self
        NotificationCenter.default.addObserver(self, selector: #selector(textViewEditChanged(sender:)), name: NSNotification.Name.UITextViewTextDidChange, object: nil);
        let item = UIBarButtonItem(title: "\u{e6f7} 返回", style: .plain, target: self, action: #selector(self.backBtnClick))
        self.navigationItem.leftBarButtonItem = item
        common.share.setBackButtonItem(item: item)
        // Do any additional setup after loading the view.
    }

    @objc func backBtnClick(){
        NotificationCenter.default.removeObserver(self)
        self.navigationController?.popViewController(animated: true)
    }
    func setreplyUI(){
        let replyItem = UIBarButtonItem.init(title: "回复", style: UIBarButtonItemStyle.plain, target: self, action: #selector(self.addDiscussReply));

        toolBar = common.share.AddToolKeyboardDoneBar()
        let doneButton = UIBarButtonItem(title: "确定", style: .plain, target: self, action: #selector(self.DoneClick));
        let spaceButton = UIBarButtonItem(barButtonSystemItem: .flexibleSpace, target: nil, action: nil)
        toolBar.setItems([spaceButton,doneButton], animated: false);
        
        
        self.navigationItem.rightBarButtonItem = replyItem;
        self.view.addSubview(self.labPrompt)
        self.view.addSubview(self.textContent)
        self.view.addSubview(self.btnSelpicture)
        self.view.addSubview(self.imgview)
        var ht = 0
        if self.navigationController == nil {
            ht = 60
        }
        self.labPrompt.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(40)
            make.left.equalTo(0)
            make.top.equalTo(ht)
        }

        self.textContent.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(210)
            make.top.equalTo(self.labPrompt.snp.bottom)
        }

        self.btnSelpicture.snp.makeConstraints { (make) in
            make.width.equalTo(70)
            make.height.equalTo(70)
            make.left.equalTo(5)
            make.top.equalTo(self.textContent.snp.bottom)
        }
        self.imgview.snp.makeConstraints { (make) in
            make.width.equalTo(80)
            make.height.equalTo(80)
            make.left.equalTo(5)
            make.top.equalTo(self.textContent.snp.bottom).offset(4)
        }

        self.imgview.isUserInteractionEnabled = true
        let imageTapGesture = UITapGestureRecognizer.init(target: self, action: #selector(self.touch_image(sender:)));

         self.imgview.addGestureRecognizer(imageTapGesture);


    }
    //字数限制
    @objc func textViewEditChanged(sender:NSNotification) {
        let textVStr = textContent.text as NSString
        if (textVStr.length >= 300) {
            let str = textVStr.substring(to: 300)
            textContent.text = str
            ZKProgressHUD.showMessage("最多输入300字")
        }
    }
    override func viewWillDisappear(_ animated: Bool) {
        NotificationCenter.default.removeObserver(self)
    }
    //键盘处理
    @objc func DoneClick(){
        self.view.endEditing(true)
        if(self.isup){
            common.share.animateViewMoving(up: false, moveValue: 40, view: self.view)
        }
        self.isup = false
    }
    
    func textViewShouldBeginEditing(_ textView: UITextView) -> Bool {
        textView.inputAccessoryView = toolBar;
        if(!self.isup){
            common.share.animateViewMoving(up: true, moveValue: 40, view: self.view)
        }
        self.isup = true
        return true
    }
    //ipad键盘处理
    func textViewShouldEndEditing(_ textView: UITextView) -> Bool {
        textView.resignFirstResponder()
        if(self.isup){
            common.share.animateViewMoving(up: false, moveValue: 40, view: self.view)
        }
        self.isup = false
        return true
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    lazy var creatorId:String = {
        return ""
    }()
    lazy var openCourseId = "";
    lazy var discussId = "";
    lazy var openClassId = "";
    fileprivate lazy var isAnimated = false
    lazy var activityId = "";
    lazy var classState = 0;
    var reloadReplyListColsure: (() ->Void)?
    fileprivate  lazy var width = UIScreen.main.bounds.width
    var toolBar = UIToolbar();
    lazy var isup :Bool = {
        return false
    }()


    fileprivate lazy var labPrompt :UILabel = {
        let lab = UILabel()
        lab.font = UIFont.init(name: "iconfont", size: 12)
        lab.textColor = UIColor.gray
        lab.text = "   最多可输入300字符"
        return lab
    }()

   lazy var textContent:UITextView = {
        let text = UITextView()
        text.backgroundColor = UIColor.white
        text.font = UIFont.italicSystemFont(ofSize: 14)
        text.textColor = UIColor.gray
        return text

    }()
    lazy var btnSelpicture :UIButton = {
        let btn = UIButton()
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 36)
        btn.setTitle("\u{e6ae}", for: .normal)
        btn.contentMode = .center
        btn.setTitleColor(UIColor.colorWithHex(hexColor: 0x818cf5), for: .normal)

        btn.addTarget(self, action: #selector(uploadImg(_:)), for: .touchUpInside)
        return btn
    }()
    lazy var uploadUrl : String = {

        return ""
    }()

    var reloadBBSListClosure :(() ->Void)?

    lazy var imgview :UIImageView = {
        let view = UIImageView()
        view.isHidden = true
        return view
    }()
    lazy var docJson :NSMutableArray = {
        return []
    }()

    
  fileprivate  lazy var replyBtn : UIButton = {
        let btn = UIButton()
        btn.setTitle("回复", for: .normal)
        btn.contentMode = .center
        btn.addTarget(self, action: #selector(addDiscussReply), for: .touchUpInside)

        return btn
    }()

    /*
    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        // Get the new view controller using segue.destinationViewController.
        // Pass the selected object to the new view controller.
    }
    */

}
