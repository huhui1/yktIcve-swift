//
//  BBSHeadView.swift
//  云课堂2
//
//  Created by 尤增强 on 2018/6/15.
//  Copyright © 2018年 jcjy. All rights reserved.
//

import UIKit
import SwiftyJSON

@objc protocol BBSHeadViewDelegate{

    /// 图片点击返回url
    ///
    /// - Parameter str: 图片URL
    /// - Returns: 空
    @objc optional func BBSHeadView_backImgUrl(str:String) -> ()

    /// 返回更多的高度
    ///
    /// - Parameter height: 高度
    /// - Returns: 空
    @objc optional func BBSHeadView_viewMore(height:CGFloat) -> ()
}

class BBSHeadView: UIView {
    @IBOutlet var lab_topview: UIView!
    @IBOutlet var collectionH: NSLayoutConstraint!
   
    
    @IBOutlet var thumbnail: UIImageView!
    @IBOutlet var lab_name: UILabel!

    @IBOutlet var btn_more: UIButton!
    @IBOutlet var lab_content: UILabel!
    @IBOutlet var lab_time: UILabel!
    var imgList = [UploadDocModel]()
    //用来放置各个图片单元
    var lab_h :CGFloat = 0
    @IBOutlet var collectionView: UICollectionView!
    //collectionView的布局
    
    @IBOutlet var nameH: NSLayoutConstraint!
    @IBOutlet var nameL: NSLayoutConstraint!
    @IBOutlet var collectionViewLayout: UICollectionViewFlowLayout!

    var numberline  = 4

    var isMOOC = false
//    var list = [UploadDocModel]()
    var deletegate :BBSHeadViewDelegate!

    override init(frame: CGRect) {
        super.init(frame: frame)
        awakeFromNib()
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    override func awakeFromNib() {
        super.awakeFromNib()
        self.backgroundColor = UIColor.clear
        let subView : UIView = Bundle.main.loadNibNamed("BBSHeadView", owner: self, options: nil)?.first as! UIView
        subView.frame = self.frame
        self.addSubview(subView)
        self.layer.borderColor = UIColor.lightGray.cgColor
        self.layer.borderWidth = 0.3

    }
    override func layoutSubviews() {
        super.layoutSubviews()
        self.thumbnail.layer.masksToBounds = true
        self.thumbnail.layer.cornerRadius = 25

        self.btn_more.setTitleColor(UIColor.bg, for: .normal)
        if(self.lab_content.bounds.size.height >= self.lab_h){
            self.btn_more.isHidden = true
        }
        
    }


    @IBAction func seeMore(_ sender: UIButton) {
        sender.isHidden = true

        let h = self.lab_h - self.lab_content.bounds.size.height
        
        self.deletegate?.BBSHeadView_viewMore!(height: h)
    }

    func setData(json:JSON){
        common.share.setSDImg(str: json["avatarUrl"].stringValue, imgview: self.thumbnail)
        self.lab_name.text = json["creatorName"].stringValue
        self.lab_time.text = json["dateCreated"].stringValue
        self.lab_content.text = json["content"].stringValue
        self.lab_content.numberOfLines = self.numberline
        self.imgList.removeAll()
        //拼接数据
        for i in json["docJson"]{
            let m = UploadDocModel.init(discussjson: i.1, type: "", md5: "", size: 0)
            self.imgList.append(m)
        }

        self.lab_h = json["content"].stringValue.heightWithLimit(CGSize.init(width:  width - 10, height: UIScreen.main.bounds.height), font: self.lab_content.font!)

        self.setUICollectionView()
    }
    
    func setjson(json:JSON){
        self.lab_content.text = json["Content"].stringValue
        self.lab_content.numberOfLines = self.numberline
        self.imgList.removeAll()
        //拼接数据
        for i in json["DocJson"]{
            let m = UploadDocModel.init(discussjson: i.1, type: "", md5: "", size: 0)
            self.imgList.append(m)
        }
        self.lab_h = json["Content"].stringValue.heightWithLimit(CGSize.init(width:  width - 10, height: UIScreen.main.bounds.height), font: self.lab_content.font!)
        
        self.setUICollectionView()
    }

    func setMOOCJson(json:JSON){
        self.isMOOC = true
        common.share.setSDImg(str: json["thumbnail"].stringValue, imgview: self.thumbnail)
        self.lab_name.text = json["reply"]["displayName"].stringValue
        self.lab_time.text = json["reply"]["dateCreated"].stringValue
        let l = common.share.loadHtml(str: json["reply"]["content"].stringValue)
        self.lab_content.attributedText = l
        self.lab_content.numberOfLines = self.numberline
        self.imgList.removeAll()
        //拼接数据
        for i in json["replyUrlList"]{
            let m = UploadDocModel.init(MOOCJSON: i.1)
            self.imgList.append(m)
        }

        self.lab_h = common.share.getHeightForView(text:  l, font: UIFont.italicSystemFont(ofSize: 0), width: UIScreen.main.bounds.width)

        
        self.setUICollectionView()
    }
    func setjson(content:String,title:String,imgList:[UploadDocModel]){
        self.lab_content.text = content
        self.lab_content.numberOfLines = self.numberline
        if(self.numberline == 0){
            self.btn_more.isHidden = true
        }

        self.imgList = imgList

        self.lab_h = content.heightWithLimit(CGSize.init(width:  width - 10, height: UIScreen.main.bounds.height), font: self.lab_content.font!)
        self.nameH.constant = 36
        self.nameL.constant  = -40
        self.lab_name.text = title
        self.thumbnail.isHidden = true
        self.lab_time.isHidden = true
        if( self.imgList.count < 1){
            self.collectionView.isHidden = true
        }else{
            self.collectionView.isHidden = false
            self.setUICollectionView()
           
        }
        self.backgroundColor = UIColor.bg

    }
   
    let width = UIScreen.main.bounds.width
    let height = UIScreen.main.bounds.height
}


extension BBSHeadView:UICollectionViewDataSource,UICollectionViewDelegate{

    func setUICollectionView(){

      
        self.collectionView.delegate = self
        self.collectionView.dataSource = self
         self.collectionView.backgroundColor = UIColor.red
        //注册重用的单元格
        let cellXIB = UINib.init(nibName: "itemImgCell", bundle: Bundle.main)
        self.collectionView.register(cellXIB, forCellWithReuseIdentifier: "itemImgCell")
        self.collectionView.backgroundColor = UIColor.clear
    }


    //collectionView单元格创建
    func collectionView(_ collectionView: UICollectionView,
                        cellForItemAt indexPath: IndexPath)
        -> UICollectionViewCell {
             let m = self.imgList[indexPath.row]

            let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "itemImgCell",
                                                          for: indexPath) as! itemImgCell
            common.share.setSDImg(str:m.url , imgview: cell.thumbnail)

            return cell
    }



    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        let m = self.imgList[indexPath.row]
        if isMOOC {
             self.deletegate?.BBSHeadView_backImgUrl!(str: m.docUrl)
        }else{
             self.deletegate?.BBSHeadView_backImgUrl!(str: m.url)
        }

    }

    func numberOfSections(in collectionView: UICollectionView) -> Int {
        return 1
    }
   
    //collectionView单元格数量
    func collectionView(_ collectionView: UICollectionView,
                        numberOfItemsInSection section: Int) -> Int {

        return self.imgList.count
    }
}
