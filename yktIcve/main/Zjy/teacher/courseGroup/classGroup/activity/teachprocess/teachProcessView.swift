//
//  teachProcessView.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2018/1/21.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit

class teachProcessView: UITableViewController {

    override func viewDidLoad() {
        super.viewDidLoad()

        self.getProcessInfo()
        //初始化数据，这一次数据，我们放在属性列表文件里


        tableView.register(TimeLineCell.self, forCellReuseIdentifier: "teachcell")
        tableView.tableFooterView = UIView(frame:CGRect.zero)//除去多余的cell
        if #available(iOS 9.0, *) {
            tableView.cellLayoutMarginsFollowReadableWidth = false
        } else {
            // Fallback on earlier versions
        }

        //让单元格自适应
        tableView!.rowHeight = UITableViewAutomaticDimension
        tableView!.estimatedRowHeight = 100
        tableView!.separatorStyle = UITableViewCellSeparatorStyle.none

        // Uncomment the following line to preserve selection between presentations
        // self.clearsSelectionOnViewWillAppear = false

        // Uncomment the following line to display an Edit button in the navigation bar for this view controller.
        // self.navigationItem.rightBarButtonItem = self.editButtonItem()
    }

    //在本例中，只有一个分区
    override func numberOfSections(in tableView: UITableView) -> Int {
        return 1;
    }

    //返回表格行数（也就是返回控件数）
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return  self.ProcessInfos.count
    }

    //创建各单元显示内容(创建参数indexPath指定的单元）
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath)
        -> UITableViewCell {
            let identifier = "SwiftCell"
            var cell = tableView.dequeueReusableCell(withIdentifier: identifier)
                as? TimeLineCell
            if cell == nil{
                cell = TimeLineCell(style: .default, reuseIdentifier: identifier)
                cell?.selectionStyle = .none
            }



            //获取记录
            let process = self.ProcessInfos[indexPath.row]

            var  index = 0
            index = typeTitle.index(of: process.dataType)!
            //设置时间轴上的图标
            cell?.timeLineIcon.text = typeIcons[index]
            cell?.timeLineIcon.textColor = UIColor.colorWithHex(hexColor: Int64(typeIconColor[index]))
            //设置活动类型
            cell!.dataTypeLabel.text = process.dataType

            //设置参与人数与总人数
            cell?.attendLabel.text = "参与人数\(process.stuCount)/总数:\(process.classStuCount)人"

            cell?.forepartTimeLineLabel.backgroundColor = UIColor.colorWithHex(hexColor: Int64(typeIconColor[index]))
            cell?.backpartTimeLineLabel.backgroundColor = UIColor.colorWithHex(hexColor: Int64(typeIconColor[index]))

            let a = NSString(string:process.dateCreated)
            //设置时间
            cell?.dateTimeLabel.text = "\(a.substring(with: NSMakeRange(11, 5)))"
            //设置消费内容
            cell?.titleLabel.text = process.title
//            //设置备注信息
//            cell?.appendixLabel.text = consumption.appendix
//            //设置是否有备注（自动更新备注标签容器相关约束）
//            cell?.hasAppendix = (cell?.appendixLabel.text != "")
            return cell!
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
    }



    var typeTitle = ["讨论","头脑风暴","签到","提问","抢答","随堂测验","投票","小组PK","问卷调查"]
    var typeIcons = ["\u{e667}","\u{e66c}","\u{e665}","\u{e66b}","\u{e66a}","\u{e666}","\u{e6c8}","\u{e69f}","\u{e701}"]
    var typeIconColor = [0x54b8ff,0x879eff,0xfa8144,0x2dcaa9,0x2dcaa9,0xd0de37,0x54b8ff,0xffd73e,0x37deac]
    let dateFormatter = DateFormatter()
    var ProcessInfos = [ProcessInfo]()
    var  openClassIds = ""
    var  activityId = ""
    var  courseOpenId = ""
}


//教学过程信息
struct ProcessInfo {
    let title:String //活动名称
    let stuCount:Int //参与学生数
    let dateCreated:String //时间
    let classStuCount:Int //班级总人数
    let dataType:String //活动类型
    let id:String //唯一标符
}
