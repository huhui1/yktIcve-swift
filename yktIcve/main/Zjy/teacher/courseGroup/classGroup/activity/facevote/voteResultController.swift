//
//  voteResultController.swift
//  云课堂职教云
//
//  Created by zqy on 2018/4/3.
//  Copyright © 2018年 jcjy. All rights reserved.
//

import Foundation
import SwiftyJSON
import Alamofire

extension voteResultView{
    func getFaceTeachVoteResult(){

        XLBallLoading.show(in: self.view)
        let dict = ["voteId":self.voteId]
        Alamofire.request(appAPI.FaceTeach_getFaceTeachVoteResult, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if(json["code"] == 1){
//                    ZKProgressHUD.hide()
                    self.theWebView.evaluateJavaScript("voteResult.get(\(json),'\(self.state)')",
                        completionHandler: nil)
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
        
    }

    
    @objc func overVote(_ btn :UIBarButtonItem){
        let alertController = UIAlertController(title: "提示",
                                                message:"是否结束本次投票", preferredStyle: .alert)
        let cancelAction = UIAlertAction(title: "取消", style: .cancel, handler: nil)
        
        let okAction = UIAlertAction(title: "确定", style: .destructive, handler: {
            action in
            XLBallLoading.show(in: self.view)
            let dict = ["voteId":self.voteId]
            Alamofire.request(appAPI.FaceTeach_closeVote, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
                if let value = response.result.value {
                    let json = JSON(value)
                    if(json["code"] == 1){
                        self.reload!()
                        self.getFaceTeachVoteResult()
                        //移除按钮
                        ZKProgressHUD.showMessage(json["msg"].stringValue);
                        self.navigationItem.rightBarButtonItem = nil
                    }else{
                        ZKProgressHUD.showError(json["msg"].stringValue);
                    }
                    XLBallLoading.hide(in: self.view)
                }else{
                    ZKProgressHUD.showError("网络环境异常请稍后再试！");
                    XLBallLoading.hide(in: self.view)
                }
            }
        })
        alertController.addAction(cancelAction)
        alertController.addAction(okAction)
        self.present(alertController, animated: true, completion: nil)
        
        

    }
    func previewImg (url:String){
        let vc = whiteboardView()
        vc.file = url

        self.present(vc, animated: true, completion: nil)
    }

    func addEventListener(){

        let data = [
            "activityId": self.activityId,
            "courseOpenId": self.courseOpenId,
            "schoolId": Account.defaultAccount.schoolId!,
            "voteId": self.voteId]

        let params = ["type":"vote",
                      "data":data,
                      "fromRes":false] as [String : Any];

        let dict = ["type":"face",
                    "params":JSON.init(params).description ];
      ZQSocketManager.share.notificationSocketManager(data: dict)

    }

    @objc func  backBtnClick(){
        let dict = ["type":"closeRes"];
        ZQSocketManager.share.notificationSocketManager(data: dict)
        theWebView.configuration.userContentController.removeScriptMessageHandler(forName: "interOp")
         self.navigationController?.popViewController(animated: true)
    }
}
