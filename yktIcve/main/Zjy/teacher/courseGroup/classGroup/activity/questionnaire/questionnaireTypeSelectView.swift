//
//  questionnaireTypeSelectView.swift
//  云课堂-职教云
//
//  Created by cc on 2018/3/29.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit

class questionnaireTypeSelectView: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()
        self.modalPresentationStyle = .custom
        self.setUI()
        // Do any additional setup after loading the view.
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    func setUI(){
        self.view.addSubview(bgview)
        bgview.snp.makeConstraints{ (make) in
            make.width.equalTo(width)
            make.height.equalTo(130)
            make.left.equalTo(0)
            make.bottom.equalTo(self.view.snp.bottom)
        }
        self.bgview.addSubview(btn_cancel)
        btn_cancel.snp.makeConstraints{ (make) in
            make.width.equalTo(width)
            make.height.equalTo(45)
            make.bottom.equalTo(self.bgview.snp.bottom)
            make.left.equalTo(0)
        }
        
        self.bgview.addSubview(lab_line)
        lab_line.snp.makeConstraints{ (make) in
            make.width.equalTo(width)
            make.height.equalTo(2)
            make.bottom.equalTo(self.btn_cancel.snp.top)
            make.left.equalTo(0)
        }
        
        self.bgview.addSubview(btn_single)
        btn_single.snp.makeConstraints{ (make) in
            make.width.equalTo(50)
            make.height.equalTo(50)
            make.left.equalTo(40)
            make.top.equalTo(10)
        }
        self.btn_single.setAttributedTitle(shezhi(str: "\u{e6b4}" ,  colorStr: 0x5dbc21), for: .normal)
        self.bgview.addSubview(lab_single)
        lab_single.snp.makeConstraints{ (make) in
            make.width.equalTo(btn_single)
            make.height.equalTo(20)
            make.centerX.equalTo(self.btn_single.snp.centerX)
            make.top.equalTo(self.btn_single.snp.bottom)
        }
        
        
        self.bgview.addSubview(btn_double)
        btn_double.snp.makeConstraints{ (make) in
            make.width.equalTo(50)
            make.height.equalTo(50)
            make.left.equalTo(self.btn_single.snp.right).offset(40)
            make.top.equalTo(10)
        }
        self.btn_double.setAttributedTitle(shezhi(str: "\u{e6b6}" ,  colorStr: 0x5eb5f6), for: .normal)
        self.bgview.addSubview(lab_double)
        lab_double.snp.makeConstraints{ (make) in
            make.width.equalTo(btn_single)
            make.height.equalTo(20)
            make.centerX.equalTo(self.btn_double.snp.centerX)
            make.top.equalTo(self.btn_double.snp.bottom)
        }
        
        
        self.bgview.addSubview(btn_judge)
        btn_judge.snp.makeConstraints{ (make) in
            make.width.equalTo(50)
            make.height.equalTo(50)
            make.left.equalTo(self.btn_double.snp.right).offset(40)
            make.top.equalTo(10)
        }
        self.btn_judge.setAttributedTitle(shezhi(str: "\u{e6b7}" ,  colorStr: 0x06a379), for: .normal)
        self.bgview.addSubview(lab_judge)
        lab_judge.snp.makeConstraints{ (make) in
            make.width.equalTo(btn_single)
            make.height.equalTo(20)
            make.centerX.equalTo(self.btn_judge.snp.centerX)
            make.top.equalTo(self.btn_judge.snp.bottom)
        }
    }
    //关闭遮罩层
    @objc func close(){
         self.dismiss(animated: true, completion: nil)
        
    }
//    跳转新增题目
    @objc func jump(_ btn:UIButton){
        self.parentVc.addChoice(tag:btn.tag)
    }
    func  shezhi(str:String, colorStr:Int64) -> NSAttributedString{
        let attributeString = NSMutableAttributedString(string:str)
        attributeString.addAttribute(NSAttributedStringKey.foregroundColor, value: UIColor.white,
                                     range: NSMakeRange(0,1))
        attributeString.addAttribute(NSAttributedStringKey.backgroundColor, value: UIColor.colorWithHex(hexColor: colorStr), range: NSMakeRange(0,1))
        attributeString.addAttribute(NSAttributedStringKey.font, value: UIFont.init(name: "iconfont", size: 30)!, range: NSMakeRange(0,1))
        return attributeString
    }

    override func touchesEnded(_ touches: Set<UITouch>, with event: UIEvent?) {
        self.presentingViewController?.dismiss(animated: true, completion: nil);

    }

    let width = UIScreen.main.bounds.width
    
    lazy var bgview : UIView = {
       let view = UIView()
        view.backgroundColor = UIColor.white
       return view
    }()
    lazy var lab_line : UILabel = {
       let lab = UILabel()
        lab.backgroundColor = UIColor.colorWithHex(hexColor: 0xf1f1f1)
        return lab
    }()
    //取消
    lazy var btn_cancel : UIButton = {
        let btn = UIButton()
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 16)
        btn.setTitle("取 消", for: .normal)
        btn.setTitleColor(UIColor.black, for: .normal)
        btn.backgroundColor = UIColor.white
        btn.addTarget(self, action: #selector(self.close), for: .touchUpInside)
        return btn
    }()
    //单选
    lazy var btn_single : UIButton = {
       let btn = UIButton()
        btn.backgroundColor = UIColor.colorWithHex(hexColor: 0x5dbc21)
        btn.tag = 1
        btn.addTarget(self, action: #selector(jump(_:)), for: .touchUpInside)
       return btn
    }()
    lazy var lab_single : UILabel = {
      let lab = UILabel()
        lab.backgroundColor = UIColor.white
        lab.font = UIFont.init(name: "iconfont", size: 13)
        lab.textColor = UIColor.colorWithHex(hexColor: 0x707070)
        lab.text = "单选题"
        lab.textAlignment = .center
        return lab
    }()
    //多选
    lazy var btn_double : UIButton = {
        let btn = UIButton()
        btn.backgroundColor = UIColor.colorWithHex(hexColor: 0x5eb5f6)
        btn.tag = 2
        btn.addTarget(self, action: #selector(self.jump(_:)), for: .touchUpInside)
        return btn
    }()
    lazy var lab_double : UILabel = {
        let lab = UILabel()
        lab.backgroundColor = UIColor.white
        lab.font = UIFont.init(name: "iconfont", size: 13)
        lab.textColor = UIColor.colorWithHex(hexColor: 0x707070)
        lab.text = "多选题"
        lab.textAlignment = .center
        return lab
    }()
    //判断
    lazy var btn_judge : UIButton = {
        let btn = UIButton()
        btn.backgroundColor = UIColor.colorWithHex(hexColor: 0x06a379)
        btn.tag = 3
        btn.addTarget(self, action: #selector(self.jump(_:)), for: .touchUpInside)
        return btn
    }()
    lazy var lab_judge : UILabel = {
        let lab = UILabel()
        lab.backgroundColor = UIColor.white
        lab.font = UIFont.init(name: "iconfont", size: 13)
        lab.textColor = UIColor.colorWithHex(hexColor: 0x707070)
        lab.text = "判断题"
        lab.textAlignment = .center
        return lab
    }()
    
    var parentVc : createQuestionnaireView!
//    lazy var isHasImg = false
}



