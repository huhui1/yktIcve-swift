//
//  createExamView.swift
//  云课堂职教云
//
//  Created by cc on 2018/4/18.
//  Copyright © 2018年 jcjy. All rights reserved.
//

import UIKit
import SwiftyJSON

class createExamView: UIViewController,UITableViewDelegate,UITableViewDataSource {

    override func viewDidLoad() {
        super.viewDidLoad()
        self.title = "考试"
        self.view.backgroundColor = UIColor.white
       
        self.setUI()
        self.getExam(isRefresh: true)
        self.setTableview()
        //下拉刷新相关设置,使用闭包Block
        self.tableView.mj_header = MJRefreshNormalHeader(refreshingBlock: {
            //重现生成数据
            self.getExam(isRefresh: false);
            
        })
        // Do any additional setup after loading the view.
        let item = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = item
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    func numberOfSections(in tableView: UITableView) -> Int {
        // #warning Incomplete implementation, return the number of sections
        return 1
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        // #warning Incomplete implementation, return the number of rows
        return  self.list.count
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 100
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell:createHomeworkTableViewCell  = tableView.dequeueReusableCell(withIdentifier: "SwiftCell") as! createHomeworkTableViewCell
        
        var data = JSON(self.list[indexPath.row])
        let arr = ["","在线考试","登分考试"]
        cell.lab_name.text = data["Title"].stringValue
        cell.lab_type.text = "考试类型:\(arr[data["examType"].intValue])";
        if(data["Remark"].stringValue != ""){
            //计算字的宽度
            let messtr = "\(data["Remark"].stringValue)" as NSString
            let width = messtr.size(withAttributes: [NSAttributedStringKey.font:UIFont.systemFont(ofSize: 12)]).width
            cell.lab_remark.text = ("考试要求:\(data["Remark"].stringValue)")
            if width > self.width - 120{
                cell.btn_more.isHidden = false
            }else{
                cell.btn_more.isHidden = true
            }
        }else{
            cell.lab_remark.text = "考试要求:暂无考试要求"
            cell.btn_more.isHidden = true
        }
        cell.btn_more.tag = indexPath.row
        cell.btn_more.addTarget(self, action: #selector(self.viewMore(_:)), for: .touchUpInside)
//        if(data["Remark"].stringValue != ""){
//            cell.lab_remark.text = ("考试要求:\(data["Remark"].stringValue)")
//        }else{
//            cell.lab_remark.text = "考试要求:暂无考试要求"
//        }

        cell.btn_preview.tag = indexPath.row
        cell.btn_preview.addTarget(self, action: #selector(self.preview(_:)), for: .touchUpInside)
        return cell
        
    }
    //查看更多
    @objc func viewMore(_ btn :UIButton){
        let data = JSON(self.list[btn.tag])
        let vc = homeworkAndExamRemarkView()
        vc.Htitle = data["Title"].stringValue
        vc.content = data["Remark"].stringValue
        vc.hidesBottomBarWhenPushed = true
        self.navigationController?.pushViewController(vc, animated: true)
        
    }
    //预览
    @objc func preview(_ btn:UIButton){
        let json = JSON(self.list[btn.tag]);
        if(json["examType"] == 2){
            ZKProgressHUD.showMessage("登分考试,不可预览")
        }else{
            let vc = examinationpreview()
            vc.openClassId = self.openClassId;
            vc.courseOpenId = self.courseOpenId;
            vc.title = json["Title"].stringValue
            vc.userInfo = self.userInfo
            vc.examId = json["Id"].stringValue
            self.navigationController?.pushViewController(vc, animated: true)
        }
    }
    func setTableview(){
        self.tableView = UITableView.init(frame: CGRect(x:0, y:0, width:width, height:height - 113))
        if common.share.isX(){
            self.tableView = UITableView.init(frame: CGRect(x:0, y:0, width:width, height:height - 165))
        }
        self.tableView.delegate = self;
        self.tableView.dataSource = self;
        self.tableView.register(createHomeworkTableViewCell.self, forCellReuseIdentifier: "SwiftCell");
        self.tableView.tableFooterView = UIView(frame:CGRect.zero)//除去多余的cell
        self.tableView.separatorInset = UIEdgeInsets.zero;
        self.tableView.layoutMargins = UIEdgeInsets.zero;
        self.tableView.backgroundColor = UIColor.white
        self.tableView.allowsMultipleSelectionDuringEditing = true
        
        self.tableView.setEditing(true, animated:true)
        
        if #available(iOS 9.0, *) {
            self.tableView.cellLayoutMarginsFollowReadableWidth = false
        } else {
            
        }
       
        self.view.addSubview(tableView)
    }
    
    func setUI(){
        
        self.view.addSubview(self.btn_preserve)
        let HX = common.share.returnSafeAreaLineHeight()
        self.btn_preserve.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(50)
            make.bottom.equalTo(self.view.snp.bottom).offset(HX)
            make.left.equalTo(0)
        }
        
    }
    var tableView:UITableView!
    //保存
    lazy var btn_preserve : UIButton = {
        let btn = UIButton()
        btn.setTitle("保存", for: .normal)
        btn.setTitleColor(UIColor.white, for: .normal)
        btn.backgroundColor = UIColor.bg
        btn.contentVerticalAlignment = .center
        btn.titleLabel?.font = UIFont.italicSystemFont(ofSize: 18)
        btn.addTarget(self, action: #selector(self.saveExam), for: .touchUpInside)
        return btn
    }()
    
    let width = UIScreen.main.bounds.width
    let height = UIScreen.main.bounds.height
    
    lazy var openClassId :String = {return ""}()
    lazy var courseOpenId :String = {return ""}()
    lazy var activityId : String = {return ""}()
    lazy var classState:Int = {return 0 }()
    lazy var list : NSArray = []
    var userInfo :User!
    
    var reloadClosure :(() ->Void)?
    lazy var examIds : Array = {
        return []
    }()
}
