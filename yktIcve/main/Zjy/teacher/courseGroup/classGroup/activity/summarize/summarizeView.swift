//
//  summarizeViewController.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2017/9/20.
//  Copyright © 2017年 zqy. All rights reserved.
//

import UIKit
import SwiftyJSON

class summarizeView: UIViewController,UITableViewDataSource,UITableViewDelegate{
    


    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.white
        self.refreshItemData(isRefresh: true)
        
        // Do any additional setup after loading the view.
    }
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    
    func  fetchCoverDetails(isRefresh:Bool){
        self.covers.removeAll()
        self.selStuInfos.removeAll()
        self.reservedInfo.removeAll()
        for i in 0..<self.list.count {
            let stuinfo = JSON(self.list[i])
            let url = URL(string:stuinfo["avatorUrl"].stringValue)
            if url != nil {
                let movieRecord = CoverRecord(name:"", url:url!)
                self.covers.append(movieRecord)
            }
            let selstu = selsummarizeStuInfo.init(Id: stuinfo["stuId"].stringValue,
                                          Name:stuinfo["stuName"].stringValue,
                                          StuNo: stuinfo["stuNo"].stringValue,
                                          JoinCount: stuinfo["joinCount"].intValue,
                                          Score: stuinfo["score"].intValue,
                                          avatorUrl: stuinfo["avatorUrl"].stringValue,
                                          TeaEvaluateScore:stuinfo["teaEvaluateScore"].intValue)
            selStuInfos.append(selstu)
        }
        self.reservedInfo = self.selStuInfos
        if(!isRefresh){
            //结束刷新
            //重现加载表格数据
            self.tableView.mj_header.endRefreshing();
            self.tableView.reloadData();
        }else{
            self.setTableView()
        }
        
    }
    
    func  setTableView(){

        //创建表视图
        self.tableView.frame =  CGRect(x:0, y: 0, width:self.view.bounds.width, height:self.view.bounds.height)
        
        self.tableView.delegate = self;
        self.tableView.dataSource = self;
        //创建一个重用的单元格
        self.tableView.register(summarizeTableViewCell.self, forCellReuseIdentifier: "SwiftCell");
        
        self.tableView.tableFooterView = UIView(frame:CGRect.zero)//除去多余的cell
        
        if #available(iOS 9.0, *) {
            self.tableView.cellLayoutMarginsFollowReadableWidth = false
        } else {
            
        }
        

        
        topview.frame.size = CGSize.init(width: self.view.bounds.width, height: 50)
        topview.btn_attend.addTarget(self, action: #selector(self.orderBytype(_:)), for: .touchUpInside)
        topview.btn_score.addTarget(self, action: #selector(self.orderBytype(_:)), for: .touchUpInside)
        self.tableView.tableHeaderView = topview
        
        //rowHeight属性设置为UITableViewAutomaticDimension
        self.tableView.rowHeight = UITableViewAutomaticDimension;
        
        //下拉刷新相关设置,使用闭包Block
        self.tableView.mj_header = MJRefreshNormalHeader(refreshingBlock: {
            //重现生成数据
            self.refreshItemData(isRefresh:false);
            
        })
        
        self.view.addSubview(self.tableView);
        
    }
    
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat
    {
        return 70;
    }
    
    //返回表格行数（也就是返回控件数）
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        
        return self.selStuInfos.count;
        
    }
    
    //创建各单元显示内容(创建参数indexPath指定的单元）
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath)
        -> UITableViewCell {
            
            let stuinfo = selStuInfos[indexPath.row]
            //为了提供表格显示性能，已创建完成的单元需重复使用
            let identify:String = "SwiftCell"
            //同一形式的单元格重复使用，在声明时已注册
            let cell = tableView.dequeueReusableCell(withIdentifier: identify,
                                                     for: indexPath) as! summarizeTableViewCell
            cell.lab_Index.text = String(indexPath.row + 1)
            cell.lab_Name.text = stuinfo.Name
            cell.teaEvaluateScore.text = "\(stuinfo.TeaEvaluateScore)"
            cell.lab_num.text = stuinfo.StuNo
            cell.lab_attend.text = String(stuinfo.JoinCount)
            if stuinfo.TeaEvaluateScore != 0  {
                cell.lab_socre.text = "\(stuinfo.Score+stuinfo.TeaEvaluateScore)(\(stuinfo.Score))"
            }else{
                 cell.lab_socre.text = String(stuinfo.Score)
            }
            common.share.setSDImg(str: stuinfo.avatorUrl, imgview: cell.imgView_avatar)
            
            return cell
    }
    

    //点击
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
         tableView .deselectRow(at: indexPath, animated: true)
          let json = JSON(self.list[indexPath.row]);
         let vc = keyBoardView()
         vc.modalTransitionStyle = .crossDissolve
         vc.view.backgroundColor = UIColor(red: 0, green: 0, blue: 0, alpha: 0.1);
           vc.setSocreClosure = {(score) in
            if(score < 99){
                self.selStuInfos[indexPath.row].TeaEvaluateScore = score
                self.checkScore(json: json,score:score)
            }
            self.navigationController?.dismiss(animated: true, completion: nil)
            
        }
        self.present(vc, animated: true, completion: nil)

        
    }
    
   
    var setSocreClosure :((_ score:Int) ->Void)?
    lazy var courseOpenId :String = {return ""}()
    lazy var activityId: String = {return ""}()
    lazy var tableView :UITableView = {
        let table = UITableView()
        
        return table
    }()
    
    lazy var list :NSArray = {
        return []
    }()
    var selStuInfos = [selsummarizeStuInfo]()
    var reservedInfo = [selsummarizeStuInfo]()
    var covers = [CoverRecord]()
    let coverOperations = CoverOperations()
    let width = UIScreen.main.bounds.width;
    lazy var topview:summarizeTopView = {
        let view = summarizeTopView()
        return view
    }()
    
}

struct  selsummarizeStuInfo {
    let Id:String
    let Name:String
    let StuNo:String
    let JoinCount:Int
    let Score:Int
    let avatorUrl:String
    var TeaEvaluateScore:Int
    
}
