//
//  groupPKInfoController.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2018/1/29.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import Alamofire
import SwiftyJSON

extension  groupPKInfoView {

    //获取数据
    func get(){
//        ZKProgressHUD.setAnimationStyle(.chrysanthemum);
//        ZKProgressHUD.show();
        XLBallLoading.show(in: self.view)
        let dict = ["PKId":self.PKId]
        Alamofire.request(appAPI.FaceTeach_getFaceGroupList, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
//                ZKProgressHUD.hide(delay: 0);
                let json = JSON(value)
                if(json["code"]>0){
                    self.setGroupInfo(json:json["groupList"])

                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showMessage("网络开小差了")
                XLBallLoading.hide(in: self.view)
            }
        }
    }


    func addEventListener(){
        var t = [Dictionary<String,String>]()
        for i in 0..<self.groupInfos.count{
            let d = ["id":self.groupInfos[i].Id,
                     "score":"\(self.groupInfos[i].Score)"]
            t.append(d)
        }
        let params = ["type":"pkinfo",
                      "pkgroup":t] as [String : Any]
        let dict = ["type":"face","params":JSON.init(params).description ];
        self.emitToPC(dict: dict)
    }

    override func viewWillDisappear(_ animated: Bool) {
        if(!self.isPushed){
            let dict = ["type":"closeRes"];
            self.emitToPC(dict: dict)
        }

        self.isPushed = false
    }

    //设置结构体
    func setGroupInfo(json:JSON){
        self.groupInfos.removeAll()
        for i in 0..<json.count{
            let group = groupInfo.init(Name: json[i]["GroupName"].stringValue,
                                       Id: json[i]["Id"].stringValue,
                                       Score: json[i]["GroupScore"].intValue,
                                       Members: json[i]["GroupStuCount"].intValue)
            self.groupInfos.append(group)

        }

        self.tableView.reloadData()
        self.addEventListener()
    }

    //减
    @objc func delGroup(){
        self.btn_less.isEnabled = false
        if(self.state == 3){
            self.btn_less.isEnabled = true
            ZKProgressHUD.showMessage("本次小组pk已经生成分数!")
            return
        }
        if common.share.isPurnInt(string: self.labnum.text!){
            if Int(self.labnum.text!)! > 0{
                self.labnum.text = "\(Int(self.labnum.text!)! - 1)"
            }else{
                self.btn_less.isEnabled = true
                ZKProgressHUD.showMessage("小组任务不存在");
                return
            }
        }
        if(self.groupInfos.count > 0){
             let dict = ["groupId":self.groupInfos[self.groupInfos.count-1].Id] as [String : Any]
            Alamofire.request(appAPI.FaceTeach_delFaceGroup, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
                self.btn_less.isEnabled = true
                if let value = response.result.value {
                    let json = JSON(value)
                    if(json["code"]>0){
                        self.groupInfos.removeLast()
                        self.tableView.reloadData()
                        self.addEventListener()
                    NotificationCenter.default.post(name:NSNotification.Name("reloadgroupPKList"), object: dict);
//                        if((self.reloadPkListClosure) != nil){
//                            self.reloadPkListClosure!()
//                        }
                    }else{
                        ZKProgressHUD.showError(json["msg"].stringValue);
                    }
                    
                }else{
                    ZKProgressHUD.showError("网络环境异常请稍后再试！");
                }
            }

        }
    }

    //加组
    @objc func addGroup(){
        self.btn_add.isEnabled = false
        if(self.state == 3){
            self.btn_add.isEnabled = true
            ZKProgressHUD.showMessage("本次小组pk已经生成分数!")
            return
        }
        if common.share.isPurnInt(string: self.labnum.text!){
            if Int(self.labnum.text!)! < activityOpenClassStuCount{
                self.labnum.text = "\(Int(self.labnum.text!)! + 1)"
            }else{
                self.btn_add.isEnabled = true
                ZKProgressHUD.showMessage("小组个数不能大于面授班级学生人数！");
                return
            }
        }
        let dict = ["PKId":self.PKId,"teaId":Account.defaultAccount.id!,"sourceType":3] as [String : Any]
        Alamofire.request(appAPI.FaceTeach_addFaceGroup, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            self.btn_add.isEnabled = true
            if let value = response.result.value {
                let json = JSON(value)
                if(json["code"]>0){
                    let group = groupInfo.init(Name: json["groupInfo"]["GroupName"].stringValue, Id:json["groupInfo"]["Id"].stringValue, Score: 0, Members: 0)
                    self.groupInfos.append(group)
                    self.tableView.reloadData()
                    self.addEventListener()
                  NotificationCenter.default.post(name:NSNotification.Name("reloadgroupPKList"), object: dict);

                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }

    }
    //重来
    @objc func reset(_ btn :UIButton){
        let dict = ["PKId":self.PKId]
        Alamofire.request(appAPI.FaceTeach_resetGroupScore, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if(json["code"]>0){
                    for i in 0..<self.groupInfos.count {
                        self.groupInfos[i].Score = 0
                    }
                    self.tableView.reloadData()
                    self.addEventListener()
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }

    }
    @objc func overGroupPK(_ btn :UIButton){
        for groupInfo in groupInfos{
            if groupInfo.Members > 0{
                self.isGroupCount = true
            }
            if isGroupCount{
                break
            }
            
        }
        if isGroupCount{
            let alertController = UIAlertController(title: "提示",
                                                    message:"是否结束小组PK", preferredStyle: .alert)
            let cancelAction = UIAlertAction(title: "取消", style: .cancel, handler: nil)
            
            let okAction = UIAlertAction(title: "确定", style: .destructive, handler: {
                action in
                self.overPK()
            })
            alertController.addAction(cancelAction)
            alertController.addAction(okAction)
            self.present(alertController, animated: true, completion: nil)
        }else{
            ZKProgressHUD.showMessage("小组中暂无学生")
        }
    }
    
    
    //结束pk
    func overPK(){
        if self.isGroupCount{
            isoverPK()
        }
    }
    func isoverPK(){
        let dict = ["PKId":self.PKId,"state":3] as [String : Any]
        
        Alamofire.request(appAPI.FaceTeach_changePKState, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if(json["code"]>0){
                NotificationCenter.default.post(name:NSNotification.Name("reloadgroupPKList"), object: dict);
                    self.btn_reSet.isHidden = true
                    self.btn_over.isHidden = true
                    self.btn_add.isHidden = true
                    self.btn_less.isHidden = true
                    self.labnum.isHidden = true

                    self.state=3
                    self.tableView.reloadData()
                    ZKProgressHUD.showMessage(json["msg"].stringValue)
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }
        
        
    }
    //打分
    func checkScore(groupPK:groupInfo){
        let dict = ["PKId":self.PKId,"groupId":groupPK.Id,"getScore":groupPK.Score] as [String : Any]
        Alamofire.request(appAPI.FaceTeach_saveGroupScore, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    self.addEventListener()

                }else{
                    ZKProgressHUD.showError("网络异常请稍后再试！");
                }
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }
        
    }
    //查看小组pk未分组人员
    @objc func tapped(){
        let vc = ungroupMemberTableView()
            vc.PKId = self.PKId
            vc.state = self.state
            vc.groupPKClosure = { () in
                self.get()}
         self.isPushed = true
        self.navigationController?.pushViewController(vc, animated: true);
    }


    ///    投屏事件
    ///
    /// - Parameter dict: [String:String]

    func emitToPC(dict:[String:String]){

        ZQSocketManager.share.notificationSocketManager(data: dict)
    }

}
