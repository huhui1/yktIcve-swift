//
//  ungroupMemberTableView.swift
//  66iclasscloud
//
//  Created by zqy on 2018/1/30.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import SwiftyJSON
class addMemberTableView: UIViewController,UITableViewDelegate,UITableViewDataSource  {
    var tableView:UITableView!
    var list :NSArray = [];
    var reloadClosure :(() ->Void)?
    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.white
        self.setTableViewUI()
        self.setFootUI()
        self.title = "添加成员"
        let item = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = item
        if #available(iOS 9.0, *) {
            tableView.cellLayoutMarginsFollowReadableWidth = false
        } else {
            // Fallback on earlier versions
        }
        
       self.refreshItemData(isRefresh: true)
        
        //下拉刷新相关设置,使用闭包Block
        self.tableView.mj_header = MJRefreshNormalHeader(refreshingBlock: {
            //重现生成数据
            self.refreshItemData(isRefresh:false);
            
        })
        
        // Uncomment the following line to preserve selection between presentations
        // self.clearsSelectionOnViewWillAppear = false
        
        // Uncomment the following line to display an Edit button in the navigation bar for this view controller.
        // self.navigationItem.rightBarButtonItem = self.editButtonItem()
    }
    private func setTableViewUI(){
        
        //创建表视图
        self.tableView = UITableView.init(frame: CGRect(x:0, y:0, width:UIScreen.main.bounds.width, height:UIScreen.main.bounds.height - 113));
        if common.share.isX(){
            self.tableView = UITableView.init(frame: CGRect(x:0, y:0, width:UIScreen.main.bounds.width, height:UIScreen.main.bounds.height - 165));
        }
        self.tableView.delegate = self;
        self.tableView.dataSource = self;
        //创建一个重用的单元格
        self.tableView.register(addMemberTableViewCell.self, forCellReuseIdentifier: "addMemberTableViewCell")
        self.tableView.tableFooterView = UIView(frame:CGRect.zero)//除去多余的cell
        self.tableView.separatorInset = UIEdgeInsets.zero;
        self.tableView.layoutMargins = UIEdgeInsets.zero;
        
        self.tableView.tableFooterView = UIView.init(frame: CGRect.zero)
        
        if #available(iOS 9.0, *) {
            self.tableView.cellLayoutMarginsFollowReadableWidth = false
        } else {
            
        }
        //rowHeight属性设置为UITableViewAutomaticDimension
        self.tableView.rowHeight = UITableViewAutomaticDimension;
//        self.tableView!.backgroundColor = UIColor.colorWithHex(hexColor: 0xf2f2f2)
        self.view.addSubview(self.tableView!);
        
    }
    func setFootUI(){
        self.view.addSubview(divideGroupBtn)
        let HX = common.share.returnSafeAreaLineHeight()
        self.divideGroupBtn.snp.makeConstraints { (make) in
            make.width.equalTo(UIScreen.main.bounds.width)
            make.height.equalTo(50)
            make.bottom.equalTo(self.view.snp.bottom).offset(HX)
        }
       self.divideGroupBtn.addTarget(self, action: #selector(self.addGroupMember), for: .touchUpInside)
    }
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    // MARK: - Table view data source
    
    func numberOfSections(in tableView: UITableView) -> Int {
        // #warning Incomplete implementation, return the number of sections
        return 1
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat
    {
        return 50;
    }
    
    
    
    //返回表格行数（也就是返回控件数）
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        
        return self.list.count;
    }
    
    //创建各单元显示内容(创建参数indexPath指定的单元）
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath)
        -> UITableViewCell {
            
            let cell:addMemberTableViewCell = tableView.dequeueReusableCell(withIdentifier: "addMemberTableViewCell") as! addMemberTableViewCell
            

            let stuInfo = stuInfos[indexPath.row]
            cell.lab_Name.text = stuInfo.name
            cell.lab_num.text = stuInfo.no
//            cell.imgView_avatar.sd_setImage(with: URL(string: stuInfo.url), placeholderImage: UIImage(named: "default_slider_img.png"))
            common.share.setSDImg(str: stuInfo.url, imgview: cell.imgView_avatar)

            return cell
    }
    
    //返回编辑类型，滑动删除
    
     func tableView(_ tableView: UITableView, editingStyleForRowAt indexPath: IndexPath) -> UITableViewCellEditingStyle {
        
        return UITableViewCellEditingStyle.delete
        
    }
    
    //点击删除按钮的响应方法，在这里处理删除的逻辑
    
     func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {
        
        if editingStyle == UITableViewCellEditingStyle.delete {
            
            if editingStyle == UITableViewCellEditingStyle.delete {
                //删除数据源当前的数据
               self.delFaceGroupStu(Id:JSON(self.list[indexPath.row])["Id"].stringValue)

            }
        }
        
    }
    //点击
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        
        
        
    }
    
    lazy  var divideGroupBtn : UIButton = {
        let btn = UIButton()
        btn.contentMode = .center
        btn.setTitleColor(UIColor.white, for: .normal)
        btn.setTitle("添加成员", for: .normal)
        btn.backgroundColor = UIColor.colorWithHex(hexColor: 0x23c397)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 16)
        return btn ;
        
    }()
    lazy var PKId :String = {return ""}()
    lazy var groupId :String = {return ""}()
    lazy var state :Int = {return 0}()
    lazy var activityId:String  = {return ""}()
    lazy var courseOpenId :String = {return ""}()
  
    var stuInfos = [groupPK]()

    
    
}
