//
//  requireInfoController.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2018/1/18.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import Alamofire
import SwiftyJSON

extension requireInfoView {
    
    func details(){
        let vc = requirestuInfoView()
        vc.openClassId = self.openClassId
        vc.activityId = self.activityId
        vc.requireId = self.requireId
        self.isPushed = true
        self.navigationController?.pushViewController(vc, animated: true)
    }


    //修改
    func editRequire(){
        let vc = createRequireView()
        vc.activityId = self.activityId
        vc.openclassId = self.openClassId
        vc.courseOpenId = self.courseOpenId
        vc.requireType = self.requireType
        vc.requireId = self.requireId
        vc.userInfo = self.userInfo
        vc.title = "修改课前课后安排"
        vc.contenText.text = self.dataJson["requireInfo"]["Content"].stringValue
        self.isPushed = true
        for i in self.dataJson["requireInfo"]["DocJson"]{
            let m = UploadDocModel.init(i: i.1)
            vc.imgList.append(m)
        }
        self.navigationController?.pushViewController(vc, animated: true)
    }

    @objc func showMenu(){
        self.menu.isHidden = !self.menu.isHidden
    }

    func getIndex(_index: Int) {

        switch _index {
        case 0:
           self.editRequire()
        case 1:
            self.details()
        default:
            print(_index)
        }

        self.menu.isHidden = !self.menu.isHidden
    }
    
    func getRequireReplyList(){

        XLBallLoading.show(in: self.view)
        let dict = ["activityId":self.activityId,"requireType":self.requireType,"sourceType":3]as [String : Any]
        Alamofire.request(appAPI.FaceTeach_getRequireReplyList, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            
            if let value = response.result.value {
                let json = JSON(value)
                if(json["code"]>0){
                    self.replyList = json["requireInfo"]["replyList"].arrayValue as NSArray
                    self.dataJson = json
                    self.requireId=json["requireInfo"]["RequireId"].stringValue;
                    self.theWebView.evaluateJavaScript("requireinfo.get(\(self.dataJson),'\(Account.defaultAccount.id!)');",
                        completionHandler: nil)
                    
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
        
    }
    //回复
    @objc func replyRequire(){
        let vc = replyRequireView();
        vc.openClassId = self.openClassId;
        vc.requireId = self.requireId;
        vc.activityId=self.activityId;
        self.isPushed = true
        vc.reloadRequireInfo = {() in
            self.getRequireReplyList()
        }
        self.navigationController?.pushViewController(vc, animated: true)
    }

    //图片预览
    func previewImg(url:String){
        let vc = whiteboardView()
        self.isPushed = true
        vc.file = url
        self.present(vc, animated: true, completion: nil)
    }

    func getScore(id:String){
        let vc = keyBoardView()
        vc.modalTransitionStyle = .crossDissolve
        vc.view.backgroundColor = UIColor(red: 0, green: 0, blue: 0, alpha: 0.1);
        vc.setSocreClosure = {(score) in
            if(score < 99){
               self.setSocre(socre: score, id: id)
            }
            self.navigationController?.dismiss(animated: true, completion: nil)

        }
        self.present(vc, animated: true, completion: nil)

    }

    func setSocre(socre:Int,id:String){
        let dict = ["requireId": self.requireId,
                    "requireStuIds":id,
                    "score":socre] as [String : Any]
        ZKProgressHUD.setAnimationStyle(.chrysanthemum);

        ZKProgressHUD.show();
        Alamofire.request(appAPI.FaceTeach_saveRequireStuScore, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in

            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    self.theWebView.evaluateJavaScript("requireinfo.setOneScore(\(socre));",completionHandler: nil)
                    ZKProgressHUD.showSuccess(json["msg"].stringValue);

                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }

            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }

    }
    //课前课后的单个详细信息
    func requireInfoDetails(json:JSON){
        let vc = requireInfoDetailsView()
         self.isPushed = true
        vc.json = json
        vc.isStu = false
        self.navigationController?.pushViewController(vc, animated: true);
    }

    @objc func select_All(_ btn :UIButton){
        btn.isSelected = !btn.isSelected

        self.theWebView.evaluateJavaScript("requireinfo.checkAll();",
                                           completionHandler: nil)

    }
    @objc func cancelAll(_ btn :UIButton){
        btn.isSelected = !btn.isSelected

        self.theWebView.evaluateJavaScript("requireinfo.cancelAll();",
                                           completionHandler: nil)
        self.view.exchangeSubview(at: 1, withSubviewAt: 2)
    }
    @objc func setSocre(_ btn :UIButton){
        self.theWebView.evaluateJavaScript("requireinfo.setSocre();",
                                           completionHandler:nil)
        self.view.exchangeSubview(at: 1, withSubviewAt: 2)
    }

}
