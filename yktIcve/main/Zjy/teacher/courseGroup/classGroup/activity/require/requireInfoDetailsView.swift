//
//  requireInfoDetailsView.swift
//  云课堂职教云
//
//  Created by 尤增强 on 2018/4/4.
//  Copyright © 2018年 jcjy. All rights reserved.
//

import UIKit
import SwiftyJSON
class requireInfoDetailsView: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()

        //富文本
        let paraph = NSMutableParagraphStyle()
        paraph.lineSpacing  = 5
        paraph.headIndent = 5
        paraph.firstLineHeadIndent = 5
        let attributes = [NSAttributedStringKey.font:UIFont.italicSystemFont(ofSize: 16),
                          NSAttributedStringKey.paragraphStyle: paraph]

        super.viewDidLoad()
        self.title = "\(json["name"].stringValue)的回答"
        self.lab_content.attributedText = NSAttributedString(string: json["content"].stringValue, attributes: attributes)

        self.view.backgroundColor = UIColor.colorWithHex(hexColor: 0xf1f1f1)
        self.setUI()


        // Do any additional setup after loading the view.
    }



    func setUI(){
        self.view.addSubview(self.scrollView)

        self.scrollView.addSubview(lab_content)

        lab_content.snp.makeConstraints { (make) in
            make.width.equalTo(width - 8)
            make.top.equalTo(10)
            make.left.right.equalTo(4)
        }

        self.scrollView.addSubview(self.imgview)
        self.imgview.snp.makeConstraints { (make) in
            make.width.equalTo(80)
            make.height.equalTo(80 )
            make.top.equalTo(self.lab_content.snp.bottom).offset(10)
            make.left.equalTo(10)
        }
        self.imgview.contentMode = .scaleAspectFit
        self.title =  json["creatorName"].stringValue + "的回复"
        self.imgurl = json["url"].stringValue
//        common.share.setImgByUrlAsynchronous(str: json["url"].stringValue, imgview: self.imgview)
        common.share.setSDImg(str: json["url"].stringValue, imgview: self.imgview)

        self.imgview.isUserInteractionEnabled = true
        if self.isStu{
            let imageTapGesture = UITapGestureRecognizer.init(target: self, action: #selector(self.Touch_Image));
            self.imgview.addGestureRecognizer(imageTapGesture);
        }else{
            let imageTapGesture = UITapGestureRecognizer.init(target: self, action: #selector(self.touch_image(sender:)));
            self.imgview.addGestureRecognizer(imageTapGesture);
        }
        

    }


    @objc func touch_image(sender: UITapGestureRecognizer){
        let vc = whiteboardView()
        vc.file = self.imgurl
        self.present(vc, animated: true, completion: nil)
    }
    @objc func Touch_Image(){
        let vc = PicturePreviewView()
        vc.imgurl = self.imgurl
        self.navigationController?.pushViewController(vc, animated: true)
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    var json : JSON!
    var isStu = false
    let width = UIScreen.main.bounds.width;
    let height = UIScreen.main.bounds.height;

    override func viewDidAppear(_ animated: Bool) {
        print(self.imgview.bounds.origin.y)
        if((self.lab_content.bounds.height + 200) > height){
            self.scrollView.contentSize = CGSize.init(width: width, height: self.lab_content.bounds.height + 200)
        }
    }

    lazy var lab_content : UILabel = {
        let lab =  UILabel()
        lab.textColor = UIColor.black

        lab.numberOfLines = 0;
        lab.sizeToFit();
        return lab
    }()

    lazy var imgview :UIImageView = {
        let view = UIImageView()
        view.layer.shadowOpacity = 1
        view.layer.shadowRadius = 2
        view.layer.shadowOffset = CGSize(width: 1, height: 1)
        view.layer.shadowColor = UIColor.colorWithHex(hexColor: 0xdfe8f7).cgColor
        view.isHidden = true
        return view
    }()

    lazy var scrollView :UIScrollView = {
        let scrollView = UIScrollView.init(frame: self.view.bounds)
        return scrollView
    }()

    lazy var imgurl : String = {
        return "";
    }()

}
