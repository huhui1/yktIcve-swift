//
//  examListTableView.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2018/1/11.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import SwiftyJSON
class faceTestListTableView: UITableViewController {

    var list :NSArray = [];

    override func viewDidLoad() {
        super.viewDidLoad()
        self.navigationController?.navigationBar.setBackgroundImage(UIImage(), for: UIBarMetrics.default)
        self.navigationController?.navigationBar.shadowImage = UIImage()
        let NotifyChatMsgRecv = NSNotification.Name("reloadFaceTestList")
       NotificationCenter.default.addObserver(self, selector: #selector(self.reloadList), name: NotifyChatMsgRecv, object: nil)

        let topview = discussListTopView();
        topview.lab_title.text = "新建测验"
        topview.btn_add.addTarget(self, action: #selector(self.addtest), for: .touchUpInside)
        tableView.tableHeaderView = topview
        
        tableView.register(discussTableViewCell.self, forCellReuseIdentifier: "SwiftCell");
        tableView.tableFooterView = UIView(frame:CGRect.zero)//除去多余的cell
        tableView.separatorInset = UIEdgeInsets.zero;

        tableView.layoutMargins = UIEdgeInsets.zero;

        if #available(iOS 9.0, *) {
            tableView.cellLayoutMarginsFollowReadableWidth = false
        } else {
            // Fallback on earlier versions
        }

        self.refreshItemData(isRefresh: true)

        //下拉刷新相关设置,使用闭包Block
        self.tableView.mj_header = MJRefreshNormalHeader(refreshingBlock: {
            //重现生成数据
            self.refreshItemData(isRefresh:false);

        })
        self.navigationItem.backBarButtonItem = UIBarButtonItem(title: "返回", style: .done, target: self, action: nil)
        // Uncomment the following line to preserve selection between presentations
        // self.clearsSelectionOnViewWillAppear = false

        // Uncomment the following line to display an Edit button in the navigation bar for this view controller.
        // self.navigationItem.rightBarButtonItem = self.editButtonItem()
    }



    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

   override func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }

    override func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat
    {
        return 50;
    }

    //返回表格行数（也就是返回控件数）
   override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {

        return self.list.count;
    }

    //创建各单元显示内容(创建参数indexPath指定的单元）
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath)
        -> UITableViewCell {
            let colorarr = [0x53d135,0x53d135,0x04ae84,0xf2f2f2];
            let Staterarr = ["","未开始","进行中","已结束"];
            let cell:discussTableViewCell = tableView.dequeueReusableCell(withIdentifier: "SwiftCell") as! discussTableViewCell

            let json = JSON(self.list[indexPath.row]);

            cell.lab_state.text = Staterarr[json["State"].intValue];
            cell.lab_state.backgroundColor = UIColor.colorWithHex(hexColor: Int64(colorarr[json["State"].intValue]))
            cell.lab_title.text = json["Title"].stringValue
//            cell.accessoryType = .disclosureIndicator;
            if(json["State"].int == 3){
                cell.lab_state.textColor = UIColor.gray;
            }else{
                cell.lab_state.textColor = UIColor.white;
            }
            cell.lab_count.text = "\(json["MakeStuCount"].intValue)/\(self.openClassStuCount)"
            cell.lab_count.textColor = UIColor.colorWithHex(hexColor: 0xc7c7c7)
            return cell
    }



    //点击
   override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {

//        tableView .deselectRow(at: indexPath, animated: true)
    let json = JSON(self.list[indexPath.row]);

        if(json["State"].intValue==1){
                self.isPushed = true
                let vc = test_saveView()
                vc.iseditForStart = true
                vc.testId = json["Id"].stringValue
                vc.testTitle = json["Title"].stringValue
                vc.openClassIds = self.openClassIds
                vc.activityId = self.activityId
                vc.courseOpenId = self.courseOpenId

                self.navigationController?.pushViewController(vc, animated: true)

        }else if(json["State"].intValue==2){
                self.isPushed = true
                let vc = testingView();
                vc.activityId = self.activityId
                vc.courseOpenId = self.courseOpenId
                vc.openClassIds = self.openClassIds
                vc.classTestId =  json["Id"].stringValue
                vc.extensionJson = json
                vc.openClassStuCount = self.openClassStuCount
                vc.MakeStuCount = json["MakeStuCount"].intValue
                self.navigationController?.pushViewController(vc, animated: true);

        }else{
                let vc = resultStuListView();
                    vc.activityId = self.activityId
                    vc.courseOpenId = self.courseOpenId
                    vc.classTestId = json["Id"].stringValue
                self.isPushed = true
                self.navigationController?.pushViewController(vc, animated: true);
        }

    }

    //返回编辑类型，滑动删除
   override func tableView(_ tableView: UITableView, editingStyleForRowAt indexPath: IndexPath) -> UITableViewCellEditingStyle {

        return UITableViewCellEditingStyle.delete

    }

    //在这里修改删除按钮的文字

   override func tableView(_ tableView: UITableView, titleForDeleteConfirmationButtonForRowAt indexPath: IndexPath) -> String? {

        return "删除"

    }

    //点击删除按钮的响应方法，在这里处理删除的逻辑
   override func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {
        //删除数据源当前的数据
        let alertController = UIAlertController(title: "提示",
                                                message:"是否删除该次测验？", preferredStyle: .alert)
        let cancelAction = UIAlertAction(title: "取消", style: .cancel, handler: nil)

        let okAction = UIAlertAction(title: "确定", style: .destructive, handler: {
            action in
            if editingStyle == UITableViewCellEditingStyle.delete {

                if editingStyle == UITableViewCellEditingStyle.delete {
                    //删除数据源当前的数据
                    self.deltest(Id: JSON(self.list[indexPath.row])["Id"].stringValue, tableView, forRowAt: indexPath)

                }
            }
        })
        alertController.addAction(cancelAction)
        alertController.addAction(okAction)
        self.present(alertController, animated: true, completion: nil)
    }

    override func viewDidDisappear(_ animated: Bool) {
        if(!self.isPushed){
            NotificationCenter.default.removeObserver(self)
        }
        self.isPushed = false
    }
    lazy var activityId :String = {return ""}()
    lazy var courseOpenId :String = {return ""}()
    lazy var classState:Int = {return 0 }()
    lazy var openClassIds :String = {return ""}()
    lazy var openClassStuCount :Int = {return 0}()
    var isPushed = false
 

}
