//
//  test_selectalreadyView.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2018/1/12.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import WebKit
import Alamofire
import SwiftyJSON
import SCLAlertView
class test_selectalreadyView: UIViewController,WKScriptMessageHandler {

    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.white
        self.title = "已选题目"
        self.setWebUI()
        // Do any additional setup after loading the view.
        let item = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = item
     
    }

    //响应处理js那边的调用
    func userContentController(_ userContentController:WKUserContentController,
                               didReceive message: WKScriptMessage) {
        print(message.body)
        let sentData = message.body as! Dictionary<String,String>

        if(sentData["method"] == "load"){

        self.theWebView.evaluateJavaScript("select_already.set(\(json));",
                completionHandler: nil)
        }else if(sentData["method"] == "showErrorMsg"){
            self.showErrorMsg(msg: sentData["msg"]!)
        }else if(sentData["method"] == "batchScore"){
            self.batchScore()
        }else if(sentData["method"] == "next"){

            self.sel_next(questionData: sentData["questionData"]!)
        }
    }

   fileprivate func setWebUI() {

        let path = Bundle.main.path(forResource: "select-already", ofType: ".html",
                                    inDirectory: "HTML5/src/teacher/exam");
        let url = URL(fileURLWithPath:path!);
        //let request = URLRequest(url:url);

        //创建供js调用的接口
        let theConfiguration = WKWebViewConfiguration()
        theConfiguration.userContentController.add(self, name: "interOp")

        //将浏览器视图全屏(在内容区域全屏,不占用顶端时间条)
        let frame = CGRect(x:0, y:0, width:UIScreen.main.bounds.width,
                           height:UIScreen.main.bounds.height - 60 + CGFloat(HX))
        theWebView = WKWebView(frame:frame, configuration: theConfiguration)
        //禁用页面在最顶端时下拉拖动效果
                theWebView.scrollView.bounces = false;
        //        theWebView.isUserInteractionEnabled = false;
        //加载页面
        if #available(iOS 9.0, *) {
            
            theWebView.loadFileURL(url, allowingReadAccessTo: url)
        } else {
            
            do{
                
                let url1 = try common.share.fileURLForBuggyWKWebView8(fileURL:url as NSURL)
                let request = URLRequest(url:url1 as URL);
                theWebView.load(request)
                
            }catch{}
        }
       // theWebView.load(request)
        self.view.addSubview(theWebView);
    }

    //返回处理h5清除页面，防内存溢出
    override func viewWillDisappear(_ animated: Bool) {
        if(!self.isPushed){
            theWebView.configuration.userContentController.removeScriptMessageHandler(forName: "interOp")
        }
        
        self.isPushed = false
    }

    func batchScore(){

        let alert = SCLAlertView()

        //添加第一个输入框
        let textField1 = alert.addTextField("5")
        textField1.keyboardType = .numberPad
        alert.addButton("确定") {
            if(textField1.text?.isEmpty)!{
                ZKProgressHUD.showSuccess("请输入分数")
            }else{
                self.theWebView.evaluateJavaScript("select_already.batchScore(\(textField1.text!));",
                    completionHandler: nil)
            }

        }
        alert.showEdit("", subTitle: "请输入设置的分数", closeButtonTitle: "取消")
    }
    func showErrorMsg(msg:String){
        ZKProgressHUD.showMessage(msg)
    }
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    func sel_next(questionData:String){
        let vc = test_saveView()
        vc.activityId = self.activityId
        vc.classState = self.classState
        vc.courseOpenId = self.courseOpenId
        vc.questionData = questionData
        vc.openClassIds = self.openClassIds
        vc.testId = self.testId
        self.isPushed = true
        self.navigationController?.pushViewController(vc, animated: true)

    }
    lazy var isPushed:Bool = {
        return false
    }()
    var theWebView:WKWebView = {
        let WK = WKWebView()
        return WK
    }()
    lazy var testId :String = {
        return ""
    }()
    lazy var activityId :String = {return ""}()
    lazy var courseOpenId :String = {return ""}()
    lazy var classState:Int = {return 0 }()
    lazy var openClassIds :String = {return ""}()
    lazy var json : JSON = {return []}()
    let HX = common.share.returnSafeAreaLineHeight()
}
