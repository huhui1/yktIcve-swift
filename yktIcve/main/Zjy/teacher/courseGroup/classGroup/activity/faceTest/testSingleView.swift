//
//  testSingleView.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2018/1/12.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import SwiftyJSON
import WebKit

class testSingleView: UIViewController,WKScriptMessageHandler {

    override func viewDidLoad() {
        super.viewDidLoad()
        self.title = "题目预览"
        self.setWEBUI()
        let item = UIBarButtonItem(title: "\u{e6f7} 返回", style: .plain, target: self, action: #selector(self.backBtnClick))

        self.navigationItem.leftBarButtonItem = item
        let item1 = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = item1
        common.share.setBackButtonItem(item:item)
        // Do any additional setup after loading the view.
    }

    @objc func backBtnClick(){
      theWebView.configuration.userContentController.removeScriptMessageHandler(forName: "interOp")
        self.navigationController?.popViewController(animated: true)
    }
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    func userContentController(_ userContentController:WKUserContentController,
                               didReceive message: WKScriptMessage) {
        print(message.body)
        let sentData = message.body as! Dictionary<String,String>

        if(sentData["method"] == "load"){

            self.theWebView.evaluateJavaScript("info.set(\(self.questionInfo));",
                completionHandler: nil)
        }else if(sentData["method"] == "previewImg"){
            self.previewImg(url:sentData["url"]!)

        }else if(sentData["method"] == "getFileInfoByUrl"){
            self.getFileInfoByUrl(url: sentData["url"]!)
        }
    }



  fileprivate func setWEBUI() {

        let path = Bundle.main.path(forResource: "single", ofType: ".html",
                                    inDirectory: "HTML5/src/teacher/exam");
        let url = URL(fileURLWithPath:path!);
        //let request = URLRequest(url:url);

        //创建供js调用的接口
        let theConfiguration = WKWebViewConfiguration()
        theConfiguration.userContentController.add(self, name: "interOp")

        //将浏览器视图全屏(在内容区域全屏,不占用顶端时间条)
        let frame = CGRect(x:0, y:0, width:UIScreen.main.bounds.width,
                           height:UIScreen.main.bounds.height)
        theWebView = WKWebView(frame:frame, configuration: theConfiguration)
        //禁用页面在最顶端时下拉拖动效果
                theWebView.scrollView.bounces = false;
        //        theWebView.isUserInteractionEnabled = false;
        //加载页面
        if #available(iOS 9.0, *) {
            
            theWebView.loadFileURL(url, allowingReadAccessTo: url)
        } else {
            
            do{
                
                let url1 = try common.share.fileURLForBuggyWKWebView8(fileURL:url as NSURL)
                let request = URLRequest(url:url1 as URL);
                theWebView.load(request)
                
            }catch{}
        }
        //theWebView.load(request)
        self.view.addSubview(theWebView);
    }

   

    var theWebView:WKWebView = {
        let WK = WKWebView()
        return WK
    }()

     lazy var questionInfo :String = {return ""}()
}
