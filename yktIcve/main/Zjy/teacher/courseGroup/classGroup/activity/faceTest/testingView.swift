//
//  testingView.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2018/1/13.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import WebKit
import Alamofire
import SwiftyJSON
class testingView: UIViewController,WKScriptMessageHandler {

    let width = UIScreen.main.bounds.width

    let NotifyEventListener = NSNotification.Name("stufeedback")

    let NotifyReload = NSNotification.Name("reloadFaceTestList")
    override func viewDidLoad() {
        super.viewDidLoad()
        self.setBtn()
        self.setWebUI();
        self.view.backgroundColor = UIColor.white
        NotificationCenter.default.addObserver(self, selector: #selector(self.stufeedback), name: NotifyEventListener, object: nil)
        self.addEventListener()
        // Do any additional setup after loading the view.
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    func setBtn(){
        self.view.addSubview(self.endExamBtn)
        
        self.endExamBtn.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(50)
            make.left.equalTo(0)
            make.bottom.equalTo(self.view.snp.bottom).offset(HX)
        }
        self.endExamBtn.addTarget(self, action: #selector(self.IsCloseClassTest), for: .touchUpInside)
    }
    //响应处理js那边的调用
    func userContentController(_ userContentController:WKUserContentController,
                               didReceive message: WKScriptMessage) {
        print(message.body)
        let sentData = message.body as! Dictionary<String,String>

        if(sentData["method"] == "load" ){
            self.setTime()
            self.theWebView.evaluateJavaScript("examing.setchart(\(self.MakeStuCount),\(self.openClassStuCount));",
                completionHandler: nil)
        }else if(sentData["method"] == "params"){
            let dict = ["type":"face",
                        "params":sentData["params"]! ];
           ZQSocketManager.share.notificationSocketManager(data: dict)
        }

    }

     fileprivate  func setWebUI() {
        let item = UIBarButtonItem(title: "\u{e6f7} 返回", style: .plain, target: self, action: #selector(self.backBtnClick))

        self.navigationItem.leftBarButtonItem = item

        common.share.setBackButtonItem(item:item)

        let Item = UIBarButtonItem.init(title: "刷新", style: UIBarButtonItemStyle.plain, target: self, action: #selector(self.refresh));
        self.navigationItem.rightBarButtonItem = Item

        let path = Bundle.main.path(forResource: "examing", ofType: ".html",
                                    inDirectory: "HTML5/src/teacher/exam");
        let url = URL(fileURLWithPath:path!);
        //let request = URLRequest(url:url);

        //创建供js调用的接口
        let theConfiguration = WKWebViewConfiguration()
        theConfiguration.userContentController.add(self, name: "interOp")

        //将浏览器视图全屏(在内容区域全屏,不占用顶端时间条)
        
        
        let frame = CGRect(x:0, y:0, width:UIScreen.main.bounds.width,
                               height:UIScreen.main.bounds.height - 110 + CGFloat(2 * HX))
        theWebView = WKWebView(frame:frame, configuration: theConfiguration)
        
        
        //禁用页面在最顶端时下拉拖动效果
        theWebView.scrollView.bounces = false;
        theWebView.isUserInteractionEnabled = false;
        //加载页面
        if #available(iOS 9.0, *) {
            
            theWebView.loadFileURL(url, allowingReadAccessTo: url)
        } else {
            
            do{
                
                let url1 = try common.share.fileURLForBuggyWKWebView8(fileURL:url as NSURL)
                let request = URLRequest(url:url1 as URL);
                theWebView.load(request)
                
            }catch{}
        }
        //theWebView.load(request)
        theWebView.backgroundColor = UIColor.bg
        self.view.addSubview(theWebView);

    }


    @objc func backBtnClick(){
         self.codeTimer?.cancel()
        let dict = ["type":"closeRes"];
        NotificationCenter.default.removeObserver(self)
        theWebView.configuration.userContentController.removeScriptMessageHandler(forName: "interOp")
        ZQSocketManager.share.notificationSocketManager(data: dict)
        self.navigationController?.popViewController(animated: true)
    }


    var theWebView:WKWebView = {
        let WK = WKWebView()
        return WK
    }()
    lazy var activityId :String = {return ""}()
    lazy var courseOpenId :String = {return ""}()
    lazy var classTestId:String = {return "" }()
    lazy var openClassIds :String = {return ""}()

    lazy var json : JSON = {return []}()
    lazy var isAnimated : Bool = {return false}()
    lazy var extensionJson :JSON = {return []}()
    lazy var openClassStuCount :Int = { return 0}()
    lazy var MakeStuCount:Int = {return 0}()
    fileprivate lazy var endExamBtn :UIButton = {
        let btn = UIButton()
        btn.setTitle("结束", for: .normal)
        btn.contentMode = .center
        btn.setTitleColor(UIColor.black, for: .normal)
        btn.backgroundColor = UIColor.colorWithHex(hexColor: 0xf2f2f2)
        return btn

    }()
    let HX = common.share.returnSafeAreaLineHeight()

    var refreshCount:Int = 0
    {

        didSet
        {
            if refreshCount<10
            {
                self.refresh()
            }else{
                codeTimer?.cancel()
                codeTimer = nil
            }

        }
    }
    var codeTimer: DispatchSourceTimer?


}
