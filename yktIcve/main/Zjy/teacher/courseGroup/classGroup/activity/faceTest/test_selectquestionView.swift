//
//  test_selectquestionView.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2018/1/11.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import WebKit
import Alamofire
import SwiftyJSON
class test_selectquestionView: UIViewController,WKScriptMessageHandler {


    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.white
        self.title = "选择题目"
        self.setWebUI()
        // Do any additional setup after loading the view.
        let item = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = item
        //判断是否点击过
       let t = cx.readOneData(_userId: Account.defaultAccount.id!)
        if(!t.isbrowseTest){
            self.maskView()
        }
        
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    //响应处理js那边的调用
    func userContentController(_ userContentController:WKUserContentController,
                               didReceive message: WKScriptMessage) {

        print(message.body)
        let sentData = message.body as! Dictionary<String,String>

        if(sentData["method"] == "load"){
            self.getQuestions()
        }else if(sentData["method"] == "next"){
            self.sel_next(json:JSON.init(parseJSON: sentData["chooseQuestionList"]!))
        }else if(sentData["method"] == "singlePreview"){
            self.singlePreview(questionInfo: sentData["questionInfo"]!)
        }
    }

    func setWebUI() {

        let path = Bundle.main.path(forResource: "select-question", ofType: ".html",
                                    inDirectory: "HTML5/src/teacher/exam");
        let url = URL(fileURLWithPath:path!);
        



        //创建供js调用的接口
        let theConfiguration = WKWebViewConfiguration()
        theConfiguration.userContentController.add(self, name: "interOp")

        //将浏览器视图全屏(在内容区域全屏,不占用顶端时间条)
        let frame = CGRect(x:0, y:0, width:UIScreen.main.bounds.width,
                           height:UIScreen.main.bounds.height - 60)
        theWebView = WKWebView(frame:frame, configuration: theConfiguration)
        //禁用页面在最顶端时下拉拖动效果
        theWebView.scrollView.bounces = false;
//        theWebView.isUserInteractionEnabled = false;
        //加载页面

        if #available(iOS 9.0, *) {

            theWebView.loadFileURL(url, allowingReadAccessTo: url)
        } else {

            do{
             
                let url1 = try common.share.fileURLForBuggyWKWebView8(fileURL:url as NSURL)
                let request = URLRequest(url:url1 as URL);
                 theWebView.load(request)

            }catch{}
        }

//        theWebView.load(request)
        self.view.addSubview(theWebView);
    }

    //返回处理h5清除页面，防内存溢出
    override func viewWillDisappear(_ animated: Bool) {
        if(!self.isPushed){
            theWebView.configuration.userContentController.removeScriptMessageHandler(forName: "interOp")
        }
        
        self.isPushed = false
    }
    
    lazy var isPushed:Bool = {
        return false
    }()
    var theWebView:WKWebView = {
        let WK = WKWebView()
        return WK
    }()
    lazy var activityId :String = {return ""}()
    lazy var courseOpenId :String = {return ""}()
    lazy var classState:Int = {return 0 }()
    lazy var openClassIds :String = {return ""}()
    lazy var json : JSON = {return []}()
    lazy var selected : JSON = {return []}()
    lazy var CoursKnowledge :JSON = {[]}()
    lazy var testId :String = {
        return ""
    }()
    let cx = SQLiteManagerMask()
    lazy var makeView:UIView = {
        return UIView.init(frame: self.view.frame)
    }()

}
