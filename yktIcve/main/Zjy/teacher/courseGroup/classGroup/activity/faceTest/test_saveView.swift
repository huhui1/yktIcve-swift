//
//  test_saveView.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2018/1/12.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire
class test_saveView: UIViewController,UITextFieldDelegate {

    let width = UIScreen.main.bounds.width

    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.colorWithHex(hexColor: 0xf2f2f2)
        self.setUI()
        self.getClassTestData()
        self.title = "测验"
        // Do any additional setup after loading the view.
    }

    func setUI(){
        
        //键盘处理
        toolBar = common.share.AddToolKeyboardDoneBar()
        let doneButton = UIBarButtonItem(title: "确定", style: .plain, target: self, action: #selector(self.DoneClick));
        let spaceButton = UIBarButtonItem(barButtonSystemItem: .flexibleSpace, target: nil, action: nil)
        toolBar.setItems([spaceButton,doneButton], animated: false);
        
        self.view.addSubview(text_title)
        self.view.addSubview(lab_num)
        self.view.addSubview(text_num)
        self.view.addSubview(saveBtn)
        self.view.addSubview(submitBtn)

        self.text_title.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(60)
            make.top.equalTo(10)
        }
        let date = NSDate()
        let timeFormatter = DateFormatter()
        timeFormatter.dateFormat = "yyy-MM-dd HH:mm"
        let strNowTime = timeFormatter.string(from: date as Date) as String + "的测验"
        if(self.testTitle != ""){
              self.text_title.text = self.testTitle
        }else{
             self.text_title.text = strNowTime
        }
        self.text_title.delegate = self
        
        self.lab_num.snp.makeConstraints { (make) in
            make.width.equalTo(width/2)
            make.height.equalTo(50)
            make.top.equalTo( self.text_title.snp.bottom).offset(10)
            make.left.equalTo(0)
        }
        self.lab_num.text = "  题目数"


        self.text_num.snp.makeConstraints { (make) in
            make.width.equalTo(width / 2)
            make.height.equalTo(50)
            make.left.equalTo(self.lab_num.snp.right)
            make.top.equalTo( self.text_title.snp.bottom).offset(10)
        }

        self.text_num.isUserInteractionEnabled = true
        let gestrue = UITapGestureRecognizer.init(target: self, action: #selector(self.editquestion));
        self.text_num.addGestureRecognizer(gestrue)
        let HX = common.share.returnSafeAreaLineHeight()
        self.submitBtn.snp.makeConstraints { (make) in
            make.width.equalTo(width / 2)
            make.height.equalTo(50)
            make.left.equalTo(width / 2)
            make.bottom.equalTo(self.view.snp.bottom).offset(HX)
        }

        self.saveBtn.snp.makeConstraints { (make) in
            make.width.equalTo(width / 2)
            make.height.equalTo(50)
            make.left.equalTo(0)
            make.bottom.equalTo(self.view.snp.bottom).offset(HX)
        }
    }
    //键盘隐藏
//    override func touchesEnded(_ touches: Set<UITouch>, with event: UIEvent?) {
//        self.text_title.resignFirstResponder();
//
//    }
    //键盘处理
    private func textViewShouldBeginEditing(_ textView: UITextView) -> Bool {
        textView.inputAccessoryView = toolBar;
        return true
    }
    @objc func DoneClick(){
        self.view.endEditing(true)
    }
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    

    /*
    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        // Get the new view controller using segue.destinationViewController.
        // Pass the selected object to the new view controller.
    }
    */
    lazy var text_title : UITextField = {
        let text = UITextField()
        text.placeholder = "请输入测验标题"
        text.backgroundColor = UIColor.white
        text.textColor = UIColor.colorWithHex(hexColor: 0x333)
        text.font = UIFont.init(name: "", size: 15)
        text.setValue(NSNumber(value:10), forKey:"paddingLeft");
        return text
    }()

    private lazy var lab_num : UILabel = {
        let lab = UILabel()
        lab.backgroundColor = UIColor.white
        lab.textColor = UIColor.colorWithHex(hexColor: 0x333)
        lab.font = UIFont.init(name: "iconfont", size: 15)
        return lab
    }()
     lazy var text_num : UILabel = {
        let text = UILabel()
        text.backgroundColor = UIColor.white
        text.textColor = UIColor.colorWithHex(hexColor: 0x333)
        text.font = UIFont.init(name: "iconfont", size: 15)
        text.textAlignment = .right
        return text
    }()

    lazy  var saveBtn : UIButton = {
        let btn = UIButton()
        btn.contentMode = .center
        btn.setTitleColor(UIColor.white, for: .normal)
        btn.setTitle("保存", for: .normal)
        btn.tag = 1
        btn.backgroundColor = UIColor.colorWithHex(hexColor: 0x23c397)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 16)
        btn.addTarget(self, action:  #selector(self.savetest(_:)), for: .touchUpInside)
        return btn ;

    }()

    lazy  var submitBtn : UIButton = {
        let btn = UIButton()
        btn.contentMode = .center
        btn.setTitleColor(UIColor.white, for: .normal)
        btn.backgroundColor = UIColor.bg
        btn.setTitle("开始", for: .normal)
        btn.tag = 2
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 16)
        btn.addTarget(self, action:  #selector(self.savetest(_:)), for: .touchUpInside)
        return btn ;

    }()

    lazy var classState : Int = {
        return  1
    }()
    lazy var testTitle : String = {
        return ""
    }()
    lazy var courseOpenId : String = {
        return ""
    }()

    lazy var activityId :String = {
        return "";
    }()

    lazy var openClassIds:String = {

        return "";
    }()

    lazy var testId :String = {

        return ""
    }()
    var toolBar = UIToolbar();

    lazy var questionData: String = {
        return ""
    }()

    lazy var iseditForStart: Bool = {
        return false
    }()

}
