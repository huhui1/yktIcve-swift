//
//  extensionFaceClassMoreView.swift
//  云课堂职教云
//
//  Created by 尤增强 on 2018/5/2.
//  Copyright © 2018年 jcjy. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire
extension faceClassMoreView:UIImagePickerControllerDelegate,UINavigationControllerDelegate {

    //从相册选择照片
    func funcChooseFromPhotoAlbum() -> Void{
       

        let masterVC = HsuAlbumMasterTableViewController()
        let navi = UINavigationController(rootViewController: masterVC)
        masterVC.title = "图片"
        let gridVC = HsuAssetGridViewController()
        gridVC.title = "所有图片"
        let leftBarBtn = UIBarButtonItem(title: "", style: .plain, target: self,
                                         action:nil)
        gridVC.navigationItem.leftBarButtonItem = leftBarBtn
        navi.pushViewController(gridVC, animated: false)

        UIDevice.current.setValue(UIInterfaceOrientation.landscapeLeft.rawValue, forKey: "orientation")
        present(navi, animated: true)

        HandleSelectionPhotosManager.share.getSelectedPhotos(with: 1) { (assets, images) in


            self.getImgOne(img: images[0])
        }


    }


    //处理获取到的图片
    func getImgOne(img: UIImage) {
        self.uploadUrl = appAPI.uploadUrl;
        //  self.prefixUrl = appAPI.prefixUrl;

        //let fileURL1 = Bundle.main.url(forResource: "faceMS", withExtension: "png")
        let fileManager = FileManager.default
        let rootPath = NSSearchPathForDirectoriesInDomains(.documentDirectory,
                                                           .userDomainMask, true)[0] as String
        let date = NSDate(),
        timeInterval = date.timeIntervalSince1970 * 1000

        let filePath = "\(rootPath)/" + String(timeInterval) + ".jpg"

       let  imageData =  common.share.resetImgSize(sourceImage: img, maxImageLenght: 0, maxSizeKB: 200)

        fileManager.createFile(atPath: filePath, contents: imageData, attributes: nil)
        let imageNSURL = URL.init(fileURLWithPath: filePath)

        ZKProgressHUD.show("0 %")
        Alamofire.upload(multipartFormData: { multipartFormData in
            multipartFormData.append(imageNSURL, withName: "file1")
        },to: self.uploadUrl,encodingCompletion: { encodingResult in
            switch encodingResult {
            case .success(let upload, _, _):
                upload.responseJSON { response in
                    let result = JSON(response.result.value ?? "");
                        ZKProgressHUD.hide(delay: 0)
                        let vc = whiteboardView()
                        vc.file = result["ossOriUrl"].stringValue
                    self.present(vc, animated: true, completion:nil)
                    }.uploadProgress { progress in // main queue by default

                        ZKProgressHUD.show("\(String(format: "%.1f", progress.fractionCompleted * 100)) %")
                }
            case .failure(let encodingError):
                 ZKProgressHUD.hide(delay: 0)
                ZKProgressHUD.showMessage("上传失败")
            }
        })
    }

    func funcChooseFromCamera() -> Void{
        if UIImagePickerController.isSourceTypeAvailable(UIImagePickerControllerSourceType.camera) {
            let imagePicker = UIImagePickerController()

            //设置代理
            imagePicker.delegate = self
            //允许编辑
            imagePicker.isEditing = false;
            //设置图片源
            imagePicker.sourceType = UIImagePickerControllerSourceType.camera
            //模态弹出IamgePickerView

            self.present(imagePicker, animated: true, completion: nil)

        }else{
            print("模拟器不支持拍照功能")
        }
    }

    func imagePickerControllerDidCancel(_ picker: UIImagePickerController){
        picker.dismiss(animated: true, completion: nil)
    }

    func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [String : Any]) {
        //获取照片的原图
        let image = (info as NSDictionary).object(forKey: UIImagePickerControllerOriginalImage)as!UIImage
        //获得编辑后的图片
        //let image = (info as NSDictionary).object(forKey: UIImagePickerControllerEditedImage)as!UIImage


        self.getImgOne(img: image);

        picker.dismiss(animated: true, completion: nil)
    }



}
