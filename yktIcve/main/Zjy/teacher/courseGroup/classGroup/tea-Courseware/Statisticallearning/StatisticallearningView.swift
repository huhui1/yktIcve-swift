//
//  StatisticallearningView.swift
//  云课堂-职教云
//
//  Created by cc on 2018/3/30.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire

class StatisticallearningView: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.white
        self.title = "学习统计"
        self.getData()
        // Do any additional setup after loading the view.
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    func setSlideMenu(){
        let titles = ["已学习(\(self.hasStudyCount))","未学习(\(self.unStudyCount))"]
        var arr:Array<UITableViewController> = [];
        let vc1 = StatisticshaslearningTableView();
        let vc2 = StatisticsUnlearningTableView();

        vc1.openClassId = self.openClassId
        vc1.cellId = self.cellId
        
        vc2.cellId = self.cellId
        vc2.openClassId = self.openClassId
        
        arr.append(vc1)
        arr.append(vc2)
        
        if isMusicAndVideo{
            ht = 60
        }
        if isFromIpadVideo{
            slideMenu = SlideMenu(frame: CGRect(x:0,y:0,width:width - 350,height:40), titles:titles, childControllers:arr)
            slideMenu?.bodyFrame = CGRect.init(x: 0, y: 40,width: width - 350, height: height - height / 16 * 9 - 81 + CGFloat(ht))
            slideMenu?.selectedColor = UIColor(red: 6/255, green: 163/255, blue: 121/255, alpha: 1);
        }else{
            if isMusicAndVideo{
                slideMenu = SlideMenu(frame: CGRect(x:0,y:0,width:width,height:40), titles:titles, childControllers:arr)
                slideMenu?.bodyFrame = CGRect.init(x: 0, y: 40,width: width, height: height - 360 + CGFloat(ht))
                slideMenu?.selectedColor = UIColor(red: 6/255, green: 163/255, blue: 121/255, alpha: 1);
            }else{
                slideMenu = SlideMenu(frame: CGRect(x:0,y:0,width:width,height:40), titles:titles, childControllers:arr)
                slideMenu?.bodyFrame = CGRect.init(x: 0, y: 40,width: width, height: height - 145)
                slideMenu?.selectedColor = UIColor(red: 6/255, green: 163/255, blue: 121/255, alpha: 1);
            }
        }
        
        
        slideMenu?.isFixed = true;
        slideMenu?.indicatorStyle = .followText;
        slideMenu?.titleStyle = .transfrom;
        slideMenu?.line.isHidden = false;
        slideMenu?.scrollToIndex(0)
        view.addSubview(slideMenu!)
    }
    override func viewDidDisappear(_ animated: Bool) {
        
        navigationController?.interactivePopGestureRecognizer?.isEnabled = true
    }
    override func viewDidAppear(_ animated: Bool) {
        
        navigationController?.interactivePopGestureRecognizer?.isEnabled = false
    }
    var isMusicAndVideo = false
    var ht = 0
    lazy var  isFromIpadVideo:Bool = false
    lazy var openClassId : String = {
        return ""
    }()
    lazy var cellId : String = {
        return ""
    }()
    lazy var hasStudyCount: Int = {
        return 0
    }()
    lazy var unStudyCount: Int = {
        return 0
    }()

    var slideMenu:SlideMenu?
    let width = UIScreen.main.bounds.width
    let height  = UIScreen.main.bounds.height
}

extension StatisticallearningView{
    //学习与未学习人数
    func getData(){
        XLBallLoading.show(in: self.view)
        let dict = ["openClassId":self.openClassId,
                    "cellId":self.cellId]
        Alamofire.request(appAPI.AssistTeacher_getCourseData, method: .post,parameters: dict,encoding:URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    self.hasStudyCount = json["hasStudyCount"].intValue;
                    self.unStudyCount = json["unStudyCount"].intValue;
                    self.setSlideMenu()
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                XLBallLoading.hide(in: self.view)
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }
    }
}
