//
//  extensionCourseKJViewControlle.swift
//  云课堂职教云
//
//  Created by 尤增强 on 2018/4/20.
//  Copyright © 2018年 jcjy. All rights reserved.
//

import UIKit
import Alamofire
import SwiftyJSON
import SCLAlertView

extension tea_CoursewareView {

    //获取单元
    func getModuleList(){
        let dict = ["courseOpenId": self.courseOpenId,
                    "openClassId":self.openClassId]

        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.AssistTeacher_getModuleListByClassId, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    self.makeData(json:json["moduleList"])
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }

    //  模块列表
    func makeData(json:JSON){

        for i in json {
            let m = zjycourseModule.init(data: i.1, _isUnfold: false)
            self.moduleList.append(m)
        }
        common.share.setTableFootView_noData(self.tableView, list: self.moduleList as NSArray)
        self.tableView.reloadData()
    }

    //获取单元列表
    func getTopicList(moduleId:String,section:Int){
        if( self.moduleList[section].topic.count > 0){

            self.tableView.reloadSections(IndexSet.init(integer: section), with: UITableViewRowAnimation.automatic)

        }else {

            let dict = ["courseOpenId": self.courseOpenId,
                        "openClassId":self.openClassId,
                        "moduleId":moduleId]
            XLBallLoading.show(in: self.view)
            Alamofire.request(appAPI.AssistTeacher_getTopicListByModuleId, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
                if let value = response.result.value {
                    let json = JSON(value)
                    if json["code"] == 1{
                        self.setTopicList(section: section, data: json["topicList"])
                    }else{
                        ZKProgressHUD.showError(json["msg"].stringValue);
                    }
                    XLBallLoading.hide(in: self.view)
                }else{
                    ZKProgressHUD.showError("网络环境异常请稍后再试！");
                    XLBallLoading.hide(in: self.view)
                }
            }

        }
    }

    //填充数据
    func setTopicList(section:Int,data:JSON){
        let m =  self.moduleList[section]
        var j = 0
        for i in data{

            let t = zjycourseTopic.init(data: i.1, _level: 2, _topicIndex: j, _isUnfold: false, _isFirstModule: m.isFirstModule,_moduleId: m.moduleId)
            j += 1
            self.moduleList[section].topic.append(t)

        }
        self.tableView.reloadSections(IndexSet.init(integer: section), with: UITableViewRowAnimation.automatic)
    }


    //获取获得课程下的单元
    func getCellList(indexPath:IndexPath,topic:zjycourseTopic){


        let dict = ["courseOpenId": self.courseOpenId,
                    "topicId":topic.id,
                    "openClassId":self.openClassId,
                    "stuId":Account.defaultAccount.id!] as [String : Any]

        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.AssistTeacher_getCellListByTopicId, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    if(json["cellList"].count < 1){
                        //使用自定义样式的提示框
                        let alert = SCLAlertView(appearance: self.appearance)
                        //显示提示框（2秒后自定关闭）
                        let timeout = SCLAlertView.SCLTimeoutConfiguration(timeoutValue: 2) {
                            print("提示框自动关闭了")
                        }
                        alert.showError("", subTitle: "sorry!此章节下没有课件", timeout: timeout);
                    }
                    self.setCellInTopicList(indexPath: indexPath, data: json["cellList"], topic: topic)

                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }

    }

    //set cell数据

    func setCellInTopicList(indexPath:IndexPath,data:JSON,topic:zjycourseTopic){


        for i in data{
            let c = zjycourseTopic.init(data: i.1, _level: 3, _topicIndex: -99, _isUnfold: false, _isFirstModule: topic.isFirstModule,_moduleId: topic.moduleId)
            topic.cell.append(c)
            //子节点
            if( i.1["cellType"].intValue == 4){

                for k in i.1["cellChildNodeList"]{
                    let c1 = zjycourseTopic.init(data: k.1, _level: 3, _topicIndex: 99, _isUnfold: false,_isFirstModule: topic.isFirstModule,_moduleId: topic.moduleId)
                    topic.cell.append(c1)
                }
            }
        }
        self.tableView.reloadSections(IndexSet.init(integer: indexPath.section), with: .automatic)
    }

    //分区下标 与当前分区下所有topic
    func getshowList(model:zjycourseModule,_section: Int) -> zjycourseTopic{

        var courseTopicModelR = zjycourseTopic.init(data: JSON(), _level: 0, _topicIndex: -99, _isUnfold: false, _isFirstModule: model.isFirstModule,_moduleId: model.moduleId)
        if model.isUnfold {
            var index = 0

            for i in 0..<model.topic.count{
                let courseTopicModel = model.topic[i]

                if(_section<index+1){
                    courseTopicModelR = courseTopicModel
                    courseTopicModelR.level = 2;
                    return courseTopicModelR;
                }
                index = index + 1 ;

                if (courseTopicModel.isUnfold){
                    if(_section<index+courseTopicModel.cell.count){
                        courseTopicModelR = courseTopicModel.cell[_section-index]
                        courseTopicModelR.level = 3;
                        return courseTopicModelR;
                    }
                    index = index + courseTopicModel.cell.count;

                }

            }
            return courseTopicModelR;
        }else{
            return courseTopicModelR
        }

    }

    func getCellNum(model:zjycourseModule,_section: Int) -> Int{
        if model.isUnfold {
            var i = model.topic.count;

            for courseTopicModel in model.topic{

                if (courseTopicModel.isUnfold){
                    i = i + courseTopicModel.cell.count
                }
            }
            return i ;
        }else{
            return 0
        }
    }
    
    //判断文件是否被下载过
    func  isfileDownload(cell:zjycourseTopic){
        let cx = SQLiteManagerCache()
        let path = cx.readOneData(_userId: Account.defaultAccount.id!, docId: cell.id)
        if path.docPath.isEmpty {
            if cell.cellType != 4{
              self.getUrl(cell:cell)
            }
        }else {
            switch cell.categoryName {
            case "音频":
                let vc = audioViewController()
                vc.cellId = cell.id
                vc.courseOpenId = self.courseOpenId
                vc.openClassId = self.openClassId
                vc.moduleId = cell.moduleId
                vc.isNet = false
                vc.audiourl = path.docPath
                vc.isAllowDownLoad = true
                vc.title = cell.title
                vc.isStu = true
                vc.isKJ = true
                vc.hidesBottomBarWhenPushed = true
                
                self.navigationController?.pushViewController(vc, animated: true)
            default:
                self.getUrl(cell:cell)
            }
        }
    }
    
    //观看跳转页面
    func pushstuCourseWareVC(cell:zjycourseTopic,isAllowDownLoad:Bool,isNeedUpdate:Bool){
        
        switch cell.categoryName {
        case "视频":

          if(UIDevice.current.model == "iPad"){

                let vc = ipadVideoPlayView()
                vc.isStu = false
                vc.courseOpenId = self.courseOpenId
                vc.docId = cell.id
                vc.openClassId = self.openClassId
                vc.moduleId = cell.moduleId
                vc.videotittle = cell.title
                //拼接URL
                for (key, value) in self.resourcesUrl["args"]{
                    if self.resourcesUrl["urls"]["preview_oss_gen"].stringValue.isEmpty{
                        if value.boolValue{
                            let videoUrl = "\(self.resourcesUrl["urls"]["preview"].stringValue)/\(key).mp4"
                            vc.videourls.append(videoUrl)
                        }
                    }else{
                        if value.boolValue{
                            let videoUrl = "\(self.resourcesUrl["urls"]["preview_oss_gen"].stringValue)/\(key).mp4"
                            vc.videourls.append(videoUrl)
                        }
                    }
                }
                vc.isNeedUpdate = isNeedUpdate
                vc.isAllowDownLoad = cell.isAllowDownLoad
                vc.hidesBottomBarWhenPushed = true
                self.navigationController?.pushViewController(vc, animated: true)

          }else {
                let vc = zjyVideoPlayView()
                vc.isStu = false
                vc.courseOpenId = self.courseOpenId
                vc.docId = cell.id
                vc.openClassId = self.openClassId
                vc.videotittle = cell.title
                vc.isAllowDownLoad = cell.isAllowDownLoad
                vc.moduleId = cell.moduleId
                vc.isNeedUpdate = isNeedUpdate
                //拼接URL
                for (key, value) in self.resourcesUrl["args"]{
                    if self.resourcesUrl["urls"]["preview_oss_gen"].stringValue.isEmpty{
                        if value.boolValue{
                            let videoUrl = "\(self.resourcesUrl["urls"]["preview"].stringValue)/\(key).mp4"
                            vc.videourls.append(videoUrl)
                        }
                    }else{
                        if value.boolValue{
                            let videoUrl = "\(self.resourcesUrl["urls"]["preview_oss_gen"].stringValue)/\(key).mp4"
                            vc.videourls.append(videoUrl)
                        }
                    }
                }
                vc.hidesBottomBarWhenPushed = true
                self.navigationController?.pushViewController(vc, animated: true)
          }


        case "图片":
            let vc = previewOfficeViewController()
            vc.cellId = cell.id;
            vc.courseOpenId = self.courseOpenId
            vc.openClassId = self.openClassId
            vc.resourceUrl = self.resourcesUrl.description
            vc.isAllowDownLoad = cell.isAllowDownLoad
            vc.resourcesUrl = self.resourcesUrl
            vc.doctype = cell.categoryName
            vc.celltittle = cell.title
            vc.hidesBottomBarWhenPushed = true
            self.present(vc, animated: true, completion: nil)
         
            print("---图片---")
        case "图文":
            let vc = courseware_tuWenView()
            vc.courseOpenId = self.courseOpenId
            vc.openClassId = self.openClassId
            vc.cellId = cell.id;
            vc.isStu = false
            vc.moduleId = cell.moduleId
            vc.hidesBottomBarWhenPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        case "音频":
            let vc = audioViewController()
            vc.cellId = cell.id
            vc.courseOpenId = self.courseOpenId
            vc.openClassId = self.openClassId
            vc.moduleId = cell.moduleId
            vc.isNet = true
            vc.isAllowDownLoad = isAllowDownLoad
            vc.isStu = false
            vc.isKJ = true
            vc.isNeedUpdate = self.isNeedUpdate
            vc.title = cell.title
            if !self.resourcesUrl["urls"]["preview_oss_ori"].stringValue.isEmpty{
                vc.audiourl = self.resourcesUrl["urls"]["preview_oss_ori"].stringValue
            }else {
                vc.audiourl = self.resourcesUrl["urls"]["preview"].stringValue.substring(toIndex: self.resourcesUrl["urls"]["preview"].stringValue.length - 9)
            }
            vc.hidesBottomBarWhenPushed = true
            
            self.navigationController?.pushViewController(vc, animated: true)
        case "ppt":
            if(self.resourcesUrl["isH5"] == 1){
                let vc = teacherPPTOffficeViewViewController()
                vc.cellId = cell.id;
                vc.courseOpenId = self.courseOpenId
                vc.openClassId = self.openClassId
                vc.resourceUrl = self.resourcesUrl.description
                vc.isTeaching = true
                vc.resourcesUrl = self.resourcesUrl
                vc.doctype = cell.categoryName
                vc.celltittle = cell.title 
                vc.isAllowDownLoad = cell.isAllowDownLoad
                vc.resourceUrl = self.resourcesUrl.description
                vc.hidesBottomBarWhenPushed = true
                self.present(vc, animated: true, completion: nil)
            }else{
                let vc = previewOfficeViewController()
                vc.cellId = cell.id;
                vc.courseOpenId = self.courseOpenId
                vc.openClassId = self.openClassId
                vc.resourceUrl = self.resourcesUrl.description
                vc.resourcesUrl = self.resourcesUrl
                vc.doctype = cell.categoryName
                vc.celltittle = cell.title
                vc.isAllowDownLoad = cell.isAllowDownLoad
                vc.hidesBottomBarWhenPushed = true
                self.present(vc, animated: true, completion: nil)
            }
            print("---ppt---")
        case "文档":
            let vc = previewOfficeViewController()
            vc.cellId = cell.id;
            vc.courseOpenId = self.courseOpenId
            vc.openClassId = self.openClassId
            vc.resourceUrl = self.resourcesUrl.description
            vc.isAllowDownLoad = cell.isAllowDownLoad
            vc.resourcesUrl = self.resourcesUrl
            vc.doctype = cell.categoryName
            vc.celltittle = cell.title
            vc.hidesBottomBarWhenPushed = true
            self.present(vc, animated: true, completion: nil)
            print("---文档--")
        case "链接":
            print("----链接----")
            let vc = LinkView()
            vc.linkStr = self.linkstr
            vc.courseOpenId = self.courseOpenId
            vc.openClassId = self.openClassId
            vc.cellId = cell.id
            vc.isStu = false
            vc.isKJ = true
            vc.hidesBottomBarWhenPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        case "子节点":
            print("子节点")
        default:
            SCLAlertView().showInfo("温馨提示！", subTitle: "该课件暂不支持打开",closeButtonTitle: "确定")
        }
         self.openRes(cell: cell)
    }

    //同屏打开课件
    func openRes(cell:zjycourseTopic){
        let dict = ["type":"openRes","cellId":cell.id,"fromRes":"true"]
        ZQSocketManager.share.notificationSocketManager(data: dict)
    }

    //获取课件信息
    func getUrl(cell:zjycourseTopic) {
        let dict = ["cellId":cell.id,
                    "stuId":Account.defaultAccount.id!,
                    "openClassId":self.openClassId,
                    "sourceType":3] as [String : Any]
        
        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.AssistTeacher_getCellInfoByCellId, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                
                if json["code"] == 1{
                    
                    if json["cellInfo"]["isNeedUpdate"].intValue == 1{
                        switch json["cellInfo"]["categoryName"].stringValue {
                        case "图片","ppt","文档":
                            let str = JSON.init(parseJSON:json["cellInfo"]["resourceUrl"].description)
                            common.share.updateDataByCell(cellId: cell.id, pageNum: str["args"]["page_count"].intValue, seconds: 0)
                        default:
                            print("====")
                        }
                    }
                    self.isNeedUpdate = json["cellInfo"]["isNeedUpdate"].intValue == 1 ? true : false
                    let resourceUrl =  json["cellInfo"]["resourceUrl"].description;
                    self.linkstr = json["cellInfo"]["externalLinkUrl"].description;
                    self.resourcesUrl = JSON.init(parseJSON: resourceUrl);
                    self.previewUrl = JSON.init(parseJSON: resourceUrl)["urls"]["preview"].stringValue
                    self.pushstuCourseWareVC(cell: cell, isAllowDownLoad: json["cellInfo"]["isAllowDownLoad"].boolValue, isNeedUpdate: json["cellInfo"]["isNeedUpdate"].boolValue)
                    
                 
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                XLBallLoading.hide(in: self.view)
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }
    }
}
