//
//  editOpenClassView.swift
//  云课堂2
//
//  Created by 志辉教育 on 2018/6/28.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import  SwiftyJSON
class editOpenClassView: UIViewController,UIPickerViewDelegate, UIPickerViewDataSource,UITextFieldDelegate {
    let width = UIScreen.main.bounds.width
    let height = UIScreen.main.bounds.height
    override func viewDidLoad() {
        super.viewDidLoad()
//      self.navigationController?.navigationBar.isTranslucent = false;
        self.view.backgroundColor = UIColor.colorWithHex(hexColor: 0xf1f1f1)
        self.text_CourseName.delegate = self
        self.title = "新建班级"
        if(self.openClassType == 2){
            self.title = "新建外校班级"
            self.setOutSide();
        }else if(self.openClassType == 4){
            self.title = " 新建教师培训";
            self.setTraining();
        }else{
            self.title = " 新建本校班级"   ;
            self.setlocabUI();
        }
        
        self.view.addSubview(self.btn_done)
        let HX = common.share.returnSafeAreaLineHeight()
        self.btn_done.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(50)
            make.bottom.equalTo(self.view.snp.bottom).offset(HX)
        }
        self.btn_done.addTarget(self, action: #selector(self.editOpenClassInfo), for: .touchUpInside)
        self.getTermList()
        self.termPicker = UIPickerView(frame:CGRect(x: 0, y: height-220, width: width, height: 216));
        self.termPicker.delegate = self
        self.termPicker.dataSource = self
        self.text_semester.delegate = self
        if(!self.openClassId.isEmpty){
            self.getOpenClassInfo()
        }
        self.navigationItem.backBarButtonItem = UIBarButtonItem(title: "返回", style: .done, target: self, action: nil)
    }
    
 
    //设置本校
    func setlocabUI(){
        //键盘
        toolBar = common.share.AddToolKeyboardDoneBar()
        let doneButton = UIBarButtonItem(title: "确定", style: .plain, target: self, action: #selector(self.DoneClick));
        let spaceButton = UIBarButtonItem(barButtonSystemItem: .flexibleSpace, target: nil, action: nil)
        toolBar.setItems([spaceButton,doneButton], animated: false);
        
        self.view.addSubview(self.text_CourseName)
        self.view.addSubview(self.text_semester)
        self.view.addSubview(self.btn_AssistTeacherName)
        self.view.addSubview(self.btn_CounsellorTeacherName)
        
        self.text_CourseName.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(60)
            make.left.equalTo(0)
            make.top.equalTo(10)
        }
        
        self.text_semester.snp.makeConstraints { (make) in
            make.left.height.width.equalTo(self.text_CourseName)
            make.top.equalTo(self.text_CourseName.snp.bottom).offset(10)
        }
        
        self.btn_AssistTeacherName.snp.makeConstraints { (make) in
            make.left.height.width.equalTo(self.text_CourseName)
            make.top.equalTo(self.text_semester.snp.bottom).offset(10)
        }
        self.btn_CounsellorTeacherName.snp.makeConstraints { (make) in
            make.left.height.width.equalTo(self.text_CourseName)
            make.top.equalTo(self.btn_AssistTeacherName.snp.bottom).offset(10)
        }
        self.text_CourseName.text = className
        self.text_semester.text = termName
        if !AssistTeacherName.isEmpty{
           self.btn_AssistTeacherName.setTitle(AssistTeacherName, for: .normal)
        }else if !CounsellorTeacherName.isEmpty{
           self.btn_CounsellorTeacherName.setTitle(CounsellorTeacherName, for: .normal)
        }
        
    }
    //设置外校
    func setOutSide(){
        //键盘
        toolBar = common.share.AddToolKeyboardDoneBar()
        let doneButton = UIBarButtonItem(title: "确定", style: .plain, target: self, action: #selector(self.DoneClick));
        let spaceButton = UIBarButtonItem(barButtonSystemItem: .flexibleSpace, target: nil, action: nil)
        toolBar.setItems([spaceButton,doneButton], animated: false);
        self.view.addSubview(self.text_CourseName)
        self.view.addSubview(self.text_semester)
        self.view.addSubview(self.btn_AssistTeacherName)
        self.view.addSubview(self.lab_SchoolName)
        self.view.addSubview(self.btn_CounsellorTeacherName)
        self.text_CourseName.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(60)
            make.left.equalTo(0)
            make.top.equalTo(10)
        }
        self.text_CourseName.delegate = self
        self.lab_SchoolName.snp.makeConstraints { (make) in
            make.left.height.width.equalTo(self.text_CourseName)
            make.top.equalTo(self.text_CourseName.snp.bottom).offset(10)
        }
        self.text_semester.snp.makeConstraints { (make) in
            make.left.height.width.equalTo(self.text_CourseName)
            make.top.equalTo(self.lab_SchoolName.snp.bottom).offset(10)
        }
        
        self.btn_AssistTeacherName.snp.makeConstraints { (make) in
            make.left.height.width.equalTo(self.text_CourseName)
            make.top.equalTo(self.text_semester.snp.bottom).offset(10)
        }
        self.btn_CounsellorTeacherName.snp.makeConstraints { (make) in
            make.left.height.width.equalTo(self.text_CourseName)
            make.top.equalTo(self.btn_AssistTeacherName.snp.bottom).offset(10)
        }
        self.text_CourseName.text = className
        self.text_semester.text = termName
        if !AssistTeacherName.isEmpty{
            self.btn_AssistTeacherName.setTitle(AssistTeacherName, for: .normal)
        }else if !CounsellorTeacherName.isEmpty{
            self.btn_CounsellorTeacherName.setTitle(CounsellorTeacherName, for: .normal)
        }
        
    }
    //键盘
    func textFieldShouldBeginEditing(_ textField: UITextField) -> Bool {
        textField.inputAccessoryView = toolBar;
        return true
    }
    @objc func DoneClick(){
        self.view.endEditing(true)
    }
    
    //设置外校
    func setTraining(){
        //键盘
        toolBar = common.share.AddToolKeyboardDoneBar()
        let doneButton = UIBarButtonItem(title: "确定", style: .plain, target: self, action: #selector(self.DoneClick));
        let spaceButton = UIBarButtonItem(barButtonSystemItem: .flexibleSpace, target: nil, action: nil)
        toolBar.setItems([spaceButton,doneButton], animated: false);
        
        self.view.addSubview(self.text_CourseName)
        self.view.addSubview(self.text_semester)
        self.view.addSubview(self.btn_AssistTeacherName)
        self.view.addSubview(self.btn_CounsellorTeacherName)
        self.text_CourseName.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(60)
            make.left.equalTo(0)
            make.top.equalTo(10)
        }
        self.text_CourseName.delegate = self
        self.text_semester.snp.makeConstraints { (make) in
            make.left.height.width.equalTo(self.text_CourseName)
            make.top.equalTo(self.text_CourseName.snp.bottom).offset(10)
        }
        self.btn_AssistTeacherName.snp.makeConstraints { (make) in
            make.left.height.width.equalTo(self.text_CourseName)
            make.top.equalTo(self.text_semester.snp.bottom).offset(10)
        }
        self.btn_CounsellorTeacherName.snp.makeConstraints { (make) in
            make.left.height.width.equalTo(self.text_CourseName)
            make.top.equalTo(self.btn_AssistTeacherName.snp.bottom).offset(10)
        }
        self.text_CourseName.text = className
        self.text_semester.text = termName
        if !AssistTeacherName.isEmpty{
            self.btn_AssistTeacherName.setTitle(AssistTeacherName, for: .normal)
        }else if !CounsellorTeacherName.isEmpty{
            self.btn_CounsellorTeacherName.setTitle(CounsellorTeacherName, for: .normal)
        }
    }
    func pickCourse(_ textField : UITextField){
        
        self.text_semester.inputView = self.termPicker;
        let toolBar = UIToolbar();
        toolBar.barStyle = .default;
        toolBar.isTranslucent = true;
        toolBar.tintColor = UIColor(red: 92/255, green: 216/255, blue: 255/255, alpha: 1);
        toolBar.sizeToFit();
        
        //  Adding Button ToolBar
        let doneButton = UIBarButtonItem(title: "确定", style: .plain, target: self, action: #selector(self.doneClick));
        let spaceButton = UIBarButtonItem(barButtonSystemItem: .flexibleSpace, target: nil, action: nil)
        let cancelButton = UIBarButtonItem(title: "取消", style: .plain, target: self, action: #selector(self.cancelClick));
        toolBar.setItems([cancelButton, spaceButton, doneButton], animated: false);
        toolBar.isUserInteractionEnabled = true;
        textField.inputAccessoryView = toolBar;
        
    }
    //设置选择框的列数为3列,继承于UIPickerViewDataSource协议
    func numberOfComponents(in pickerView: UIPickerView) -> Int {
        return 1
    }
    //设置选择框的行数为9行，继承于UIPickerViewDataSource协议
    func pickerView(_ pickerView: UIPickerView,
                    numberOfRowsInComponent component: Int) -> Int {
        return self.termList.count;
    }
    
    //设置选择框各选项的内容，继承于UIPickerViewDelegate协议
    func pickerView(_ pickerView: UIPickerView, titleForRow row: Int,
                    forComponent component: Int) -> String? {
        let json = JSON(self.termList[row]);
        print(json["TermName"].stringValue)
        return json["TermName"].stringValue;
    }
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    var toolBar = UIToolbar();
    var reloadschoolList :(() ->Void)?
    var termPicker = UIPickerView();
    var termList :NSArray = [];
    lazy var openClassType :Int = {
        
        return 1;
    }()
    lazy var firsrterm :String = {
        return "";
    }()
    
    lazy var outSchoolId :String = {
        
        return "";
    }()

    lazy var termName :String = {
        
        return "";
    }()
    lazy var openClassId :String = {
        
        return "";
    }()
    lazy var courseOpenId :String = {
        
        return "";
    }()
    lazy var termId :String = {
        
        return "";
    }()
    //第一个授课老师Id
    lazy var AssistTeacherId :String = {
        
        return "";
    }()
    //第二个授课老师Id
    lazy var CounsellorTeacherId :String = {
        
        return "";
    }()
    lazy var className:String = {
        return "";
    }()
    lazy var AssistTeacherName :String = {
        return "";
    }()
    lazy var CounsellorTeacherName :String = {
        
        return "";
    }()
    lazy var schoolName :String = {
        return "";
    }()
    lazy var text_CourseName : UITextField = {
        let text = UITextField()
        text.placeholder = "请输入班级名称";
        //        text.setValue(NSNumber(value:10), forKey:"paddingLeft");
        text.backgroundColor = UIColor.white
        text.font = UIFont.italicSystemFont(ofSize: 14)
        return text;
    }();
    lazy var lab_SchoolName : UILabel = {
        let lab = UILabel()
        lab.text = "请选择学校"
        lab.backgroundColor = UIColor.white
        lab.isUserInteractionEnabled = true;
        let SchoolNameTapGesture = UITapGestureRecognizer.init(target: self, action: #selector(self.selcetSchool(sender:)));
        lab.addGestureRecognizer(SchoolNameTapGesture);
        return lab
    }();
    
    lazy var text_semester:UITextField = {
        let  text = UITextField()
        text.backgroundColor = UIColor.white
        text.isUserInteractionEnabled = true;
        text.font = UIFont.init(name: "iconfont", size: 14);
        text.placeholder = "请选择学期"
        
        return text
    }()
    
    lazy var btn_AssistTeacherName:UIButton = {
        let btn = UIButton()
        btn.setTitle("点击设置授课老师1", for: .normal)
        //        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 14);
        btn.titleLabel?.font = UIFont.italicSystemFont(ofSize: 14)
        btn.backgroundColor = UIColor.white
        btn.setTitleColor(UIColor.gray, for: .normal)
        btn.tag = 1
        btn.contentHorizontalAlignment = UIControlContentHorizontalAlignment.left
        btn.addTarget(self, action: #selector(self.selectTeacher(_:)), for: .touchUpInside)
        return btn
    }()
    lazy var btn_CounsellorTeacherName:UIButton = {
        let btn = UIButton()
        btn.setTitle("点击设置授课老师2", for: .normal)
        //        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 14);
        btn.titleLabel?.font = UIFont.italicSystemFont(ofSize: 14)
        btn.backgroundColor = UIColor.white
        btn.setTitleColor(UIColor.gray, for: .normal)
        btn.tag = 2
        btn.contentHorizontalAlignment = UIControlContentHorizontalAlignment.left
        btn.addTarget(self, action: #selector(self.selectTeacher(_:)), for: .touchUpInside)
        return btn
    }()
    
    
    fileprivate lazy var btn_done :UIButton = {
        let btn = UIButton()
        btn.setTitleColor(UIColor.white, for: .normal)
        btn.backgroundColor = UIColor.bg
        btn.setTitle("确定", for: .normal)
        return btn;
    }()
    

    
    
   
    
}
