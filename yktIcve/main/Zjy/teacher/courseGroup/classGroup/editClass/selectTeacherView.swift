//
//  selectTeacherView.swift
//  云课堂2
//
//  Created by 志辉教育 on 2018/6/28.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SwiftyJSON
import SDWebImage

class selectTeacherView: UIViewController,UITableViewDataSource,UITableViewDelegate,UISearchBarDelegate{
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.setTopUI()
        self.setTableView()
        self.getdata(isRefresh:true, teacher: self.teacher);
        self.title = "授课老师"
        self.view.backgroundColor = UIColor.white
        self.searchBar.delegate = self
        // Do any additional setup after loading the view.
        
    }
    func setTopUI(){
        toolBar = common.share.AddToolKeyboardDoneBar()
        let doneButton = UIBarButtonItem(title: "确定", style: .plain, target: self, action: #selector(self.doneClick));
        let spaceButton = UIBarButtonItem(barButtonSystemItem: .flexibleSpace, target: nil, action: nil)
        toolBar.setItems([spaceButton,doneButton], animated: false);
        
        self.view.addSubview(background)
        background.snp.makeConstraints{ (make) in
            make.width.equalTo(width)
            make.height.equalTo(51)
            make.top.equalTo(0)
            make.left.equalTo(0)
        }
        background.addSubview(searchBar)
        self.searchBar.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(50)
            make.top.equalTo(self.background.snp.top)
            make.left.equalTo(0)
        }
        self.searchBar.delegate = self
        background.addSubview(lab_line)
        lab_line.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(1)
            make.left.equalTo(0)
            make.top.equalTo(self.searchBar.snp.bottom)
        }
        self.view.addSubview(btn_complete)
        let HX = common.share.returnSafeAreaLineHeight()
        btn_complete.snp.makeConstraints{ (make) in
            make.width.equalTo(width)
            make.height.equalTo(50)
            make.bottom.equalTo(self.view.snp.bottom).offset(HX)
            make.left.equalTo(0)
        }
        self.btn_complete.addTarget(self, action: #selector(self.selectTeacher), for: .touchUpInside)
    }
    
    func  setTableView(){
        //创建表视图
        self.tableView = UITableView.init(frame: CGRect(x:0, y:51, width:width, height:height - 160));
        if common.share.isX(){
            self.tableView = UITableView.init(frame: CGRect(x:0, y:51, width:width, height:height - 215));
        }
        self.tableView.delegate = self;
        self.tableView.dataSource = self;
        //创建一个重用的单元格
        self.tableView.register(selectTeacherCell.self, forCellReuseIdentifier: "swiftCell");
        
        
        self.tableView.tableFooterView = UIView.init(frame: CGRect.zero)
        
        if #available(iOS 9.0, *) {
            self.tableView.cellLayoutMarginsFollowReadableWidth = false
        } else {
            
        }
        //rowHeight属性设置为UITableViewAutomaticDimension
        self.tableView.rowHeight = UITableViewAutomaticDimension;
        
        //表格在编辑状态下允许多选
        self.tableView.allowsMultipleSelectionDuringEditing = true
        
        self.tableView.setEditing(true, animated:true)
        
        //        上拉加载
        self.tableView.mj_footer = MJRefreshBackNormalFooter(refreshingBlock: {
            self.page += 1
            self.getdata(isRefresh: false, teacher: self.teacher)
        })
        self.view.addSubview(self.tableView);
    }
    
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell:selectTeacherCell =  tableView.dequeueReusableCell(withIdentifier: "swiftCell",for: indexPath) as! selectTeacherCell
        
        //获取当前行所对应的图片记录。
        let teacherInfo = selTeaInfos[indexPath.row]
        common.share.setSDImg(str: teacherInfo.avatorUrl!, imgview: cell.img_picture)
        cell.lab_Name.text = teacherInfo.teaName
        cell.lab_EmployeeNum.text = "\u{e612}"
        cell.lab_Employeetext.text = teacherInfo.teaEmployeeNum
        if(teacherInfo.teaId == self.selectId){
            self.tableView.selectRow(at: indexPath , animated: true, scrollPosition: UITableViewScrollPosition.top)
        }
        return cell
        
    }
    //处理列表项的取消选中事件
    func tableView(_ tableView: UITableView, didDeselectRowAt indexPath: IndexPath) {
        let teacherInfo = selTeaInfos[indexPath.row]
        teacherInfo.isSelect = false
        print("1")
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        let teacherInfo = selTeaInfos[indexPath.row]
        teacherInfo.isSelect = true
        print("2")
    }

    
    @objc func doneClick(){
        self.view.endEditing(true)
    }
    
    func searchBarShouldBeginEditing(_ searchBar: UISearchBar) -> Bool {
        searchBar.inputAccessoryView = toolBar;
        return true
    }
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 70;
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        // #warning Incomplete implementation, return the number of rows
        return self.selTeaInfos.count
    }
    
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    // 搜索代理UISearchBarDelegate方法，每次改变搜索内容时都会调用
    func searchBar(_ searchBar: UISearchBar, textDidChange searchText: String) {
        print(searchText)
        // 没有搜索内容时显示全部组件
        if searchText == "" {
            self.selTeaInfos = self.reservedInfo;
        }else {// 匹配用户输入内容(不区分大小写)
            self.reservedInfo = []
            self.selTeaInfos = []
            self.getdata(isRefresh: true, teacher: searchText)
        }
        
    }
    var toolBar = UIToolbar();
    var reloadTeacherClosure :((_ teaIdList:[String],_ teaNameList:[String]) ->Void)?
    fileprivate let width = UIScreen.main.bounds.width
    fileprivate let height = UIScreen.main.bounds.height
    lazy var teaIdList  = [String]()
    lazy var teaNameList  = [String]()
    lazy var list :NSArray = {return []}()
    lazy var page :Int = {return 1}()
    lazy var teacher :String = {return ""}()
    var user:User!
    
    lazy var background : UIView = {
        let bg = UIView()
        bg.backgroundColor = UIColor.white
        return bg
    }()
    
    lazy var searchBar : UISearchBar = {
        let search = UISearchBar()
        search.tintColor = UIColor.bg
        search.setBackgroundImage(UIImage(), for: .any, barMetrics: .default)
        search.placeholder = "请输入姓名和工号搜索"
        return search
    }()
    lazy var btn_complete : UIButton = {
        let btn = UIButton()
        btn.backgroundColor = UIColor.bg
        btn.contentMode = .center
        btn.setTitleColor(UIColor.white, for: .normal)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 18)
        btn.setTitle("完 成", for: .normal)
        btn.setTitleColor(UIColor.bg, for: .selected)
        return btn
    }()
    lazy var lab_line : UILabel = {
        let lab = UILabel()
        lab.backgroundColor = UIColor.colorWithHex(hexColor: 0xf1f1f1)
        return lab
    }()
    lazy var tableView :UITableView = {
        let table = UITableView()
        
        return table
    }()
    
    lazy var openClassType :Int = {
        
        return 1;
    }()
    lazy var courseOpenId : String = {
        
        return "";
    }()
    lazy var selectId : String = {
        
        return "";
    }()
    lazy var schoolId: String = {
        return "";
    }()
    
    var selTeaInfos = [selectTeacherModel]()
    var reservedInfo = [selectTeacherModel]()
}

