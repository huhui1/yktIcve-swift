//
//  editOpenClassViewController.swift
//  云课堂2
//
//  Created by 志辉教育 on 2018/6/28.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import Alamofire
import  SwiftyJSON
extension editOpenClassView {
    
    
    //选择学校
   @objc func selcetSchool(sender: UITapGestureRecognizer){
        let vc = selectSchoolListView()
        vc.type = 1
        vc.reloadSchoolClosure = {(outSchoolId,outSchoolName) in
            self.lab_SchoolName.text = outSchoolName
            self.outSchoolId = outSchoolId
        }
        self.navigationController?.pushViewController(vc, animated: true)
    }
    //获得学期列表
    func getTermList(){
        //        ZKProgressHUD.setAnimationStyle(.chrysanthemum);
        //
        //        ZKProgressHUD.show();
        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.DesignTeacher_getTermList, method: .post,encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    //                    ZKProgressHUD.hide()
                    self.termList = json["termList"].arrayValue as NSArray
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                XLBallLoading.hide(in: self.view)
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }
        
    }
    @objc func doneClick(_ button:UIButton) {
        if(self.termName.isEmpty){
            if(self.termList.count > 0){
                let json =  JSON(self.termList[0]);
                self.termName = json["TermName"].stringValue;
                self.termId = json["Id"].stringValue;
                self.text_semester.text = self.termName
            }
        }else{
            self.text_semester.text = self.termName
        }
        self.text_semester.resignFirstResponder();
        
    }
    
   @objc func cancelClick() {
        self.text_semester.resignFirstResponder();
    }
    //选择教师
   @objc func  selectTeacher(_ btn: UIButton){
        let vc = selectTeacherView()
        vc.openClassType = self.openClassType
        if(self.openClassType == 2){
            vc.schoolId = self.outSchoolId
            if(self.lab_SchoolName.text == "请选择学校"){
                ZKProgressHUD.showMessage("请选择学校!")
                return
            }
        }else{
           vc.schoolId = Account.defaultAccount.schoolId!
        }
        if(btn.tag == 1){
            vc.reloadTeacherClosure = {(teaIdList,teaNameList) in
                self.btn_AssistTeacherName.setTitle(teaNameList[0], for: .normal)
                self.AssistTeacherId = teaIdList[0]
                
            }
            vc.selectId = self.AssistTeacherId
        }else{
            vc.reloadTeacherClosure = {(teaIdList,teaNameList) in
                self.btn_CounsellorTeacherName.setTitle(teaNameList[0] , for: .normal)
                self.CounsellorTeacherId = teaIdList[0]
            }
            vc.selectId =  self.CounsellorTeacherId
        }
        self.navigationController?.pushViewController(vc, animated: true);
    }
    
    
    //编辑开班信息
   @objc func editOpenClassInfo(){
        if(self.AssistTeacherId == self.CounsellorTeacherId){
            ZKProgressHUD.showMessage("授课老师1与授课老师2不能相同!")
            return
        }
        let name = self.text_CourseName.text
        let dict = ["Id":self.openClassId,
                    "OpenClassType":self.openClassType,
                    "Name":name ?? "",
                    "TermId":self.termId,
                    "CourseOpenId":self.courseOpenId,
                    "AssistTeacherId":self.AssistTeacherId,
                    "CounsellorTeacherId":self.CounsellorTeacherId,
                    "CreatorId":Account.defaultAccount.id!,
                    "SourceType":3] as [String : Any]
        let data = ["data":JSON.init(dict)]
        //        ZKProgressHUD.setAnimationStyle(.chrysanthemum);
        //
        //        ZKProgressHUD.show();
        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.DesignTeacher_saveOpenClassInfo, method: .post, parameters: data, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    //                    ZKProgressHUD.hide()
                    self.reloadschoolList!()
                    self.navigationController?.popViewController(animated: true)
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                XLBallLoading.hide(in: self.view)
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }
    }
    func textFieldDidBeginEditing(_ textField: UITextField) {
        self.pickCourse(self.text_semester);
    }
    func pickerView(_ pickerView: UIPickerView, didSelectRow row: Int, inComponent component: Int) {
        let json =  JSON(self.termList[row]);
        self.termName = json["TermName"].stringValue;
        self.termId = json["Id"].stringValue;
    }
    //编辑时展示内容
    func getOpenClassInfo(){
        XLBallLoading.show(in: self.view)
        let dict = ["openClassId":self.openClassId]
        Alamofire.request(appAPI.DesignTeacher_getOpenClassInfo, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    if self.openClassType == 2 {
                        //只能更改主持老师，和授课老师
                        self.lab_SchoolName.isUserInteractionEnabled = false
                    }
                    self.text_CourseName.text = json["openClassInfo"]["Name"].stringValue
                    self.text_semester.text = json["openClassInfo"]["TermName"].stringValue
                    self.AssistTeacherId = json["openClassInfo"]["AssistTeacherId"].stringValue
                    self.CounsellorTeacherId = json["openClassInfo"]["CounsellorTeacherId"].stringValue
                    self.termId = json["openClassInfo"]["TermId"].stringValue
                    if(self.openClassType == 2){
                        self.outSchoolId =  json["openClassInfo"]["SchoolId"].stringValue
                        self.lab_SchoolName.text = json["openClassInfo"]["SchoolName"].stringValue
                    }
                    if(!json["openClassInfo"]["AssistTeacherName"].stringValue.isEmpty){
                        self.btn_AssistTeacherName.setTitle(json["openClassInfo"]["AssistTeacherName"].stringValue, for: .normal)
                    }
                    if(!json["openClassInfo"]["CounsellorTeacherName"].stringValue.isEmpty){
                        self.btn_CounsellorTeacherName.setTitle(json["openClassInfo"]["CounsellorTeacherName"].stringValue, for: .normal)
                    }
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                XLBallLoading.hide(in: self.view)
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }
    }
    
}

