//
//  teacherFindingView.swift
//  云课堂2
//
//  Created by cc on 2018/6/21.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SwiftyJSON

class teacherFindingView: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()
        self.title = "更多"
        self.view.backgroundColor = UIColor.colorWithHex(hexColor: 0xEFEFEF)
        let item = UIBarButtonItem(title: "\u{e6f7} 返回", style: .plain, target: self, action: #selector(self.backBtnClick))
        self.navigationItem.leftBarButtonItem = item
        common.share.setBackButtonItem(item:item)
        let item1 = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = item1
        self.setUI()
        self.navigationController?.navigationBar.barStyle = .default
        // Do any additional setup after loading the view.
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    //返回按钮
    @objc func backBtnClick() {
        
        self.presentingViewController?.dismiss(animated: true, completion: nil)
    }
    
    
    func setUI(){
        self.view.addSubview(self.btn_member)
        self.view.addSubview(self.btn_exam)
        self.view.addSubview(self.btn_grade)
        self.view.addSubview(self.btn_Qrcode)
        self.view.addSubview(self.btn_guidance)
        self.view.addSubview(self.btn_notice)
        self.btn_member.addSubview(self.lab_member)
        self.btn_exam.addSubview(self.lab_exam)
        self.btn_grade.addSubview(self.lab_grade)
        self.btn_Qrcode.addSubview(self.lab_Qrcode)
        self.btn_guidance.addSubview(self.lab_guidance)
        self.btn_notice.addSubview(self.lab_notice)
        self.btn_member.snp.makeConstraints { (make) in
            make.width.equalTo(width / 3)
            make.height.equalTo(120)
            make.top.equalTo(10)
            make.left.equalTo(0)
        }
        self.lab_member.snp.makeConstraints { (make) in
            make.width.equalTo(60)
            make.height.equalTo(13)
            make.bottom.equalTo(self.btn_member.snp.bottom).offset(-32)
            make.centerX.equalTo(self.btn_member.snp.centerX)
        }
        self.btn_exam.snp.makeConstraints { (make) in
            make.width.equalTo(width / 3)
            make.height.equalTo(120)
            make.top.equalTo(self.btn_member)
            make.left.equalTo(self.btn_member.snp.right).offset(2)
        }
        self.lab_exam.snp.makeConstraints { (make) in
            make.width.equalTo(60)
            make.height.equalTo(13)
            make.bottom.equalTo(self.btn_exam.snp.bottom).offset(-32)
            make.centerX.equalTo(self.btn_exam.snp.centerX)
        }
        self.btn_grade.snp.makeConstraints { (make) in
            make.width.equalTo(width / 3)
            make.height.equalTo(120)
            make.top.equalTo(self.btn_member)
            make.left.equalTo(self.btn_exam.snp.right).offset(2)
        }
        self.lab_grade.snp.makeConstraints { (make) in
            make.width.equalTo(60)
            make.height.equalTo(13)
            make.bottom.equalTo(self.btn_grade.snp.bottom).offset(-32)
            make.centerX.equalTo(self.btn_grade.snp.centerX)
        }
        self.btn_Qrcode.snp.makeConstraints { (make) in
            make.width.equalTo(width / 3)
            make.height.equalTo(120)
            make.top.equalTo(self.btn_member.snp.bottom).offset(2)
            make.left.equalTo(0)
        }
        self.lab_Qrcode.snp.makeConstraints { (make) in
            make.width.equalTo(65)
            make.height.equalTo(13)
            make.bottom.equalTo(self.btn_Qrcode.snp.bottom).offset(-32)
            make.centerX.equalTo(self.btn_Qrcode.snp.centerX)
        }
        self.btn_guidance.snp.makeConstraints { (make) in
            make.width.equalTo(width / 3)
            make.height.equalTo(120)
            make.top.equalTo(self.btn_exam.snp.bottom).offset(2)
            make.left.equalTo(self.btn_Qrcode.snp.right).offset(2)
        }
        self.lab_guidance.snp.makeConstraints { (make) in
            make.width.equalTo(51)
            make.height.equalTo(13)
            make.bottom.equalTo(self.btn_guidance.snp.bottom).offset(-32)
            make.centerX.equalTo(self.btn_guidance.snp.centerX)
        }
        self.btn_notice.snp.makeConstraints { (make) in
            make.width.equalTo(width / 3)
            make.height.equalTo(120)
            make.top.equalTo(self.btn_grade.snp.bottom).offset(2)
            make.left.equalTo(self.btn_guidance.snp.right).offset(2)
        }
        self.lab_notice.snp.makeConstraints { (make) in
            make.width.equalTo(60)
            make.height.equalTo(13)
            make.bottom.equalTo(self.btn_notice.snp.bottom).offset(-32)
            make.centerX.equalTo(self.btn_notice.snp.centerX)
        }
        
          self.btn_member.addTarget(self, action: #selector(tap(_:)), for: .touchUpInside);
          self.btn_exam.addTarget(self, action: #selector(tap(_:)), for: .touchUpInside);
          self.btn_grade.addTarget(self, action: #selector(tap(_:)), for: .touchUpInside);
          self.btn_Qrcode.addTarget(self, action: #selector(tap(_:)), for: .touchUpInside);
          self.btn_guidance.addTarget(self, action: #selector(tap(_:)), for: .touchUpInside);
          self.btn_notice.addTarget(self, action: #selector(tap(_:)), for: .touchUpInside);
    }
    
    @objc func tap(_ button:UIButton){
        let tag = button.tag;
        switch tag {
        case 0 :
            print("学生管理")
            let vc = stuMemberView()
            vc.hidesBottomBarWhenPushed = true;
            vc.openClassId = self.openClassId
            vc.hidesBottomBarWhenPushed = true;
            self.navigationController?.pushViewController(vc, animated: true);
        case 1 :
            let vc = examListView()

            vc.courseOpenId = self.courseOpenId
            vc.openClassId = self.openClassId
            vc.hidesBottomBarWhenPushed = true;
            self.navigationController?.pushViewController(vc, animated: true)
            print("考试")
        case 2 :
            let vc = stuResultsView()
            vc.openClassId = self.openClassId
            vc.courseOpenId = self.courseOpenId
            vc.hidesBottomBarWhenPushed = true;
            self.navigationController?.pushViewController(vc, animated: true)
        case 3 :
            print("二维码")
            let data = ["flag":"ssykt",
                        "type":"1",
                        "courseOpenId":self.courseOpenId,
                        "openClassId":self.openClassId]
            let vc = classQrcodeView();
            vc.msg = "扫描二维码，立刻加入班级"
            vc.courseName = self.courseName
            vc.thumbnail = self.thumbnail
            vc.isHasImg = true
            vc.schoolName = Account.defaultAccount.displayName!
            vc.qrstr = JSON.init(data).description
            vc.view.backgroundColor = UIColor.white
            vc.modalTransitionStyle = .crossDissolve
            vc.view.backgroundColor = UIColor.init(red: 0, green: 0, blue: 0, alpha: 0.5)
            self.present(vc, animated:  true,completion: nil)
        case 4 :
            let vc = guidanceView()
            vc.courseOpenId = self.courseOpenId
            vc.hidesBottomBarWhenPushed = true;
            self.navigationController?.pushViewController(vc, animated: true)
            
            
        case 5 :
            print("消息公告")
            let vc = classNoticeView()
            vc.hidesBottomBarWhenPushed = true;
            vc.openClassId = self.openClassId
            vc.courseOpenId = self.courseOpenId
            self.navigationController?.pushViewController(vc, animated: true);
        default :
            print("----")
        }
    }
    lazy var openClassId :String = {
        return "";
    }()
    lazy var courseOpenId :String = {
        return "";
    }()
    lazy var courseName:String = {return ""}()
    lazy var thumbnail : String = {return ""}()
    
    let width = UIScreen.main.bounds.width
    lazy var btn_member : UIButton = {
        let btn = UIButton()
        btn.setTitle("\u{e726}", for: .normal)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 26)
        btn.titleLabel?.textAlignment = .center
        btn.setTitleColor(UIColor.colorWithHex(hexColor: 0x27BE71), for: .normal)
        btn.backgroundColor = UIColor.white
        btn.tag = 0
        return btn
    }()
    lazy var lab_member : UILabel = {
        let lab = UILabel()
        lab.text = "学生管理"
        lab.textColor = UIColor.colorWithHex(hexColor: 0x666666)
        lab.textAlignment = .center
        lab.font = UIFont.init(name: "iconfont", size: 13)
        return lab
    }()
    lazy var btn_exam : UIButton = {
        let btn = UIButton()
        btn.setTitle("\u{e723}", for: .normal)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 24)
        btn.titleLabel?.textAlignment = .center
        btn.setTitleColor(UIColor.colorWithHex(hexColor: 0x0090FF), for: .normal)
        btn.backgroundColor = UIColor.white
        btn.tag = 1
        return btn
    }()
    lazy var lab_exam: UILabel = {
        let lab = UILabel()
        lab.text = "考 试"
        lab.textColor = UIColor.colorWithHex(hexColor: 0x666666)
        lab.textAlignment = .center
        lab.font = UIFont.init(name: "iconfont", size: 13)
        return lab
    }()
    lazy var btn_grade : UIButton = {
        let btn = UIButton()
        btn.setTitle("\u{e725}", for: .normal)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 24)
        btn.titleLabel?.textAlignment = .center
        btn.setTitleColor(UIColor.colorWithHex(hexColor: 0xF5996C), for: .normal)
        btn.backgroundColor = UIColor.white
        btn.tag = 2
        return btn
    }()
    lazy var lab_grade : UILabel = {
        let lab = UILabel()
        lab.text = "学生成绩"
        lab.textColor = UIColor.colorWithHex(hexColor: 0x666666)
        lab.textAlignment = .center
        lab.font = UIFont.init(name: "iconfont", size: 13)
        return lab
    }()
    lazy var btn_Qrcode : UIButton = {
        let btn = UIButton()
        btn.setTitle("\u{e727}", for: .normal)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 24)
        btn.titleLabel?.textAlignment = .center
        btn.setTitleColor(UIColor.colorWithHex(hexColor: 0x14A31D), for: .normal)
        btn.backgroundColor = UIColor.white
        btn.tag = 3
        return btn
    }()
    lazy var lab_Qrcode : UILabel = {
        let lab = UILabel()
        lab.text = "班级二维码"
        lab.textColor = UIColor.colorWithHex(hexColor: 0x666666)
        lab.textAlignment = .center
        lab.font = UIFont.init(name: "iconfont", size: 13)
        return lab
    }()
    lazy var btn_guidance : UIButton = {
        let btn = UIButton()
        btn.setTitle("\u{e72c}", for: .normal)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 27)
        btn.titleLabel?.textAlignment = .center
        btn.setTitleColor(UIColor.colorWithHex(hexColor: 0x053DAB), for: .normal)
        btn.backgroundColor = UIColor.white
        btn.tag = 4
        return btn
    }()
    lazy var lab_guidance : UILabel = {
        let lab = UILabel()
        lab.text = "导 学"
        lab.textColor = UIColor.colorWithHex(hexColor: 0x666666)
        lab.textAlignment = .center
        lab.font = UIFont.init(name: "iconfont", size: 13)
        return lab
    }()
    lazy var btn_notice : UIButton = {
        let btn = UIButton()
        btn.setTitle("\u{e712}", for: .normal)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 27)
        btn.titleLabel?.textAlignment = .center
        btn.setTitleColor(UIColor.colorWithHex(hexColor: 0xD4237A), for: .normal)
        btn.backgroundColor = UIColor.white
        btn.tag = 5
        return btn
    }()
    lazy var lab_notice : UILabel = {
        let lab = UILabel()
        lab.text = "消息公告"
        lab.textColor = UIColor.colorWithHex(hexColor: 0x666666)
        lab.textAlignment = .center
        lab.font = UIFont.init(name: "iconfont", size: 13)
        return lab
    }()

}
