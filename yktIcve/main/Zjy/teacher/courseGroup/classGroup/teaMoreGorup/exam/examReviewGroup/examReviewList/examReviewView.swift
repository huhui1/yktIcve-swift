//
//  examReviewView.swift
//  云课堂2
//
//  Created by cc on 2018/7/13.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire

class examReviewView: UIViewController {
    @IBOutlet weak var muneView: UIView!
    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.white
        self.setSlideMenu()
        self.title = self.examTitle
        let item = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = item
        let detailsItem = UIBarButtonItem.init(title: "详情", style: UIBarButtonItemStyle.plain, target :self, action: #selector(self.Details));
        self.navigationItem.rightBarButtonItem = detailsItem;
        // Do any additional setup after loading the view.
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    func setSlideMenu(){
        let titles = ["未交","未批","已批"]
        
        var arr = [UIViewController]()
        
        
        vc1.openClassId = self.openClassId
        vc1.courseOpenId = self.courseOpenId
        vc1.examId = self.examId
        vc1.examTermTimeId = self.examTermTimeId
        

        vc2.openClassId = self.openClassId
        vc2.courseOpenId = self.courseOpenId
        vc2.examId = self.examId
        vc2.examTermTimeId = self.examTermTimeId
        vc2.dategate = self

        vc3.openClassId = self.openClassId
        vc3.courseOpenId = self.courseOpenId
        vc3.examTermTimeId = self.examTermTimeId
        vc3.examId = self.examId
        vc3.dategate = self

        
        arr.append(vc1)
        arr.append(vc2)
        arr.append(vc3)
        
        var ht = 0
        if common.share.isX(){
            ht = 30
        }
        slideMenu = SlideMenu(frame: CGRect(x:0,y:0,width:UIScreen.main.bounds.width,height:40), titles:titles, childControllers:arr)
        slideMenu?.bodyFrame = CGRect.init(x: 0, y: 40, width:  UIScreen.main.bounds.width, height: UIScreen.main.bounds.height - 103 - CGFloat(ht))
        slideMenu?.selectedColor = UIColor(red: 6/255, green: 163/255, blue: 121/255, alpha: 1);
        
        slideMenu?.isFixed = true;
        slideMenu?.indicatorStyle = .followText;
        slideMenu?.titleStyle = .transfrom;
        slideMenu?.line.isHidden = false;
        slideMenu?.scrollToIndex(0)
        view.addSubview(slideMenu!)
        
    }
    
    @objc func Details(){
        self.view.addSubview( self.makeView)
        self.makeView.backgroundColor = UIColor.white
        self.makeView.alpha = 1
        self.makeView.tag = 1001
        let Btn1 = UIButton.init()
        let Btn2 = UIButton.init()
        let Btncancel = UIButton.init()
        Btn1.tag = 101
        Btn2.tag = 102
        self.makeView.addSubview(Btn1)
        self.makeView.addSubview(Btn2)
        self.makeView.addSubview(Btncancel)
        makeView.snp.makeConstraints { (make) in
            make.width.height.equalTo(width)
            make.top.equalTo(0)
            make.bottom.equalTo(0)
            make.left.equalTo(0)
        }
        Btn1.snp.makeConstraints { (make) in
            make.width.height.equalTo(width)
            make.top.equalTo(40)
            make.height.equalTo(40)
            make.left.equalTo(0)
        }
        Btn2.snp.makeConstraints { (make) in
            make.left.height.width.equalTo(Btn1)
            make.top.equalTo(Btn1.snp.bottom).offset(10)
        }
        Btncancel.snp.makeConstraints { (make) in
            make.left.height.width.equalTo(Btn1)
            make.top.equalTo(Btn2.snp.bottom).offset(10)
        }
        Btn1.setTitle("错题集", for: .normal)
        Btn2.setTitle("预览试卷", for: .normal)
        Btn1.titleLabel?.font = UIFont.init(name: "HelveticaNeue-Light", size: 17)
        Btn2.titleLabel?.font = UIFont.init(name: "HelveticaNeue-Light", size: 17)
        Btncancel.setTitle("取消", for: .normal)
        Btn1.setTitleColor(UIColor.bg, for: .normal)
        Btn2.setTitleColor(UIColor.bg, for: .normal)
        Btncancel.setTitleColor(UIColor.bg, for: .normal)
        Btn1.addTarget(self, action: #selector(self.details(_:)), for: .touchUpInside)
        Btn2.addTarget(self, action: #selector(self.details), for: .touchUpInside)
        Btncancel.addTarget(self, action: #selector(self.cancel), for: .touchUpInside)
    }
    
    @objc func details(_ btn:UIButton){
        //视图移除
        self.makeView.removeFromSuperview()
        let tag = btn.tag;
        switch tag {
        case 101:
            print("错题集")
            let vc = WronghomeworkView()
            vc.openClassId = self.openClassId;
            vc.courseOpenId = self.courseOpenId;
            vc.title = "错题集";
            vc.isStu = false
            vc.hkIdOrExamId = self.examId
            vc.hkOrExamType = 2
            self.navigationController?.pushViewController(vc, animated: true)
        case 102:
            print("预览试卷")
            let vc = examinationpreview()
            vc.openClassId = self.openClassId;
            vc.courseOpenId = self.courseOpenId;
            vc.title = self.examTitle
            vc.examId = self.examId
            self.navigationController?.pushViewController(vc, animated: true)
        default :
            print("----")
        }
    }
    //移除视图
    @objc func cancel(){
        self.makeView.removeFromSuperview()
    }
    //刷新考试
    func reloadExamReview(m:Int){
        if m == 1{
            vc2.unReviewList.removeAll()
            vc2.getUnreviewData(isRefresh: false)
        }else{
            vc3.HasReviewList.removeAll()
            vc3.getHasReviewData(isRefresh: false)
        }
    }
    
    let vc1 = examUnsubmitListView(),
    vc2 = examUnreviewListView(),
    vc3 = examHasReviewListView()
    lazy var courseOpenId:String = ""
    lazy var openClassId:String = ""
    lazy var examTermTimeId:String = ""
    lazy var examId:String = ""
    lazy var examTitle:String = ""
    
    var slideMenu:SlideMenu?
    let width = UIScreen.main.bounds.width
    lazy var makeView:UIView = {
        return UIView.init(frame: self.view.frame)
    }()
    
}

extension examReviewView:examUnreviewListViewDategate,examHasReviewListViewDategate{
    //考试未批
    func UnreviewDetails(Info: examModel) {
        print("未批改考试")
        let dict = ["courseOpenId":self.courseOpenId,
                    "examId":self.examId,
                    "examStuId":Info.examStuId.description,
                    "examTermTimeId":self.examTermTimeId,
                    "openClassId":self.openClassId,
                    "stuId":Info.stuId.description,
                    "checked":false] as [String : Any]
        let vc = examinationhandleRecordView();
        vc.data = JSON.init(dict).description
        vc.title = self.examTitle
        vc.HasReview = false
        self.navigationController?.pushViewController(vc, animated: true)
    }
    //考试已批
    func HasReviewDetails(Info: examModel) {
         print("已批改考试")
        let dict = ["courseOpenId":self.courseOpenId,
                    "examId":self.examId,
                    "examStuId":Info.examStuId.description,
                    "examTermTimeId":self.examTermTimeId,
                    "openClassId":self.openClassId,
                    "stuId":Info.stuId.description,
                    "checked":false] as [String : Any]
        let vc = examinationhandleRecordView();
        vc.data = JSON.init(dict).description
        vc.title = self.examTitle
        vc.HasReview = true
        self.navigationController?.pushViewController(vc, animated: true)
    }
}
