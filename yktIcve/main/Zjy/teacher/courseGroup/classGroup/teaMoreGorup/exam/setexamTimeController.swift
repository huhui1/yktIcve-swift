//
//  setexamTimeController.swift
//  云课堂2
//
//  Created by 志辉教育 on 2018/6/26.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import Foundation
import SwiftyJSON
import Alamofire
extension setexamTimeView {
    func getExamTimeInfo(){
    
        XLBallLoading.show(in: self.view)
        let dict = ["openClassId":self.openClassId,
                    "examId":self.examId,
                    "examTimeId":self.examTermTimeId] as [String:Any]
        Alamofire.request(appAPI.OnlineExam_getExamTimeInfo, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if(json["code"]>0){
                    //                    ZKProgressHUD.hide()
                    self.text_timeBeginDate.text = json["examTimeInfo"]["StuStartDate"].stringValue
                    self.text_timeOverDate.text = json["examTimeInfo"]["StuEndDate"].stringValue
                    self.text_checktime.text = json["examTimeInfo"]["FixedPublishTime"].stringValue
                    if(json["examTimeInfo"]["IsForbid"] == 1){
                        self.isOnSwitch.setOn(false, animated: true)
                        self.state = 1
                    }else{
                        self.isOnSwitch.setOn(true, animated: true)
                        self.state = 0
                    }
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            } else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
            
        }
    }
    
   @objc func tap(_ btn :UIButton ){
        let StuStartDate = self.text_timeBeginDate.text as! String
        let StuOverDate = self.text_timeOverDate.text as! String
        let StuCheckDate = self.text_checktime.text as! String
        let dateFormatter = DateFormatter();
        dateFormatter.dateFormat = "yyyy-MM-dd HH:mm:ss";
        let sDate = dateFormatter.date( from: StuStartDate)
        let eDate = dateFormatter.date( from: StuOverDate)
        let cDate = dateFormatter.date( from: StuCheckDate)
        if(StuStartDate.count == 0){
            ZKProgressHUD.showMessage("请选择开始时间!")
            return
        }
        if(StuOverDate.count == 0){
            ZKProgressHUD.showMessage("请选择结束时间!")
            return
        }
        
        let startTimeInterval = (sDate?.timeIntervalSince1970)!
        let endTimeInterval = (eDate?.timeIntervalSince1970)!
        //        let checkTimeInterval = (cDate?.timeIntervalSince1970)!
        
        //        if(StuCheckDate.count == 0){
        //            ZKProgressHUD.showMessage("请选择查看试卷时间!")
        //            return
        //        }
        if( endTimeInterval < startTimeInterval){
            ZKProgressHUD.showMessage("结束时间不能比开始时间早!")
            return
        }
        let dict  = [ "Id":self.examTermTimeId,
                      "CreatorId":Account.defaultAccount.id!,
                      "OpenClassId":self.openClassId,
                      "ExamId":self.examId,
                      "StuStartDate":StuStartDate,
                      "StuEndDate":StuOverDate,
                      "FixedPublishTime":StuCheckDate,
                      "IsForbid":self.state,
                      "SourceType":3] as [String : Any]
        let data = ["data":JSON.init(dict)]
        Alamofire.request(appAPI.OnlineExam_saveExamTimeInfo, method: .post, parameters: data, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if(json["code"]>0){
//                    self.reloadClosure!();
                    self.navigationController?.popViewController(animated: true)
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }
    }
    func pickStartDate(_ textField : UITextField){
        
        self.datePicker.backgroundColor = UIColor.white;
        
        let dateFormatter = DateFormatter();
        dateFormatter.dateFormat = "yyyy-MM-dd HH:mm:ss";
        let minDate = dateFormatter.date(from: "1900-01-01 00:00:00");
        let maxDate = dateFormatter.date(from: "2030-01-01 00:00:00");
        datePicker.minimumDate = minDate;
        datePicker.maximumDate = maxDate;
        textField.inputView = self.datePicker;
        // ToolBar
        let toolBar = UIToolbar();
        toolBar.barStyle = .default;
        toolBar.isTranslucent = true;
        toolBar.tintColor = UIColor(red: 92/255, green: 216/255, blue: 255/255, alpha: 1);
        toolBar.sizeToFit();
        
        
        // Adding Button ToolBar
        let doneButton = UIBarButtonItem(title: "确定", style: .plain, target: self, action: #selector(self.doneClick(_ :)));
        doneButton.tag =  textField.tag
        let spaceButton = UIBarButtonItem(barButtonSystemItem: .flexibleSpace, target: nil, action: nil)
        let cancelButton = UIBarButtonItem(title: "取消", style: .plain, target: self, action: #selector(self.cancelClick(_ :)));
        cancelButton.tag =  textField.tag
        toolBar.setItems([cancelButton, spaceButton, doneButton], animated: false);
        toolBar.isUserInteractionEnabled = true;
        textField.inputAccessoryView = toolBar;
        
    }
   @objc func doneClick( _ btn:UIButton) {
        let formatter = DateFormatter();
        //日期样式
        formatter.dateFormat = "yyyy-MM-dd HH:mm:ss";
        if(btn.tag == 1){
            self.text_timeBeginDate.text = formatter.string(from: self.datePicker.date);
            self.text_timeBeginDate.resignFirstResponder();
        }
        if(btn.tag == 2){
            
            self.text_timeOverDate.text = formatter.string(from: self.datePicker.date);
            self.text_timeOverDate.resignFirstResponder();
        }
        if(btn.tag == 3){
            self.text_checktime.text = formatter.string(from: self.datePicker.date);
            self.text_checktime.resignFirstResponder();
        }
    }
    @objc func cancelClick(_ btn:UIButton) {
        if(btn.tag == 1){
            self.text_timeBeginDate.resignFirstResponder();
        }
        if(btn.tag == 2){
            self.text_timeOverDate.resignFirstResponder();
        }
        if(btn.tag == 3){
            self.text_checktime.resignFirstResponder();
        }
    }
}


