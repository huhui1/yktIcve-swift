//
//  examUnreviewListView.swift
//  云课堂2
//
//  Created by cc on 2018/7/13.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire

@objc protocol examUnreviewListViewDategate{
    @objc optional func UnreviewDetails(Info:examModel) -> ()
}

class examUnreviewListView: UIViewController,UITableViewDelegate,UITableViewDataSource {

    @IBOutlet weak var tableView: UITableView!
    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.white
        self.setTableViewUI()
        self.getUnreviewData(isRefresh: true)
        // Do any additional setup after loading the view.
    }
    var dategate:examUnreviewListViewDategate!
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
//    override func viewWillAppear(_ animated: Bool) {
//        
//    }
    init() {
        super.init(nibName: "examUnreviewListView", bundle: nil)
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    func setTableViewUI(){
        self.tableView.delegate = self
        self.tableView.dataSource = self
        
        //创建一个重用的单元格
        self.tableView.register(HomeworkReviewCell.self, forCellReuseIdentifier: "HomeworkReviewCell");
        
        self.tableView.tableFooterView = UIView(frame:CGRect.zero)//除去多余的cell
        
        if #available(iOS 9.0, *) {
            self.tableView.cellLayoutMarginsFollowReadableWidth = false
        }
        //下拉刷新相关设置,使用闭包Block
        self.tableView.mj_header = MJRefreshNormalHeader(refreshingBlock: {
            //重现生成数据
            self.unReviewList.removeAll()
            self.getUnreviewData(isRefresh: false)
        })
    }
    func numberOfSections(in tableView: UITableView) -> Int {
        // #warning Incomplete implementation, return the number of sections
        return 1
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        // #warning Incomplete implementation, return the number of rows
        return self.unReviewList.count
    }
    
    
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 60
    }
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell:HomeworkReviewCell = tableView.dequeueReusableCell(withIdentifier: "HomeworkReviewCell") as! HomeworkReviewCell
        let data = self.unReviewList[indexPath.row]
        cell.setUnreviewExam(json: data)
        cell.selectionStyle = UITableViewCellSelectionStyle.none
        cell.delegate = self
        return cell
    }
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        let data = self.unReviewList[indexPath.row]
        self.dategate?.UnreviewDetails!(Info: data)
    }
    
    
    lazy var courseOpenId:String = ""
    lazy var openClassId:String = ""
    lazy var examTermTimeId:String = ""
    lazy var examId:String = ""
    var unReviewList = [examModel]()
    

}

extension examUnreviewListView:HomeworkReviewCellDelegate{
        //退回
        func returnHomework(_ btn: UIButton) {
            let alertController = UIAlertController(title: "提示",
                                                    message:"确定退回该学生考试吗？", preferredStyle: .alert)
            let cancelAction = UIAlertAction(title: "取消", style: .cancel, handler: nil)
            let okAction = UIAlertAction(title: "确定", style:.default, handler: {
                action in
                
                let json = self.unReviewList[btn.tag]
                let dict = ["examStuId":json.examStuId]
                XLBallLoading.show(in: self.view)
                Alamofire.request(appAPI.OnlineExam_rejectExam, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
                    if let value = response.result.value {
                        let json = JSON(value)
                        if(json["code"]>0){
                            ZKProgressHUD.showMessage(json["msg"].stringValue)
                            self.tableView.allowsMultipleSelectionDuringEditing = false
                            self.tableView.setEditing(false, animated:true)
                            self.unReviewList.removeAll()
                            self.getUnreviewData(isRefresh: false)
                            common.share.setTableFootView_noData(self.tableView, list: self.unReviewList as NSArray)
                        }else{
                            ZKProgressHUD.showMessage(json["msg"].stringValue);
                        }
                        XLBallLoading.hide(in: self.view)
                    }else{
                        ZKProgressHUD.showMessage("网络环境异常请稍后再试！");
                        XLBallLoading.hide(in: self.view)
                    }
                }
            })
            alertController.addAction(cancelAction)
            alertController.addAction(okAction)
            self.present(alertController, animated: true, completion: nil)
    }
    
    //获取未批改数据
    func getUnreviewData(isRefresh:Bool){
        let dict = ["courseOpenId":self.courseOpenId,
                    "openClassId":self.openClassId,
                    "examId":self.examId,
                    "examTermTimeId":self.examTermTimeId,
                    "state":1] as [String : Any]
        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.OnlineExam_getReadStuList, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if(json["code"]>0){
                    self.getList(isRefresh: isRefresh, json: json["examStuList"])
                    self.tableView.reloadData()
                    if(!isRefresh){
                        //结束刷新
                        self.tableView.mj_header.endRefreshing()
                    }
                }else{
                    ZKProgressHUD.showMessage(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showMessage("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }
    func getList(isRefresh:Bool,json:JSON){
        for i in json {
            let Info = examModel.init(data: i.1)
            self.unReviewList.append(Info)
        }
        common.share.setTableFootView_noData(self.tableView, list: self.unReviewList as NSArray)
        self.tableView.reloadData()
    }
}






