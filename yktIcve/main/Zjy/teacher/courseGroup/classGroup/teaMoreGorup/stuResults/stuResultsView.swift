
//
//  stuGradeView.swift
//  云课堂-职教云
//
//  Created by zqy on 2018/3/22.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import SwiftyJSON

class stuResultsView: UIViewController,UISearchBarDelegate,UITableViewDelegate,UITableViewDataSource {
 var tableView:UITableView!

    override func viewDidLoad() {
        super.viewDidLoad()

        let appDelegate = UIApplication.shared.delegate as! AppDelegate
        let value = UIInterfaceOrientation.landscapeRight.rawValue
        appDelegate.isEffective = true
        appDelegate.allowRotation = false
        UIDevice.current.setValue(value, forKey: "orientation")
        self.navigationController?.navigationBar.barStyle = .default
        self.view.backgroundColor = UIColor.colorWithHex(hexColor: 0xf2f2f2)
        self.setUI()
        self.setTableViewUI()
        self.getClassStuScoreList()
        // Do any additional setup after loading the view.
        let item = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = item
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    func setUI(){
        //键盘处理
        toolBar = common.share.AddToolKeyboardDoneBar()
        let doneButton = UIBarButtonItem(title: "确定", style: .plain, target: self, action: #selector(self.DoneClick));
        let spaceButton = UIBarButtonItem(barButtonSystemItem: .flexibleSpace, target: nil, action: nil)
        toolBar.setItems([spaceButton,doneButton], animated: false);
        
        self.view.addSubview(self.searchBar)
        self.view.addSubview(self.lab_line)
        self.view.addSubview(self.btn_stuName)
        self.view.addSubview(self.btn_stuNum)
        self.view.addSubview(self.lab_online)
        self.view.addSubview(self.lab_offline)
        self.view.addSubview(self.lab_homework)
        self.view.addSubview(self.lab_exam)
        self.view.addSubview(self.lab_gradeScore)
        self.view.addSubview(self.lab_totalScore)
        self.searchBar.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(50)
            make.centerX.equalTo(self.view.snp.centerX)
            make.top.equalTo(0)
        }
        self.searchBar.delegate = self
        self.lab_line.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(1)
            make.left.equalTo(0)
            make.top.equalTo(self.searchBar.snp.bottom)
        }
        self.btn_stuName.snp.makeConstraints { (make) in
            make.width.equalTo(75)
            make.height.equalTo(30)
            make.top.equalTo(self.lab_line.snp.bottom).offset(3)
            make.left.equalTo(0)
        }
        self.btn_stuName.addTarget(self, action: #selector(self.orderBytype(_:)), for: .touchUpInside)
        self.btn_stuNum.snp.makeConstraints { (make) in
            make.width.equalTo(75)
            make.height.equalTo(30)
            make.top.equalTo(self.lab_line.snp.bottom).offset(3)
            make.left.equalTo(self.btn_stuName.snp.right)
        }
        self.btn_stuNum.addTarget(self, action: #selector(self.orderBytype(_:)), for: .touchUpInside)
        self.lab_online.snp.makeConstraints { (make) in
            make.width.equalTo((width-150)/6)
            make.height.equalTo(30)
            make.top.equalTo(self.lab_line.snp.bottom).offset(3)
            make.left.equalTo(self.btn_stuNum.snp.right)
        }
        self.lab_offline.snp.makeConstraints { (make) in
            make.width.equalTo((width-150)/6)
            make.height.equalTo(30)
            make.top.equalTo(self.lab_line.snp.bottom).offset(3)
            make.left.equalTo(self.lab_online.snp.right)
        }
        self.lab_homework.snp.makeConstraints { (make) in
            make.width.equalTo((width-150)/6)
            make.height.equalTo(30)
            make.top.equalTo(self.lab_line.snp.bottom).offset(3)
            make.left.equalTo(self.lab_offline.snp.right)
        }
        self.lab_exam.snp.makeConstraints { (make) in
            make.width.equalTo((width-150)/6)
            make.height.equalTo(30)
            make.top.equalTo(self.lab_line.snp.bottom).offset(3)
            make.left.equalTo(self.lab_homework.snp.right)
        }
       
    
        self.lab_gradeScore.snp.makeConstraints { (make) in
            make.width.equalTo((width-150)/6)
            make.height.equalTo(30)
            make.top.equalTo(self.lab_line.snp.bottom).offset(3)
            make.left.equalTo(self.lab_exam.snp.right)
        }
        self.lab_totalScore.snp.makeConstraints { (make) in
            make.width.equalTo((width-150)/6)
            make.height.equalTo(30)
            make.top.equalTo(self.lab_line.snp.bottom).offset(3)
            make.left.equalTo(self.lab_gradeScore.snp.right)
        }
    }
    func setTableViewUI(){
        //创建表视图
        self.tableView = UITableView.init(frame: CGRect(x:0, y:100, width:UIScreen.main.bounds.width, height:UIScreen.main.bounds.height-130));
        
        self.tableView.delegate = self;
        self.tableView.dataSource = self;
        self.tableView.isHidden = true
        //创建一个重用的单元格
        self.tableView.register(stuGradeTableViewCell.self, forCellReuseIdentifier: "stuGradeTableViewCell")
        self.tableView.tableFooterView = UIView(frame:CGRect.zero)//除去多余的cell
        self.tableView.separatorInset = UIEdgeInsets.zero;
        self.tableView.layoutMargins = UIEdgeInsets.zero;
        
        self.tableView.tableFooterView = UIView.init(frame: CGRect.zero)
        
        if #available(iOS 9.0, *) {
            self.tableView.cellLayoutMarginsFollowReadableWidth = false
        } else {
            
        }
        //rowHeight属性设置为UITableViewAutomaticDimension
        self.tableView.rowHeight = UITableViewAutomaticDimension;
        self.tableView.backgroundColor = UIColor.colorWithHex(hexColor: 0xf2f2f2)
        self.view.addSubview(self.tableView);
    }
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat
    {
        return 40;
    }
    

    //返回表格行数（也就是返回控件数）
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return self.selStuInfos.count;
    }
    //创建各单元显示内容(创建参数indexPath指定的单元）
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath)
        -> UITableViewCell {
            let cell:stuGradeTableViewCell = tableView.dequeueReusableCell(withIdentifier: "stuGradeTableViewCell") as! stuGradeTableViewCell

            let json = self.selStuInfos[indexPath.row];
            cell.lab_stuName.text = json.stuName
            cell.lab_stuNum.text = json.stuNo
            cell.lab_online.text  = json.onlineScore
            cell.lab_offline.text  = json.offLineScore
            cell.lab_homework.text = json.homeworkScore
            cell.lab_exam.text = json.examScore
            cell.lab_gradeScore.text = json.statisScore.description
            cell.lab_totalScore.text = json.totalScore.description
            return cell
    }
    //点击
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        
        tableView .deselectRow(at: indexPath, animated: true)
        let json = self.selStuInfos[indexPath.row];
        let vc = reultsAnalysisListView()
            vc.courseOpenId = self.courseOpenId
            vc.openClassId = self.openClassId
            vc.stuId = json.stuId
            self.isPused = true
        self.navigationController?.pushViewController(vc, animated: true)
    }

    //键盘处理
    func searchBarShouldBeginEditing(_ searchBar: UISearchBar) -> Bool {
        searchBar.inputAccessoryView = toolBar
        return true
    }
    
    @objc func DoneClick(){
        self.view.endEditing(true)
    }
    


    override func viewWillDisappear(_ animated: Bool) {
        let appDelegate = UIApplication.shared.delegate as! AppDelegate
        if(!self.isPused){
            appDelegate.allowRotation = true
            appDelegate.isEffective = true
            let value = UIInterfaceOrientation.portrait.rawValue
            
            UIDevice.current.setValue(value, forKey: "orientation")
        }
        self.isPused = false
    }
    func searchBar(_ searchBar: UISearchBar, textDidChange searchText: String) {
        // 没有搜索内容时显示全部组件
        if searchText == "" {
            self.selStuInfos = self.reservedInfo
        }
        else { // 匹配用户输入内容(不区分大小写)
            self.selStuInfos = []
            for stu in self.reservedInfo {
                if (stu.stuName.lowercased().contains(searchText.lowercased()) || stu.stuNo.lowercased().contains(searchText.lowercased())){
                    self.selStuInfos.append(stu)
                }
            }
        }
        // 刷新Table View显示
        self.tableView.reloadData()
    }
    
    var toolBar = UIToolbar();
    lazy var  width :CGFloat  = {
        let  w = UIScreen.main.bounds.width

       return w
    }()
    lazy var searchBar : UISearchBar = {
        let search = UISearchBar()
        search.tintColor = UIColor.bg
        search.setBackgroundImage(UIImage(), for: .any, barMetrics: .default)
        search.placeholder = "请输入姓名和学号搜索"
        search.showsScopeBar = true
        return search
    }()
    lazy var lab_line : UILabel = {
        let lab = UILabel()
        lab.backgroundColor = UIColor.colorWithHex(hexColor: 0xf1f1f1)
        return lab
    }()
    lazy var btn_stuName : UIButton = {
        let btn = UIButton()
        btn.setTitle("\u{e6e6}成员", for: .normal)
        btn.setTitle("\u{e6e3}成员", for: .selected)
        btn.setTitleColor(UIColor.gray, for: .normal)
        btn.titleLabel?.numberOfLines = 2
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 14)
        btn.contentMode = .center
        btn.tag = 1
        return btn
    }()
    lazy var btn_stuNum : UIButton = {
        let btn = UIButton()
        btn.setTitle("\u{e6e6}学号", for: .normal)
        btn.setTitle("\u{e6e3}学号", for: .selected)
        btn.setTitleColor(UIColor.gray, for: .normal)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 14)
        btn.titleLabel?.numberOfLines = 2
        btn.contentMode = .center
        btn.tag = 2
        return btn
    }()
    lazy var lab_online :UILabel = {
        let lab = UILabel()
        lab.text = "线上()"
        lab.textColor = UIColor.gray
        lab.textAlignment = .center
        lab.numberOfLines = 2
        lab.font = UIFont.init(name: "iconfont", size: 14)
        return lab
    }()
    lazy var lab_offline :UILabel = {
        let lab = UILabel()
        lab.text = "线下()"
        lab.textColor = UIColor.gray
        lab.textAlignment = .center
        lab.numberOfLines = 2
        lab.font = UIFont.init(name: "iconfont", size: 14)
        return lab
    }()
    lazy var lab_homework :UILabel = {
        let lab = UILabel()
        lab.text = "作业()"
        lab.textColor = UIColor.gray
        lab.textAlignment = .center
        lab.numberOfLines = 2
        lab.font = UIFont.init(name: "iconfont", size: 14)
        return lab
    }()
    lazy var lab_exam :UILabel = {
        let lab = UILabel()
        lab.text = "考试()"
        lab.textColor = UIColor.gray
        lab.textAlignment = .center
        lab.numberOfLines = 2
        lab.font = UIFont.init(name: "iconfont", size: 14)
        return lab
    }()
 
    lazy var lab_gradeScore :UILabel = {
        let lab = UILabel()
        lab.text = "统计分"
        lab.textColor = UIColor.gray
        lab.textAlignment = .center
        lab.font = UIFont.init(name: "iconfont", size: 14)
        return lab
    }()
    lazy var lab_totalScore :UILabel = {
        let lab = UILabel()
        lab.text = "最终分"
        lab.textColor = UIColor.gray
        lab.textAlignment = .center
        lab.font = UIFont.init(name: "iconfont", size: 14)
        return lab
    }()
    lazy var list :NSArray = {
        return []
    }()
    var selStuInfos = [StuInfo]()
    var reservedInfo = [StuInfo]()
    lazy var openClassId :String = {return ""}()
    lazy var courseOpenId :String = {return ""}()

    fileprivate lazy var isPused :Bool = {return false}()
    
}
struct  StuInfo {
    let stuId:String
    let stuName:String
    let stuNo:String
    let homeworkScore:String
    let examScore:String
    let onlineScore:String
    let offLineScore:String
    let groupTaskScore:String
    let statisScore:Double
    let totalScore:Double
}
