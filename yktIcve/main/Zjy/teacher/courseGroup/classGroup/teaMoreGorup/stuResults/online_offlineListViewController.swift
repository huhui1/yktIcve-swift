//
//  getStuScoreDetail.swift
//  云课堂-职教云
//
//  Created by zqy on 2018/3/26.
//  Copyright © 2018年 zqy. All rights reserved.
//

import Foundation
import SwiftyJSON
import Alamofire

extension online_offlineListView{
    func getStuScoreDetail(){
        XLBallLoading.show(in: self.view)
        let dict = ["courseOpenId":self.courseOpenId,
                    "openClassId":self.openClassId,
                    "stuId":self.stuId,
                    "state":1] as [String : Any]
        Alamofire.request(appAPI.AssistTeacher_getStuScoreDetail, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if(json["code"]>0){
                    self.onlinejson = json
                    self.setonlineData()
                }else{
                    ZKProgressHUD.showMessage(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showMessage("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
        
       let dicts = ["courseOpenId":self.courseOpenId,
                    "openClassId":self.openClassId,
                    "stuId":self.stuId,
                    "state":2] as [String : Any]
        Alamofire.request(appAPI.AssistTeacher_getStuScoreDetail, method: .post, parameters: dicts, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if(json["code"]>0){
                    self.offlinejson = json
                    self.setofflineData()
                }else{
                    ZKProgressHUD.showMessage(json["msg"].stringValue);
                }
                
            }else{
                ZKProgressHUD.showMessage("网络环境异常请稍后再试！");
            }
        }
        
    }
    func setonlineData(){
//        "learningTime": "20秒",
//        "ProcessTimeLong": "20秒",
//        "HomeworkTimeLong": "8分47秒",
//        "OnlineExamTimeLong": "5分17秒",
        lab_learningprocess.text = "学习进度(\(onlinejson["data"]["studyProgressPercent"])%)"
        lab_learningtime.text = "学习时长(\(onlinejson["data"]["studyTimePercent"])%)"
        lab_Number.text = "发帖数量"
//        (\(onlinejson["data"]["viewDocPercent"])%)
        lab_learningscore.text = "得分"
        progressBar.progress = Float(onlinejson["data"]["process"].float!/100)
        progresstext.text = "\(onlinejson["data"]["process"].intValue)%"
        learningtime.text = onlinejson["data"]["learningTime"].stringValue
        Number.text = "\(onlinejson["data"]["postCount"].intValue)"
        learningscore.text = "\(onlinejson["stuScoreInfo"]["onLineScore"].floatValue)"
        lab_levaluation.text = "评价(\(onlinejson["data"]["commentPercent"].intValue)%)"
        lab_Questionandanswer.text = "问答(\(onlinejson["data"]["askAnswerPercent"].intValue)%)"
        lab_notes.text = "笔记(\(onlinejson["data"]["notePercent"].intValue)%)"
        lab_Errorcorrection.text = "纠错(\(onlinejson["data"]["correctErrorPercent"].intValue)%)"
        levaluation.text = "\(onlinejson["data"]["commentCount"].intValue)"
        Questionandanswer.text = "\(onlinejson["data"]["askAnswerCount"].intValue)"
        notes.text = "\(onlinejson["data"]["noteCount"].intValue)"
        Errorcorrection.text = "\(onlinejson["data"]["errorCount"].intValue)"
    }
    func setofflineData(){
        lab_attendance.text = "考勤(\(offlinejson["data"]["signPercent"].intValue)%)"
        lab_takepartin.text = "参与(\(offlinejson["data"]["attendPercent"].intValue)%)"
        lab_Classperformancescore.text = "课堂表现分(\(offlinejson["data"]["classPerforPercent"].intValue)%)"
        lab_Testaverage.text =  "测验平均分(\(offlinejson["data"]["classPerforPercent"].intValue)%)"
        lab_score.text = "得分"
        attendance.text = "\(offlinejson["data"]["stuSignCount"].intValue)/\(offlinejson["data"]["signCount"].intValue)"
        takepartin.text = "\(offlinejson["data"]["attendCount"].intValue)"
        Classperformancescore.text = "\(offlinejson["data"]["perforScore"].floatValue)"
        Testaverage.text = "\(offlinejson["data"]["faceteachTestScore"].floatValue)"
        score.text = "\(offlinejson["stuScoreInfo"]["offLineScore"].floatValue)"
    }
    
    
    
}
