//
//  stuMemberView.swift
//  云课堂-职教云
//
//  Created by cc on 2018/5/22.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import SwiftyJSON

class stuMemberView: UIViewController,UISearchBarDelegate,UITableViewDelegate,UITableViewDataSource{
    
    override func loadView() {
        super.loadView()
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.title = "学生管理"
        self.view.backgroundColor = UIColor.white
        self.headView()
        self.getMemberList()
        let item = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = item
    }
    
    

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    func settableUI(){
        self.tableView = UITableView.init(frame:  CGRect(x:0, y:55, width:self.view.bounds.width, height:self.view.bounds.height - 55))
        self.tableView.register(stuMemberTableViewCell.self, forCellReuseIdentifier: "SwiftCell");
        self.tableView.delegate = self;
        self.tableView.dataSource = self;
        self.tableView.separatorInset = UIEdgeInsets.zero;
        self.tableView.layoutMargins = UIEdgeInsets.zero;
        // 设置索引值颜色
        self.tableView.sectionIndexColor = UIColor.gray
        // 设置索引的背景颜色
        self.tableView.sectionIndexBackgroundColor = UIColor.colorWithHex(hexColor: 0xf2f2f2)
       
        
        if #available(iOS 9.0, *) {
            self.tableView.cellLayoutMarginsFollowReadableWidth = false
        } else {
            // Fallback on earlier versions
        }
        self.view.addSubview(self.tableView);
        
        
        self.footView.frame.size = CGSize.init(width: width, height: 60)
        self.lab_memberCount.frame.size = CGSize.init(width: width, height: 30)
        self.lab_memberCount.center = self.footView.center
        self.lab_memberCount.text = "共计学生\(self.list.count)位"
        self.footView.addSubview(self.lab_memberCount)
        self.tableView.tableFooterView = self.footView
       
    }
    
    func headView(){
        //键盘
        toolBar = common.share.AddToolKeyboardDoneBar()
        let doneButton = UIBarButtonItem(title: "确定", style: .plain, target: self, action: #selector(self.DoneClick));
        let spaceButton = UIBarButtonItem(barButtonSystemItem: .flexibleSpace, target: nil, action: nil)
        toolBar.setItems([spaceButton,doneButton], animated: false);
        
        self.view.addSubview(self.searchBar)
        self.searchBar.snp.makeConstraints {(make) in
            make.width.equalTo(width)
            make.height.equalTo(45)
            make.top.equalTo(0)
            make.left.equalTo(0)
        }
        self.searchBar.delegate = self
    }
    
    //实现索引数据源代理方法
    func sectionIndexTitles(for tableView: UITableView) -> [String]? {
        return adHeaders
    }
    //点击索引，移动TableView的组位置
    func tableView(_ tableView: UITableView,
                   sectionForSectionIndexTitle title: String, at index: Int) -> Int {
        var tpIndex:Int = 0
        //遍历索引值
        for character in Headers{
            //判断索引值和组名称相等，返回组坐标
            
            if character == title{
                return tpIndex
            }
            tpIndex += 1
        }
        return 0
    }
    //自定义分区头部视图
    func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {
        let headerView = UIView()
        headerView.backgroundColor = UIColor.colorWithHex(hexColor: 0xF0F0F0)
        let titleLabel = UILabel()
        titleLabel.text = self.Headers[section]
        titleLabel.textColor = UIColor.black
        titleLabel.sizeToFit()
        titleLabel.center = CGPoint(x: 10, y: 15)
        titleLabel.font = UIFont.init(name: "HelveticaNeue-Light", size: 14)
        headerView.addSubview(titleLabel)
        return headerView
    }
    
    //返回分区头部高度
    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        return 30
    }
    //设置分区数
    func numberOfSections(in tableView: UITableView) -> Int {
        // #warning Incomplete implementation, return the number of sections
        return Headers.count
    }
    //返回表格行数
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        // #warning Incomplete implementation, return the number of rows
        self.memberlist[self.Headers[section]] = self.getListByLetter(letter: self.Headers[section])
        return self.getListByLetter(letter: self.Headers[section]).count
    }
    // UITableViewDataSource协议中的方法，该方法的返回值决定指定分区的头部
    func tableView(_ tableView: UITableView, titleForHeaderInSection
        section: Int) -> String? {
        var headers =  self.Headers
        return headers[section]
    }
    
//    //设置分组尾的高度(将分组尾的高度设置为 5，消除分组尾空间)
//    func tableView(_ tableView: UITableView, heightForFooterInSection section: Int)
//        -> CGFloat {
//            return 0
//    }
//    //将分组为设置为一个空的View（否则iOS11系统下光设个高度没用）
//    func tableView(_ tableView: UITableView, viewForFooterInSection section: Int)
//        -> UIView? {
//            let v = UIView()
//
//            return v
//    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 60
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell:stuMemberTableViewCell = tableView.dequeueReusableCell(withIdentifier: "SwiftCell", for: indexPath) as! stuMemberTableViewCell

        
        let a = self.memberlist[self.Headers[indexPath.section]]![indexPath.row]
        //去除点击cell变灰
        cell.selectionStyle = UITableViewCellSelectionStyle.none
        cell.lab_Name.text = a.name
        cell.lab_Num.text = a.stuNO
        common.share.setSDImg(str: a.imgurl, imgview: cell.image_head)
        cell.lab_qq.attributedText = shezhi(str: "\u{e728} \(a.qq)", colorStr: 0x27BE71)
        cell.lab_phone.attributedText = shezhi(str: "\u{e719} \(a.tel)", colorStr: 0x27BE71)
        
        return cell
    }
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        let data = self.memberlist[self.Headers[indexPath.section]]![indexPath.row]
        let vc = stuMemberDetailsView()
        vc.stuInfo = data
        self.navigationController?.pushViewController(vc, animated: true)
    }
    
    
    //根据汉子获取首字母
    func getLetter(strInput:String?) -> String {
        
        if strInput != nil && strInput != "" {
            var ms:NSMutableString? = NSMutableString.init(string: strInput!)
            
            CFStringTransform(ms, UnsafeMutablePointer.init(bitPattern: 0), kCFStringTransformMandarinLatin, false)
            CFStringTransform(ms, UnsafeMutablePointer.init(bitPattern: 0), kCFStringTransformStripDiacritics, false)
            
            var pyArr:[String]? = ms?.components(separatedBy: " ")
            if pyArr != nil && (pyArr?.count)! > 0 {
              
                let strResult = (pyArr![0] as NSString).substring(to: 1)
                //数字
                let pattern = "^[0-9]*$"
                //替换后的
                let str = strResult.pregReplace(pattern: pattern, with: "#")
                return str.uppercased()
            }
            ms = nil
            pyArr = nil
            
        }
        return strInput!;
    }
    //    字体图标
    func shezhi(str:String, colorStr:Int64) -> NSAttributedString{
        let attributeString = NSMutableAttributedString(string:str)
        attributeString.addAttribute(NSAttributedStringKey.foregroundColor, value: UIColor.colorWithHex(hexColor: colorStr),
                                     range: NSMakeRange(0,1))
        attributeString.addAttribute(NSAttributedStringKey.backgroundColor, value: UIColor.white, range: NSMakeRange(0,1))
        attributeString.addAttribute(NSAttributedStringKey.font, value: UIFont.init(name: "iconfont", size: 13)!, range: NSMakeRange(0,1))
        return attributeString
    }
    
    func getListByLetter (letter:String) -> Array<stuBaseInfo>{
        var s = [stuBaseInfo]()
        for i in self.stuMemberList {
            if i.letter == letter{
                s.append(i)
            }
        }
        print("========\(s)")
        return s
    }
    //键盘
    func searchBarShouldBeginEditing(_ searchBar: UISearchBar) -> Bool {
        searchBar.inputAccessoryView = toolBar;
        return true
    }
    @objc func DoneClick(){
        self.view.endEditing(true)
    }
    
    let width = UIScreen.main.bounds.width
    let height = UIScreen.main.bounds.height
    
    var tableView :UITableView!
    var adHeaders:[String] = ["#","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]
    var Headers:[String] = []
    
    lazy var searchBar :UISearchBar  = {
        let search = UISearchBar()
        search.barTintColor = UIColor.colorWithHex(hexColor: 0xf2f2f2)
        search.tintColor = UIColor.bg
        search.placeholder = "输入姓名或学号进行查询"
        search.layer.borderWidth = 1
        search.layer.borderColor = UIColor.white.cgColor
        return search
    }()
    lazy var footView:UIView = {
        let view = UIView()
        view.backgroundColor = UIColor.colorWithHex(hexColor: 0xF0F0F0)
        return view
    }()
    lazy var lab_memberCount : UILabel = {
        let lab = UILabel()
        lab.backgroundColor = UIColor.colorWithHex(hexColor: 0xF0F0F0)
        lab.font = UIFont.init(name: "HelveticaNeue-Light", size: 16)
        lab.textColor = UIColor.colorWithHex(hexColor: 0x8F8F8F)
        lab.textAlignment = .center
        return lab
    }()
    
    lazy var openClassId :String = {
        return "";
    }()
    lazy var list : NSArray = []
    var selStuInfos = [stuBaseInfo]()
     lazy var stuMemberList = [stuBaseInfo]()
     lazy var MemberList = [stuBaseInfo]()
     lazy var memberlist = Dictionary<String,Array<stuBaseInfo>>()
    var toolBar = UIToolbar();
}


struct stuBaseInfo{
    let id:String
    let name:String
    let tel:String
    let qq:String
    let imgurl:String
    let stuNO:String
    var letter :String
}

