//
//  classNoticeView.swift
//  云课堂2
//
//  Created by cc on 2018/6/22.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SwiftyJSON

class classNoticeView: UIViewController,UITableViewDelegate,UITableViewDataSource {

    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.white
        self.title = "公 告"
        self.setTableUI()
        self.getData(isRefresh: true)
        //下拉刷新相关设置,使用闭包Block
        self.tableView.mj_header = MJRefreshNormalHeader(refreshingBlock: {
            self.classNoticeList = []
            //重现生成数据
            self.getData(isRefresh: false)
        })
        if isStu == 0{
            let Item = UIBarButtonItem.init(title: "新建", style: UIBarButtonItemStyle.plain, target: self, action: #selector(self.addNotice));
            self.navigationItem.rightBarButtonItem = Item;
        }
        
        let item = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = item
//        self.navigationController?.navigationBar.isTranslucent = false;
        // Do any additional setup after loading the view.
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    func setTableUI(){
        var ht = 0
        if common.share.isX(){
            ht = 30
        }
        self.tableView = UITableView.init(frame:  CGRect(x:0, y:0, width:self.view.bounds.width, height:self.view.bounds.height - 70 - CGFloat(ht)))
        self.tableView.register(classNoticeTableViewCell.self, forCellReuseIdentifier: "SwiftCell")
        self.tableView.delegate = self;
        self.tableView.dataSource = self;
        // 设置分割线的样式为None.
        self.tableView.separatorStyle = UITableViewCellSeparatorStyle.none
        self.tableView.tableFooterView = UIView(frame:CGRect.zero)//除去多余的cell
        self.tableView.separatorInset = UIEdgeInsets.zero;
        self.tableView.layoutMargins = UIEdgeInsets.zero;
        
        
        if #available(iOS 9.0, *) {
            self.tableView.cellLayoutMarginsFollowReadableWidth = false
        } else {
            // Fallback on earlier versions
        }
        self.view.addSubview(self.tableView);
        
    }
    func numberOfSections(in tableView: UITableView) -> Int {
        // #warning Incomplete implementation, return the number of sections
        return 1
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        // #warning Incomplete implementation, return the number of rows
        return self.classNoticeList.count
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 140
    }
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell:classNoticeTableViewCell = tableView.dequeueReusableCell(withIdentifier: "SwiftCell", for: indexPath) as! classNoticeTableViewCell
        let data = self.classNoticeList[indexPath.row]
        cell.setCell(data: data)
        //去除点击cell变灰
        cell.selectionStyle = UITableViewCellSelectionStyle.none
        return cell
    }
    //点击
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        let model = self.classNoticeList[indexPath.row]
        let vc = classNoticeDetailsView()
        vc.Noticemodel = model
        vc.openClassId = self.openClassId
        vc.courseOpenId = self.courseOpenId
        vc.lookNoticeListClosure = { () in
            self.tableView.reloadData()
        }
        self.navigationController?.pushViewController(vc, animated: true)
    }
    
    //新建消息公告
    @objc func addNotice(){
        let vc = createnoticeView()
        vc.courseOpenId = self.courseOpenId
        vc.openClassId = self.openClassId
        vc.reloadNoticeListClosure = { () in
            self.classNoticeList.removeAll()
            self.getData(isRefresh:false)
        }
        self.navigationController?.pushViewController(vc, animated: true)
    }
    
    //返回编辑类型，滑动删除
    
    func tableView(_ tableView: UITableView, editingStyleForRowAt indexPath: IndexPath) -> UITableViewCellEditingStyle {
        
        if isStu == 1{
             return UITableViewCellEditingStyle.none
        }else{
            return UITableViewCellEditingStyle.delete
        }
        
    }
    
    //在这里修改删除按钮的文字
    
    func tableView(_ tableView: UITableView, titleForDeleteConfirmationButtonForRowAt indexPath: IndexPath) -> String? {
        
        return "删除"
        
    }
    
    //点击删除按钮的响应方法，在这里处理删除的逻辑
    
    func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {
        
        if editingStyle == UITableViewCellEditingStyle.delete {
            
            //删除数据源当前的数据
            
            let alertController = UIAlertController(title: "提示",
                                                    message:"是否删除本条公告?", preferredStyle: .alert)
            let cancelAction = UIAlertAction(title: "取消", style: .cancel, handler: nil)
            let okAction = UIAlertAction(title: "确定", style:.default, handler: {
                action in
                self.delnotice(Id: self.classNoticeList[indexPath.row].Id, tableView, forRowAt: indexPath)
            })
            alertController.addAction(cancelAction)
            alertController.addAction(okAction)
            
            self.present(alertController, animated: true, completion: nil)
            
        }
        
    }
    
    var tableView : UITableView!
    var isStu = 0
    lazy var openClassId :String = {
        return "";
    }()
    lazy var courseOpenId :String = {
        return "";
    }()
    var classNoticeList = [classNoticeModel]()
    
}
