//
//  createnoticeView.swift
//  云课堂-职教云
//
//  Created by cc on 2018/3/8.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import SwiftyJSON

class createnoticeView: UIViewController,UIImagePickerControllerDelegate,UINavigationControllerDelegate,UITextViewDelegate,UITextFieldDelegate {
    let width = UIScreen.main.bounds.width;
    
    //用来放置各个图片单元
    var collectionView:UICollectionView!
    
    //collectionView的布局
    var collectionViewLayout: UICollectionViewFlowLayout!
    
    var imgList = [UploadDocModel]()
    let maxImgCount = 9
    
    var reloadNoticeListClosure :(() ->Void)?
    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.colorWithHex(hexColor: 0xf1f1f1)
        self.title = "添加公告";
        self.contenText.delegate = self
        self.discussTitleText.delegate = self
        self.setUI()
        
        if(self.imgList.count < self.maxImgCount){
            let  m = UploadDocModel.init(data: JSON(), img:UIImage.init(named: "scancode_photo")!)
            m.isAdd = true
            self.imgList.insert(m, at: 0)
        }
        self.setUICollectionView()
    }
    
    func  setUI(){
        //键盘处理
        toolBar = common.share.AddToolKeyboardDoneBar()
        let doneButton = UIBarButtonItem(title: "确定", style: .plain, target: self, action: #selector(self.DoneClick));
        let spaceButton = UIBarButtonItem(barButtonSystemItem: .flexibleSpace, target: nil, action: nil)
        toolBar.setItems([spaceButton,doneButton], animated: false);
        
        self.view.addSubview(discussTitleText)
        discussTitleText.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.left.equalTo(0)
            make.top.equalTo(5)
            make.height.equalTo(40)
        }

        self.view.addSubview(msglable)
        msglable.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.top.equalTo(discussTitleText.snp.bottom)
            make.height.equalTo(40)
            make.left.equalTo(0)
        }
        msglable.text = "    最多可输入300字"

        self.view.addSubview(contenText)
        contenText.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(200)
            make.left.equalTo(0)
            make.top.equalTo(msglable.snp.bottom)
        }
        self.view.addSubview(self.saveBtn)
        let HX = common.share.returnSafeAreaLineHeight()
        self.saveBtn.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(45)
            make.left.equalTo(0)
            make.bottom.equalTo(self.view.snp.bottom).offset(HX)
        }
        
    }
    //字数限制
    func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String) -> Bool {
        if range.location > 50{
            ZKProgressHUD.showMessage("最多输入50字")
            return false
        }
        return true
    }
    //字数限制
    func textView(_ textView: UITextView, shouldChangeTextIn range: NSRange, replacementText text: String) -> Bool {
        if range.location >= 300{
            ZKProgressHUD.showMessage("最多输入300字")
            return false
        }
        return true
    }
    //键盘处理
    func textViewShouldBeginEditing(_ textView: UITextView) -> Bool {
        textView.inputAccessoryView = toolBar;
        if(textView.tag == 2){
            if(!self.isup){
                common.share.animateViewMoving(up: true, moveValue: 80, view: self.view)
            }
            self.isup = true
        }
        return true
    }
    func textFieldShouldBeginEditing(_ textField: UITextField) -> Bool {
        textField.inputAccessoryView = toolBar;
        return true
    }
    @objc func DoneClick(){
        self.view.endEditing(true)
        if(self.isup){
            common.share.animateViewMoving(up: false, moveValue: 80, view: self.view)
        }
        self.isup = false
        
    }
    //iPad键盘收回
    func textViewShouldEndEditing(_ textView: UITextView) -> Bool {
        textView.resignFirstResponder()
        if(textView.tag == 2){
            if(self.isup){
                common.share.animateViewMoving(up: false, moveValue: 80, view: self.view)
            }
            self.isup = false
        }
        return true 
    }
    
    lazy var contenText : UITextView = {
        let text = UITextView();
        text.backgroundColor = UIColor.white
        text.font =  UIFont.italicSystemFont(ofSize: 16)
        text.tag = 2
        return text;
    }()
    
    lazy var discussTitleText:UITextField = {
        let text = UITextField()
        text.setValue(NSNumber(value:10), forKey:"paddingLeft")
        text.font = UIFont.italicSystemFont(ofSize: 17)
        text.backgroundColor = UIColor.white
        text.placeholder = "  请输入标题(最多输入50字)"
        text.clearButtonMode = .unlessEditing
        return text
    }()
    lazy var msglable : UILabel = {
       let lab = UILabel()
        lab.font = UIFont.init(name: "iconfont", size: 15)
        return lab;
    }()
fileprivate    lazy  var saveBtn : UIButton = {
        let btn = UIButton()
        btn.contentMode = .center
        btn.setTitleColor(UIColor.white, for: .normal)
        btn.setTitle("添加", for: .normal)
        btn.backgroundColor = UIColor.colorWithHex(hexColor: 0x23c397)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 16)
        btn.tag = 11;
        btn.addTarget(self, action: #selector(self.addNotice(_:)), for: .touchUpInside)
        return btn ;
        
    }()
    
   
    lazy var noticeId : String = {
        return "";
    }()
    
    lazy var courseOpenId :String = {
        
        return "";
    }()
    
    lazy var openClassId :String = {
        
        return "";
    }()
    
    lazy var uploadUrl : String = {
        
        return ""
    }()

    var toolBar = UIToolbar();
    lazy var isup :Bool = {
        return false
    }()
}


extension createnoticeView:UICollectionViewDataSource,UICollectionViewDelegate{
    func setUICollectionView(){
        
        //collectionView尺寸样式设置
        collectionViewLayout = UICollectionViewFlowLayout()
        //图片间隙
        collectionViewLayout.minimumLineSpacing = 4
        collectionViewLayout.minimumInteritemSpacing = 4
        
        //横向滚动
        collectionViewLayout.scrollDirection = .vertical
        //尺寸
        let hx = (UIScreen.main.bounds.height - 400) > 310 ? 310: (UIScreen.main.bounds.height - 400)
//        let sizeh = (hx / 3) > 100 ?100: (hx / 3)
        
        collectionViewLayout.itemSize = CGSize.init(width:60, height:60)
        
        let c = CGRect.init(x: 20, y: 290, width:190, height: hx)
        
        //collectionView初始化
        collectionView = UICollectionView(frame:c ,
                                          collectionViewLayout: collectionViewLayout)
        collectionView.backgroundColor = UIColor.white
        
        collectionView.delegate = self
        collectionView.dataSource = self
        collectionView.isPagingEnabled = true
        collectionView.backgroundColor = UIColor.clear
        self.view.addSubview(collectionView)
    }
    
    //collectionView单元格创建
    func collectionView(_ collectionView: UICollectionView,
                        cellForItemAt indexPath: IndexPath)
        -> UICollectionViewCell {
            let d = Date()
            let identifier = "cell\(d.timeIntervalSince1970)"
            //注册重用的单元格
            let cellXIB = UINib.init(nibName: "ZQUICollectionViewCell_Img", bundle: Bundle.main)
            collectionView.register(cellXIB, forCellWithReuseIdentifier: identifier)
            let cell = collectionView.dequeueReusableCell(withReuseIdentifier: identifier,
                                                          for: indexPath) as! ZQUICollectionViewCell_Img
            
            let m = self.imgList[indexPath.row]
            if(self.noticeId.isEmpty){
                cell.setModelByUIImage(Model: m)
            }else{
                cell.setModelByOnline(model: m)
            }
            
            cell.CellBlock = {  () -> Void in
                self.uploadImg()
            }
            
            return cell
    }
    //点击图片
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        let m = self.imgList[indexPath.row]
        
        let vc = uploadImgPreviewView()
        if(m.img.size != CGSize.zero){
            vc.img = m.img
        }else{
            vc.imgurl = m.url
        }
        vc.reloadImglistClosure = {(index) in
            
            
            if(self.imgList.count == self.maxImgCount){
                self.imgList.insert(m, at: 0)
            }
            self.imgList.remove(at: indexPath.row)
            self.collectionView.deleteItems(at: [indexPath])
        }
        vc.modalTransitionStyle = .crossDissolve
        self.present(vc, animated: true, completion: nil)
    }
    
    //collectionView单元格数量
    func collectionView(_ collectionView: UICollectionView,
                        numberOfItemsInSection section: Int) -> Int {
        
        return self.imgList.count
    }
}

