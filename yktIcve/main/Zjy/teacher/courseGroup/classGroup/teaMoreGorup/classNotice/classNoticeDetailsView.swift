//
//  classNoticeDetailsView.swift
//  云课堂2
//
//  Created by 尤增强 on 2018/6/26.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire
class classNoticeDetailsView: UIViewController {
    @IBOutlet weak var lab_title: UILabel!

    @IBOutlet weak var collectionView: UICollectionView!
    @IBOutlet weak var lab_content: UILabel!
    @IBOutlet weak var lab_time: UILabel!
    @IBOutlet weak var contentViewH: NSLayoutConstraint!
    override func viewDidLoad() {
        super.viewDidLoad()
        self.title = "公告详情"
        self.setData()
        // Do any additional setup after loading the view.
    }
    init() {
        super.init(nibName: "classNoticeDetailsView", bundle: nil)
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    fileprivate func setData(){

        self.lab_time.text = Noticemodel?.DateCreated
        self.lab_title.text = Noticemodel!.Title
        self.lab_content.text = Noticemodel!.Content
        self.setCollectionView()
    }

    override  func viewDidLayoutSubviews() {
        self.lab_time.font = UIFont.init(name: "Helvetica-Light", size: 14)
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }


    override func viewDidAppear(_ animated: Bool) {
        self.readNotice()
        print( self.lab_content.frame.origin.y + self.lab_content.frame.height)
       self.contentViewH.constant =  self.lab_content.frame.origin.y + self.lab_content.frame.height + self.collectionView.frame.height
    }

    lazy var openClassId :String = {
        return "";
    }()
    lazy var courseOpenId :String = {
        return "";
    }()
    //    lazy var DocJson : NSDictionary = [:]
    var Noticemodel : classNoticeModel?
    var lookNoticeListClosure :(() ->Void)?

}

extension classNoticeDetailsView:UICollectionViewDelegate,UICollectionViewDataSource{


    func setCollectionView(){
        let cellXIB = UINib.init(nibName: "itemImgCell", bundle: Bundle.main)
        self.collectionView.register(cellXIB, forCellWithReuseIdentifier: "itemImgCell")

        self.collectionView.delegate = self
        self.collectionView.dataSource = self

    }
    func collectionView(_ collectionView: UICollectionView,
                        cellForItemAt indexPath: IndexPath)
        -> UICollectionViewCell {
            let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "itemImgCell",
                                                          for: indexPath) as! itemImgCell

            let m = self.Noticemodel!.DocJson[indexPath.row]
            common.share.setSDImg(str:m["docOssPreview"]!, imgview: cell.thumbnail)
            return cell
    }

    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
         let m = self.Noticemodel!.DocJson[indexPath.row]
         let vc = PicturePreviewView()
         vc.imgurl = m["docOssPreview"]!
         self.navigationController?.pushViewController(vc, animated: true)
    }

    //collectionView单元格数量
    func collectionView(_ collectionView: UICollectionView,
                        numberOfItemsInSection section: Int) -> Int {
        return (Noticemodel?.DocJson.count)!
    }
}

extension classNoticeDetailsView{
    //查看
    func readNotice(){
        let dict = ["courseOpenId":self.courseOpenId,
                    "openClassId":self.openClassId,
                    "userId":Account.defaultAccount.id!,
                    "announcementId":Noticemodel!.Id] as [String : Any]
        Alamofire.request(appAPI.Announcement_lookClassAnnouncement, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    print("查看成功")
                    self.Noticemodel?.IsSee = 1
                    self.lookNoticeListClosure!();
                }else{
                    ZKProgressHUD.showMessage("网络环境异常请稍后再试！");
                }
            }else{
                ZKProgressHUD.showMessage("网络环境异常请稍后再试！");
            }
        }
    }
}
