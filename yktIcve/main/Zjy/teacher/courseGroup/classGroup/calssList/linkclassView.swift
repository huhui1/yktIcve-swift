//
//  linkclassView.swift
//  云课堂2
//
//  Created by 志辉教育 on 2018/6/20.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SwiftyJSON
import SCLAlertView
class linkclassView: UIViewController,UITableViewDelegate,UITableViewDataSource {
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.white
        // Do any additional setup after loading the view.
        self.setUI()
        self.navigationItem.titleView = self.segmented
        segmented.selectedSegmentIndex = 0
        segmented.addTarget(self, action: #selector(self.segmentChange(segmented:)), for: .valueChanged)
        self.getCourseClassList(isRefresh:true)
        //下拉刷新相关设置,使用闭包Block
        self.tableView.mj_header = MJRefreshNormalHeader(refreshingBlock: {
            //重现生成数据
            self.getCourseClassList(isRefresh: false)
        })
       
    }
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    func setUI(){
        self.tableView = UITableView.init(frame:  CGRect(x:0, y:0, width:self.view.bounds.width, height:self.view.bounds.height - 65))
        self.tableView.delegate = self;
        self.tableView.dataSource = self;
        // 设置分割线的样式为None.
        self.tableView.separatorStyle = UITableViewCellSeparatorStyle.none
        self.tableView.tableFooterView = UIView(frame:CGRect.zero)//除去多余的cell
        self.view.addSubview(self.tableView)
    }
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        if self.classState == 1{
            return unGuiDangList.count
        }else{
            return GuiDangList.count
        }
    }
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 110
    }
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let identifier = "classCell"
        self.tableView.register(UINib(nibName:"classCell", bundle:nil),
                                forCellReuseIdentifier:identifier)
        
        let cell:classCell = tableView.dequeueReusableCell(withIdentifier: identifier)
            as! classCell
        cell.selectionStyle = UITableViewCellSelectionStyle.none
        if self.classState == 1{
            let jsondata = self.unGuiDangList[indexPath.row]
            cell.setjson(json: jsondata)
            return cell
        }else{
            let jsondata = self.GuiDangList[indexPath.row]
            cell.setjson(json: jsondata)
            return cell
        }
        
        
    }
    //解决IOS8editActionsForRowAt不响应
    func tableView(_ tableView: UITableView, editingStyleForRowAt indexPath: IndexPath) -> UITableViewCellEditingStyle {
        return UITableViewCellEditingStyle.delete
        
    }
    
    //在这里修改删除按钮的文字
    func tableView(_ tableView: UITableView, titleForDeleteConfirmationButtonForRowAt indexPath: IndexPath) -> String? {
        return ""
        
    }
    //点击删除按钮的响应方法，在这里处理删除的逻辑
    func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {
        
        if editingStyle == UITableViewCellEditingStyle.delete {
            
        }
    }
    
    func tableView(_ tableView: UITableView, editActionsForRowAt indexPath: IndexPath) -> [UITableViewRowAction]? {
        if self.classState == 1{
            let action1=UITableViewRowAction(style: UITableViewRowActionStyle.default, title: "删除"){(action,indexPath)->Void in
                print("点击了删除")
                let m = self.unGuiDangList[indexPath.row]
                if self.isMainTeacher == 1{
                self.deleteOpenClass(openClassId:m["openClassId"].stringValue,index: indexPath.row)
                }else{
                    ZKProgressHUD.showMessage("只有主持老师能删除班级")
                }
            }
            let action2=UITableViewRowAction(style: UITableViewRowActionStyle.normal, title: "编辑"){(action,indexPath)->Void in
                //跳转到编辑
                self.editCourseClass(row:indexPath.row)
            }
            return [action1,action2]
        }else{
            return nil
        }
    }
    
    func tableView(_ tableView: UITableView, canEditRowAt indexPath: IndexPath) -> Bool{
        if self.classState == 1{
            return true
        }else{
            return false
        }
        
    }
   

    func editCourseClass(row:Int){
        let vc = editOpenClassView()
        let data = self.unGuiDangList[row]
        vc.openClassId = data["openClassId"].stringValue
        switch data["openClassType"].intValue {
        case 1:
            vc.openClassType = 1
            print("本校班级")
        case 2:
            vc.openClassType = 2
            print("外校班级")
        case 4:
            vc.openClassType = 4
            print("教师培训")
        default:
            print("点击了编辑")
        }
        vc.courseOpenId = self.courseOpenId
        vc.reloadschoolList = {() in
            //刷新当前List
            self.unGuiDangList = []
            self.getCourseClassList(isRefresh: false)
        }
        self.navigationController?.pushViewController(vc, animated: true);
    }
    
    
    
    //跳转到课堂教学
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        
        let vc = courseTabBerController()
        vc.modalTransitionStyle = .crossDissolve
        if self.classState == 1 {
            let datalist = self.unGuiDangList[indexPath.row]
            if datalist["isMyClass"] == 1{
                let json = self.unGuiDangList[indexPath.row]
                vc.courseKJ.openClassId = json["openClassId"].stringValue
                vc.courseKJ.courseOpenId = self.courseOpenId
                vc.courseKJ.title = "课件"
                vc.face.openClassId = json["openClassId"].stringValue
                vc.face.courseOpenId = self.courseOpenId
                vc.homework.courseOpenId = self.courseOpenId
                vc.homework.openClassId = json["openClassId"].stringValue
                vc.finding.openClassId = json["openClassId"].stringValue
                vc.finding.courseOpenId = self.courseOpenId
                vc.finding.courseName = json["openClassName"].stringValue
                vc.finding.thumbnail = json["coverUrl"].stringValue;
                self.present(vc, animated: true, completion: nil)
            }else{
                //提示修改
                let alertView = SCLAlertView()
                alertView.addButton("确定") {
                    self.editCourseClass(row:indexPath.row)
                }
                alertView.showInfo("温馨提示!", subTitle: "该班级的主持教师并非您本人，您无法进行查看", closeButtonTitle: "取消")
            }
        }else{
//            let json = self.GuiDangList[indexPath.row]
//            vc.face.openClassId = json["openClassId"].stringValue
//            vc.face.courseOpenId = self.courseOpenId
//            vc.homework.courseOpenId = self.courseOpenId
//            vc.homework.openClassId = json["openClassId"].stringValue
//            vc.finding.openClassId = json["openClassId"].stringValue
//            vc.finding.courseOpenId = self.courseOpenId
//            vc.finding.courseName = json["openClassName"].stringValue
//            vc.finding.thumbnail = json["coverUrl"].stringValue;
              ZKProgressHUD.showMessage("课程已归档")
        }
    }
    
    @objc func newClass(){
        self.view.addSubview( self.makeView)
        self.makeView.backgroundColor = UIColor.white
        self.makeView.alpha = 1
        self.makeView.tag = 1001
        let Btn1 = UIButton.init()
        let Btn2 = UIButton.init()
        let Btn3 = UIButton.init()
        let Btncancel = UIButton.init()
        Btn1.tag = 101
        Btn2.tag = 102
        Btn3.tag = 103
        self.makeView.addSubview(Btn1)
        self.makeView.addSubview(Btn2)
        self.makeView.addSubview(Btn3)
        self.makeView.addSubview(Btncancel)
        makeView.snp.makeConstraints { (make) in
            make.width.height.equalTo(width)
            make.top.equalTo(0)
            make.bottom.equalTo(0)
            make.left.equalTo(0)
        }
        Btn1.snp.makeConstraints { (make) in
            make.width.height.equalTo(width)
            make.top.equalTo(40)
            make.height.equalTo(40)
            make.left.equalTo(0)
        }
        Btn2.snp.makeConstraints { (make) in
            make.left.height.width.equalTo(Btn1)
            make.top.equalTo(Btn1.snp.bottom).offset(10)
        }
        Btn3.snp.makeConstraints { (make) in
            make.left.height.width.equalTo(Btn1)
            make.top.equalTo(Btn2.snp.bottom).offset(10)
        }
        Btncancel.snp.makeConstraints { (make) in
            make.left.height.width.equalTo(Btn1)
            make.top.equalTo(Btn3.snp.bottom).offset(10)
        }
        Btn1.setTitle("新建本校班级", for: .normal)
        Btn2.setTitle("新建外校班级", for: .normal)
        Btn3.setTitle("新建培训班级", for: .normal)
        Btncancel.setTitle("取消", for: .normal)
        Btn1.setTitleColor(UIColor.bg, for: .normal)
        Btn2.setTitleColor(UIColor.bg, for: .normal)
        Btn3.setTitleColor(UIColor.bg, for: .normal)
        Btncancel.setTitleColor(UIColor.bg, for: .normal)
        Btn1.addTarget(self, action: #selector(self.addClass), for: .touchUpInside)
        Btn2.addTarget(self, action: #selector(self.addClass), for: .touchUpInside)
        Btn3.addTarget(self, action: #selector(self.addClass), for: .touchUpInside)
        Btncancel.addTarget(self, action: #selector(self.cancel), for: .touchUpInside)
    }
    @objc func addClass(_ btn:UIButton){
        //视图移除
        self.makeView.removeFromSuperview()
        let tag = btn.tag
        let vc = editOpenClassView()
        switch tag {
        case 101:
            vc.openClassType = 1
        case 102:
            vc.openClassType = 2
        case 103:
            vc.openClassType = 4
        default:
            vc.openClassType = 1
        }
        
        vc.courseOpenId = self.courseOpenId
        vc.reloadschoolList = {() in
            self.getCourseClassList(isRefresh:false)
        }
        self.navigationController?.pushViewController(vc, animated: true);
        
    }
    @objc func cancel(){
        self.makeView.removeFromSuperview()
    }
    lazy var isMainTeacher:Int = 0 //"是否为主持老师" 1，是 0，否
    lazy var classState:Int = 1//1：进行中,2：已归档
    lazy var courseOpenId:String = ""
    let width = UIScreen.main.bounds.width
    let segmented = UISegmentedControl(items: ["进行中","已归档"])
    lazy var unGuiDangList : JSON =  {
        return []
    }()
    lazy var GuiDangList : JSON =  {
        return []
    }()
    lazy var makeView:UIView = {
        return UIView.init(frame: self.view.frame)
    }()
    var tableView :UITableView!
}

