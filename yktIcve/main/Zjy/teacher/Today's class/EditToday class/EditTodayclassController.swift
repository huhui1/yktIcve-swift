//
//  EditTodayclassController.swift
//  云课堂2
//
//  Created by 志辉教育 on 2018/6/29.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import Alamofire
import SwiftyJSON
import SCLAlertView

extension EditTodayclassView{
    
    
    func getCourse(){
        let dict = ["userId": Account.defaultAccount.id!];
        Alamofire.request(appAPI.FaceTeach_getFaceCourseList, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    self.CourseList = json["courseList"].arrayValue as NSArray
                    
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }
        
    }
    
    func editFaceInfo(title:String,Address:String,StartTime:String,State:Int){
        
        //        ZKProgressHUD.setAnimationStyle(.chrysanthemum);
        //        ZKProgressHUD.show();
        XLBallLoading.show(in: self.view)
        let dict = ["Id":self.activityId,
                    "CourseOpenId":self.courseOpenId,
                    "CreatorId":Account.defaultAccount.id!,
                    "OpenClassIds":self.openClassIds,
                    "SourceType":3,
                    "IsEvaluation":1,
                    "State":State,
                    "EndTime":"",
                    "Address":Address,
                    "StartTime":StartTime,
                    "ClassSection":self.text_Session.text?.trimmingCharacters(in:.whitespaces) ?? "",
                    "Title":title]
            as [String : Any];
        let newdict = ["data":common.share.getJSONStringFromDictionary(dictionary:dict as NSDictionary)];
        Alamofire.request(appAPI.FaceTeach_addFaceTeach, method: .post, parameters: newdict, encoding: URLEncoding.default).responseJSON { response in
            
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    self.reloadfacelistClosure!(StartTime);
                    ZKProgressHUD.showMessage(json["msg"].stringValue);
                    NotificationCenter.default.removeObserver(self)
                    self.navigationController?.popViewController(animated: true);
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                XLBallLoading.hide(in: self.view)
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
            //            ZKProgressHUD.hide(delay: 0);
        }
    }
    
    func textFieldDidBeginEditing(_ textField: UITextField) {
        self.pickStartDate(self.text_Date);
        self.pickCourse(self.text_CourseName);
    }
    
    // MARK:- Button Done and Cancel
   @objc func doneClick(_ button:UIButton) {
        let formatter = DateFormatter(),
        tag = button.tag;
        //日期样式
        formatter.dateFormat = "yyyy-MM-dd";
        if(tag == 1){
            self.text_Date.text = formatter.string(from: self.datePicker.date);
            self.text_Date.resignFirstResponder();
            if(text_Title.text?.count == 0){
                self.text_Title.text = formatter.string(from: self.datePicker.date) as String
            }
        }else{
            if(self.courseOpenId.isEmpty){
                self.courseOpenName = JSON(self.CourseList)[0]["CourseName"].stringValue;
                self.courseOpenId = JSON(self.CourseList)[0]["Id"].stringValue;
            }
            self.text_CourseName.text = self.courseOpenName;
            self.text_CourseName.resignFirstResponder();
        }
    }
    
   @objc func cancelClick(_ button:UIButton) {
        let tag = button.tag;
        if(tag == 1){
            self.text_Date.resignFirstResponder();
        }else{
            
            self.text_CourseName.resignFirstResponder();
        }
    }
    
    //MARK:- Function of datePicker
    func pickStartDate(_ textField : UITextField){
        
        self.datePicker = UIDatePicker(frame:CGRect(x: 0, y: height-220, width: width, height: 216));
        self.datePicker.locale = Locale(identifier: "zh_CN");
        self.datePicker.backgroundColor = UIColor.white;
        self.datePicker.datePickerMode = UIDatePickerMode.date;
        let dateFormatter = DateFormatter();
        dateFormatter.dateFormat = "yyyy-MM-dd";
        let minDate = dateFormatter.date(from: "2017-01-01");
        datePicker.minimumDate = minDate;
        textField.inputView = self.datePicker;
        // ToolBar
        let toolBar = UIToolbar();
        toolBar.barStyle = .default;
        toolBar.isTranslucent = true;
        toolBar.tintColor = UIColor(red: 92/255, green: 216/255, blue: 255/255, alpha: 1);
        toolBar.sizeToFit();
        
        // Adding Button ToolBar
        let doneButton = UIBarButtonItem(title: "确定", style: .plain, target: self, action: #selector(self.doneClick(_:)));
        doneButton.tag = 1;
        let spaceButton = UIBarButtonItem(barButtonSystemItem: .flexibleSpace, target: nil, action: nil)
        let cancelButton = UIBarButtonItem(title: "取消", style: .plain, target: self, action: #selector(self.cancelClick(_:)));
        cancelButton.tag = 1;
        toolBar.setItems([cancelButton, spaceButton, doneButton], animated: false);
        toolBar.isUserInteractionEnabled = true;
        textField.inputAccessoryView = toolBar;
        
    }
    
    //MARK:- Function of datePicker
    func pickCourse(_ textField : UITextField){
        self.coursePicker = UIPickerView(frame:CGRect(x: 0, y: height-220, width: width, height: 216));
        self.coursePicker.dataSource = self
        self.coursePicker.delegate = self
        self.text_CourseName.inputView = self.coursePicker;
        let toolBar = UIToolbar();
        toolBar.barStyle = .default;
        toolBar.isTranslucent = true;
        toolBar.tintColor = UIColor(red: 92/255, green: 216/255, blue: 255/255, alpha: 1);
        toolBar.sizeToFit();
        
        // Adding Button ToolBar
        let doneButton = UIBarButtonItem(title: "确定", style: .plain, target: self, action: #selector(self.doneClick(_:)));
        doneButton.tag = 2;
        let spaceButton = UIBarButtonItem(barButtonSystemItem: .flexibleSpace, target: nil, action: nil)
        let cancelButton = UIBarButtonItem(title: "取消", style: .plain, target: self, action: #selector(self.cancelClick(_:)));
        cancelButton.tag = 2
        toolBar.setItems([cancelButton, spaceButton, doneButton], animated: false);
        toolBar.isUserInteractionEnabled = true;
        textField.inputAccessoryView = toolBar;
        
        
    }
    
    @objc func tapped(_ button:UIButton){
        let actTitle = self.text_Title.text!.trimmingCharacters(in:.whitespaces);
        let actAddress = self.text_address.text!.trimmingCharacters(in:.whitespaces);
        let startTime = self.text_Date.text!.trimmingCharacters(in: .whitespaces);
        //使用自定义样式的提示框
        let alert = SCLAlertView(appearance: appearance);
        
        //显示提示框（3秒后自定关闭）
        let timeout = SCLAlertView.SCLTimeoutConfiguration(timeoutValue: 2) {
            
        }
        
        
        if(actTitle.isEmpty){
            alert.showWarning("", subTitle: "请输入课堂教学标题", timeout: timeout)
            return;
        }
        //        if(actAddress.isEmpty){
        //            alert.showWarning("", subTitle: "请输入面授地点", timeout: timeout)
        //
        //            return;
        //        }
        
        if(self.openClassIds.isEmpty){
            alert.showWarning("", subTitle: "请选择班级", timeout: timeout)
            return;
        }
        
        self.editFaceInfo(title: actTitle, Address: actAddress, StartTime: startTime, State: button.tag);
        
    }
    
    //设置选择框的列数为3列,继承于UIPickerViewDataSource协议
    func numberOfComponents(in pickerView: UIPickerView) -> Int {
        return 1
    }
    
    //设置选择框的行数为9行，继承于UIPickerViewDataSource协议
    func pickerView(_ pickerView: UIPickerView,
                    numberOfRowsInComponent component: Int) -> Int {
        return self.CourseList.count;
    }
    
    //设置选择框各选项的内容，继承于UIPickerViewDelegate协议
    func pickerView(_ pickerView: UIPickerView, titleForRow row: Int,
                    forComponent component: Int) -> String? {
        let json = JSON(self.CourseList[row]);
        return json["CourseName"].stringValue;
    }
    
    @objc func touch_classLab(sender: UITapGestureRecognizer){
        
        
        if(self.courseOpenId.isEmpty){
            //使用自定义样式的提示框
            let alert = SCLAlertView(appearance: appearance);
            
            //显示提示框（3秒后自定关闭）
            let timeout = SCLAlertView.SCLTimeoutConfiguration(timeoutValue: 2) {
                
            }
            alert.showWarning("", subTitle: "请先选择课程", timeout: timeout)
            return ;
        }
        let vc = selectClassView();
        vc.courseOpenId = self.courseOpenId;
        vc.setOpenClassNmaesClosure = {(openClassIds,openClassNames) in
            self.label_ClassName.text = openClassNames.joined(separator: ",");
            self.openClassIds = openClassIds.joined(separator: ",");

        }
        self.navigationController?.pushViewController(vc, animated: true);
        
    }
    
    func pickerView(_ pickerView: UIPickerView, didSelectRow row: Int, inComponent component: Int) {
        if(self.CourseList.count > 0){
            let json =  JSON(self.CourseList[row]);
            self.courseOpenName = json["CourseName"].stringValue;
            self.courseOpenId = json["Id"].stringValue;
        }
    }
    //    //键盘隐藏
    //    override func touchesEnded(_ touches: Set<UITouch>, with event: UIEvent?) {
    //        text_Title.resignFirstResponder();
    //        text_address.resignFirstResponder();
    //    }
    //
    //    func textFieldShouldReturn(_ textTitle: UITextField) -> Bool {
    //        //收起键盘
    //        text_Title.resignFirstResponder();
    //        text_address.becomeFirstResponder();
    //        return true;
    //    }
    
    
}

