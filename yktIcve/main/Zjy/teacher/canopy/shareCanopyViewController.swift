//
//  shareCanopyViewController.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2017/9/13.
//  Copyright © 2017年 zqy. All rights reserved.
//

import UIKit
import SnapKit
import SCLAlertView

class shareCanopyViewController: UIViewController {
    let width = UIScreen.main.bounds.width;
    let height = UIScreen.main.bounds.height;
    let appDelegate = UIApplication.shared.delegate as! AppDelegate
    var shareurl = "http://a.app.qq.com/o/simple.jsp?pkgname=com.zjy.ykt";
    var shaertitle = "职教云-智慧职教";
    var sharedescription = "职教云-智慧职教是一款移动教学助手。您可以轻松管理自己的课程，发送公告，分享课件，布置批改作业，组织开展课堂教学互动.";
    var IsStatistics = false
    var _tencentOAuth:TencentOAuth!

    override func viewDidLoad() {
        super.viewDidLoad()
         _tencentOAuth = TencentOAuth.init(appId: "1107766898", andDelegate: nil)
        self.modalPresentationStyle = .custom;
        setUI();
        // Do any additional setup after loading the view.
    }

    func setUI(){
        var ht = 0
        if common.share.isX(){
            ht = 30
        }
        
        if IsStatistics{

            self.shareurl = appAPI.personalStatistics + Account.defaultAccount.id! 
            self.shaertitle = "个人统计"
            self.sharedescription = "个人统计是展示老师在职教云2.0中的一些活动信息."
        }
        let shareView = UIView();
        let QQbgView = UIView()
        let QZonebgView = UIView()
        let WinxinbgView = UIView()
        let FriendbgView = UIView()
        shareView.addSubview(QQbgView);
        shareView.addSubview(QZonebgView);
        shareView.addSubview(WinxinbgView);
        shareView.addSubview(FriendbgView);
        
        self.view.addSubview(shareView);
        shareView.backgroundColor = UIColor.white;
        shareView.snp.makeConstraints { (make) in
           make.height.equalTo(200)
           make.width.equalTo(width)
           make.bottom.equalTo(self.view.snp.bottom)
        }
       
        let cancel = UIButton();
        shareView.addSubview(cancel);
        cancel.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(40)
            make.bottom.equalTo(shareView.snp.bottom).offset(-CGFloat(ht))
        }
        cancel.setTitle("取消", for: .normal);
        cancel.titleLabel?.font = UIFont(name: "iconfont", size: 16);
        cancel.setTitleColor(UIColor.gray, for: .normal);
        cancel.contentVerticalAlignment = .center;
        cancel.addTarget(self, action:#selector(tapped(_:)), for:.touchUpInside);
        
        let line = UILabel()
        shareView.addSubview(line)
        line.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(1)
            make.bottom.equalTo(cancel.snp.top)
            make.left.equalTo(0)
        }
        line.backgroundColor = UIColor.colorWithHex(hexColor: 0xf2f2f2)
        
        
        
        QQbgView.snp.makeConstraints{ (make) in
            make.width.equalTo(width/4)
            make.height.equalTo(80)
            make.left.equalTo(0)
            make.top.equalTo(shareView.snp.top)
        }
        
        let QQBtn = UIButton();
        QQbgView.addSubview(QQBtn);
        QQBtn.addTarget(self, action:#selector(tappedQQ(_:)), for:.touchUpInside);
        QQBtn.setTitle("\u{e6d6}", for: .normal);
        QQBtn.setTitleColor(UIColor.white, for: .normal);
        QQBtn.titleLabel?.font = UIFont(name: "iconfont", size: 32);
        QQBtn.layer.masksToBounds = true;
        QQBtn.layer.cornerRadius = 20;
        QQBtn.backgroundColor = UIColor.colorWithHex(hexColor: 0x30bae2);
        QQBtn.snp.makeConstraints { (make) in
            make.width.equalTo(40)
            make.height.equalTo(40)
            make.center.equalTo(QQbgView.snp.center)
        }
        let qqlable = UILabel();
        QQbgView.addSubview(qqlable);
        qqlable.snp.makeConstraints { (make) in
            make.width.equalTo(60)
            make.height.equalTo(12)
            make.centerX.equalTo(QQBtn.snp.centerX)
            make.top.equalTo(QQBtn.snp.bottom).offset(3)
        }
        qqlable.text = "Q   Q";
        qqlable.textAlignment = .center;
        qqlable.textColor = UIColor.gray;
        qqlable.font = UIFont(name: "iconfont", size: 10);
        
        QZonebgView.snp.makeConstraints{ (make) in
            make.width.equalTo(width/4)
            make.height.equalTo(80)
            make.left.equalTo(QQbgView.snp.right)
            make.top.equalTo(shareView.snp.top)
        }
        
        
        let QZoneBtn = UIButton();
        QZoneBtn.addTarget(self, action:#selector(tappedQZone(_:)), for:.touchUpInside);
        QZonebgView.addSubview(QZoneBtn);
        QZoneBtn.setTitle("\u{e6bd}", for: .normal);
        QZoneBtn.setTitleColor(UIColor.white, for: .normal);
        QZoneBtn.titleLabel?.font = UIFont(name: "iconfont", size: 32);
        QZoneBtn.layer.masksToBounds = true;
        QZoneBtn.layer.cornerRadius = 20;
        QZoneBtn.backgroundColor = UIColor.colorWithHex(hexColor: 0xeccc57);
        QZoneBtn.snp.makeConstraints { (make) in
            make.width.equalTo(40)
            make.height.equalTo(40)
            make.center.equalTo(QZonebgView.snp.center)
        }
        let qZonelable = UILabel();
        QZonebgView.addSubview(qZonelable);
        qZonelable.snp.makeConstraints { (make) in
            make.width.equalTo(60)
            make.height.equalTo(12)
            make.centerX.equalTo(QZoneBtn.snp.centerX)
            make.top.equalTo(QZoneBtn.snp.bottom).offset(3)
        }
        qZonelable.text = "QQ空间";
        qZonelable.textAlignment = .center;
        qZonelable.textColor = UIColor.gray;
        qZonelable.font = UIFont(name: "iconfont", size: 10);
        
        WinxinbgView.snp.makeConstraints{ (make) in
            make.width.equalTo(width/4)
            make.height.equalTo(80)
            make.left.equalTo(QZonebgView.snp.right)
            make.top.equalTo(shareView.snp.top)
        }
        
        
        let WinxinBtn = UIButton();
        WinxinBtn.addTarget(self, action:#selector(tappedWeixin(_:)), for:.touchUpInside);
        WinxinbgView.addSubview(WinxinBtn);
        WinxinBtn.setTitle("\u{e6a2}", for: .normal);
        WinxinBtn.setTitleColor(UIColor.white, for: .normal);
        WinxinBtn.titleLabel?.font = UIFont(name: "iconfont", size: 32);
        WinxinBtn.layer.masksToBounds = true;
        WinxinBtn.layer.cornerRadius = 20;
        WinxinBtn.backgroundColor = UIColor.colorWithHex(hexColor: 0x56c13d);
        WinxinBtn.snp.makeConstraints { (make) in
            make.width.equalTo(40)
            make.height.equalTo(40)
            make.center.equalTo(WinxinbgView.snp.center)
        }
        let Weixinlable = UILabel();
        WinxinbgView.addSubview(Weixinlable);
        Weixinlable.snp.makeConstraints { (make) in
            make.width.equalTo(60)
            make.height.equalTo(12)
            make.centerX.equalTo(WinxinBtn.snp.centerX)
            make.top.equalTo(WinxinBtn.snp.bottom).offset(3)
        }
        Weixinlable.text = "微   信";
        Weixinlable.textAlignment = .center;
        Weixinlable.textColor = UIColor.gray;
        Weixinlable.font = UIFont(name: "iconfont", size: 10);


        FriendbgView.snp.makeConstraints{ (make) in
            make.width.equalTo(width/4)
            make.height.equalTo(80)
            make.left.equalTo(WinxinbgView.snp.right)
            make.top.equalTo(shareView.snp.top)
        }
        
        let FriendBtn = UIButton();
        FriendBtn.addTarget(self, action:#selector(tappedfriend(_:)), for:.touchUpInside);
        FriendbgView.addSubview(FriendBtn);
        FriendBtn.setTitle("\u{e680}", for: .normal);
        FriendBtn.setTitleColor(UIColor.white, for: .normal);
        FriendBtn.titleLabel?.font = UIFont(name: "iconfont", size: 32);
        FriendBtn.layer.masksToBounds = true;
        FriendBtn.layer.cornerRadius = 20;
        FriendBtn.backgroundColor = UIColor.colorWithHex(hexColor: 0x75cd37);
        FriendBtn.snp.makeConstraints { (make) in
            make.width.equalTo(40)
            make.height.equalTo(40)
            make.center.equalTo(FriendbgView.snp.center)
        }
        let Friendlable = UILabel();
        FriendbgView.addSubview(Friendlable);
        Friendlable.snp.makeConstraints { (make) in
            make.width.equalTo(60)
            make.height.equalTo(12)
            make.centerX.equalTo(FriendBtn.snp.centerX)
            make.top.equalTo(FriendBtn.snp.bottom).offset(3)
        }
        Friendlable.text = "朋友圈";
        Friendlable.textAlignment = .center;
        Friendlable.textColor = UIColor.gray;
        Friendlable.font = UIFont(name: "iconfont", size: 10);
    
    }
    
    @objc func tapped(_ button:UIButton){
        self.presentingViewController?.dismiss(animated: true, completion: nil);
    }
    @objc func tappedQQ(_ button:UIButton){
        self.appDelegate.isQQ = true;
        let newsUrl = URL(string: shareurl);
        let title = shaertitle;
        let description = sharedescription;
        let previewImageUrl = URL(string: "http://zy2.iclassx.com:80/ssykt/f@C002FADFDF674E571AF5D88AF8974E44.png")
        let newsObj = QQApiNewsObject(url: newsUrl, title: title, description: description,
                                      previewImageURL: previewImageUrl,
                                      targetContentType: QQApiURLTargetTypeNews)
        let req = SendMessageToQQReq(content: newsObj)
        let sendResult = QQApiInterface.send(req)
        handleSendResult(sendResult:  sendResult)
    }
    
    @objc func tappedQZone(_ button:UIButton){
        self.appDelegate.isQQ = true;
        let newsUrl = URL(string: shareurl)
        let title = shaertitle
        let description = sharedescription
        let previewImageUrl = URL(string: "http://zy2.iclassx.com:80/ssykt/f@C002FADFDF674E571AF5D88AF8974E44.png")
        let newsObj = QQApiNewsObject(url: newsUrl, title: title, description: description,
                                      previewImageURL: previewImageUrl,
                                      targetContentType: QQApiURLTargetTypeNews)
        let req = SendMessageToQQReq(content: newsObj)
        let sendResult  = QQApiInterface.sendReq(toQZone: req)
        handleSendResult(sendResult:  sendResult)
    }
    @objc func tappedWeixin(_ button:UIButton){
    
        let message =  WXMediaMessage()

        message.title = shaertitle
        message.description = sharedescription
        message.setThumbImage(UIImage(named:"http://zy2.iclassx.com:80/ssykt/f@C002FADFDF674E571AF5D88AF8974E44.png"))

        let ext =  WXWebpageObject()
        ext.webpageUrl =  shareurl
        message.mediaObject = ext

        let req =  SendMessageToWXReq()
        req.bText = false
        req.message = message
        req.scene =   Int32(WXSceneSession.rawValue)//好友
        WXApi.send(req)
    }
    
    @objc func tappedfriend(_ button:UIButton){
        
        let message =  WXMediaMessage()

        message.title = shaertitle
        message.description = sharedescription
        message.setThumbImage(UIImage(named:"http://zy2.iclassx.com:80/ssykt/f@C002FADFDF674E571AF5D88AF8974E44.png"))

        let ext =  WXWebpageObject()
        ext.webpageUrl =  shareurl
        message.mediaObject = ext

        let req =  SendMessageToWXReq()
        req.bText = false
        req.message = message
        req.scene =   Int32(WXSceneTimeline.rawValue)//朋友圈
        WXApi.send(req)
       
    }
    override func touchesEnded(_ touches: Set<UITouch>, with event: UIEvent?) {
        self.presentingViewController?.dismiss(animated: true, completion: nil);
        
    }
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    
    //处理分享返回结果
    func handleSendResult(sendResult:QQApiSendResultCode){
        var message = "" ,isSuccess = 2;
        switch(sendResult){
        case EQQAPIAPPNOTREGISTED:
            message = "App未注册"
        case EQQAPIMESSAGECONTENTINVALID, EQQAPIMESSAGECONTENTNULL,
             EQQAPIMESSAGETYPEINVALID:
            message = "发送参数错误"
        case EQQAPIQQNOTINSTALLED:
            message = "QQ未安装"
        case EQQAPIQQNOTSUPPORTAPI:
            message = "API接口不支持"
        case EQQAPISENDFAILD:
            message = "发送失败"
        case EQQAPIQZONENOTSUPPORTTEXT:
            message = "空间分享不支持纯文本分享，请使用图文分享"
        case EQQAPIQZONENOTSUPPORTIMAGE:
            message = "空间分享不支持纯图片分享，请使用图文分享"
        default:
            isSuccess = 3
            print("----")
        }
        //自定义提示框样式
        let appearance = SCLAlertView.SCLAppearance(
            showCloseButton: false //不显示关闭按钮
        )
        
        //使用自定义样式的提示框
        let alert = SCLAlertView(appearance: appearance)
        
        //显示提示框（2秒后自定关闭）
        let timeout = SCLAlertView.SCLTimeoutConfiguration(timeoutValue: 2) {
            print("提示框自动关闭了")
        }
        if(isSuccess == 1){
            alert.showSuccess("成功", subTitle: message, timeout: timeout)
        }else if (isSuccess == 2){
            alert.showError("错误", subTitle: message, timeout: timeout)
        }
        self.presentingViewController?.dismiss(animated: true, completion: nil);
    }
    

    /*
    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        // Get the new view controller using segue.destinationViewController.
        // Pass the selected object to the new view controller.
    }
    */

}
