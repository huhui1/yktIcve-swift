//
//  userInfoSetController.swift
//  云课堂-职教云
//
//  Created by 志辉教育 on 2018/3/28.
//  Copyright © 2018年 zqy. All rights reserved.
//
import UIKit
import SwiftyJSON
import Alamofire

extension userInfoSetViewController{

    func backallvcs(){
        self.presentingViewController?.dismiss(animated: true, completion: nil);
    }

    func getList(){
        let dict = ["userId":Account.defaultAccount.id!]
        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.MobileLogin_getuserinfo, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    self.json = json["userInfo"];
                    self.setvalue()
                   
                }else{
                    ZKProgressHUD.showError("网络异常请稍后再试！");
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络异常请稍后再试！");
                 XLBallLoading.hide(in: self.view)
            }
        }
    }
    
    //邮箱验证,qq号破
    enum Validate {
        case emailvalue(_: String)
        case qqvalue(_: String)
        var isRight: Bool {
            var predicateStr:String!
            var currObject:String!
            switch self {
            case let .emailvalue(str):
                predicateStr = "^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,6})$"
                currObject = str
            case let .qqvalue(str):
                predicateStr = "[1-9][0-9]{4,14}";
                currObject = str
            }
            let predicate =  NSPredicate(format: "SELF MATCHES %@" ,predicateStr)
            return predicate.evaluate(with: currObject)
            
        }
    }
    @objc func editlist(){
        
        let Birthday = self.lab_Tbirth.text as! String
        let Mobile = self.text_tel.text as! String
        let QQ = self.text_qq.text as! String
        let Email = self.text_email.text as! String
        
        if Birthday.count == 0{
            ZKProgressHUD.showMessage("请选择你的生日!")
            return
        }
        
        if !QQ.isEmpty{
            if !Validate.qqvalue(QQ).isRight{
                ZKProgressHUD.showMessage("请输入正确的qq号!")
                return
            }
        }
        if !Email.isEmpty{
            if !Validate.emailvalue(Email).isRight {
                ZKProgressHUD.showMessage("请输入正确的邮箱!")
                return
            }
        }
        
        if Mobile.count < 1{
            ZKProgressHUD.showMessage("请输入手机号！")
            return
        }else{
            let index = Mobile.index(Mobile.startIndex, offsetBy:1)
            let result = Mobile.substring(to: index)//从起始截取到索引的所有字符串
            let value = Int(result)!
            if(Mobile.count != 11  || value != 1){
                ZKProgressHUD.showMessage("请输入正确的手机号码")
                return
            }
            
                let sss=["Email":Email,
                         "Mobile":Mobile,
                         "QQ":QQ,
                         "Sex":sex,
                         "Birthday":Birthday,
                         "Remark":""] as [String:Any]
                let dic = ["userId":Account.defaultAccount.id!,
                           "data":JSON.init(sss)
                    ]as [String:Any]
                 XLBallLoading.show(in: self.view)
                    Alamofire.request(appAPI.MobileLogin_editUserInfo, method: .post, parameters: dic, encoding: URLEncoding.default).responseJSON { response in
                        if let value = response.result.value {
                            let json = JSON(value)
                            if json["code"] == 1{
                                 ZKProgressHUD.showMessage("保存成功");
                            }else{
                                ZKProgressHUD.showError("网络异常请稍后再试！");
                            }
                             XLBallLoading.hide(in: self.view)
                        }else{
                             XLBallLoading.hide(in: self.view)
                            ZKProgressHUD.showError("网络异常请稍后再试！");
                        }
                   }
             }
          }
    }




