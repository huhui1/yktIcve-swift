//
//  userInfoSetViewController.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2017/8/30.
//  Copyright © 2017年 zqy. All rights reserved.
//

import UIKit
import Alamofire
import SwiftyJSON
import Photos


//重命名一个闭包
typealias settingimge = (UIImage) -> Void
class userInfoSetViewController: basePrsentViewController,UIImagePickerControllerDelegate,UINavigationControllerDelegate,UITextFieldDelegate  {
   
    override func viewWillAppear(_ animated: Bool) {
        self.navigationController?.navigationBar.isTranslucent = true
    }
   
    override func viewDidLoad() {
        super.viewDidLoad()
      
        self.lab_Tbirth.delegate = self
        self.text_qq.delegate = self
        self.text_email.delegate = self
        self.setUI();
       
        self.getList()
        self.view.backgroundColor = UIColor.colorWithHex(hexColor: 0xf1f1f1)
        UINavigationBar.appearance().tintColor = UIColor.black;//返回的颜色
        
        // Do any additional setup after loading the view.
    }
   
    func setvalue(){
        
        if "\(self.json["sex"])" == "男"{
            self.btn_sex.isSelected = true;
        }else{
            self.btn_sexj.isSelected = true;
        }


        self.sex = self.json["sex"].stringValue
        self.lab_Tbirth.text = self.json["birthday"].stringValue
        self.text_tel.text = self.json["mobile"].stringValue
        self.text_email.text = self.json["email"].stringValue
        self.text_qq.text = self.json["QQ"].stringValue
        self.text_school.text = self.json["schoolName"].stringValue
        self.lab_userName.text = self.json["displayName"].stringValue
        self.lab_studentID.text = self.json["userName"].stringValue
        common.share.setSDImg(str: self.json["avatorUrl"].stringValue, imgview: self.imgview)
    }
    
    func textFieldDidBeginEditing(_ textField: UITextField) {
        self.pickStartDate(self.lab_Tbirth);
        if textField == self.text_email || textField == self.text_qq{
             self.view.frame = CGRect.init(x:0, y: -120, width:self.view.bounds.width, height: self.view.bounds.height);
        }else{
             self.view.frame = CGRect.init(x:0, y: 0, width:self.view.bounds.width, height: self.view.bounds.height);
        }
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    //日期选取
    func Dateselection(){
      //  self.pickStartDate(self.lab_Tbirth);
    }
    @objc func tapped(_ button:UIButton){
        let tag = button.tag;
        switch tag {
        case 1:
            self.popupView();
        case 5:
            button.isSelected = true
            self.btn_sexj.isSelected = false
            self.sex = "男"
        case 6:
            button.isSelected = true
            self.btn_sex.isSelected = false
            self.sex = "女"
        default:
            let vc = modiftyPwdViewController();

            vc.title = "密码修改";
            vc.modalTransitionStyle = .crossDissolve
           self.present(vc, animated: true, completion: nil)
        
        }

    }
    
    func pickStartDate(_ textField : UITextField){
        
        self.datePicker = UIDatePicker.init()
       
        self.datePicker.locale = Locale(identifier: "zh_CN");
        self.datePicker.backgroundColor = UIColor.white;
        self.datePicker.datePickerMode = UIDatePickerMode.date;
        let dateFormatter = DateFormatter();
        dateFormatter.dateFormat = "yyyy-MM-dd";
        let minDate = dateFormatter.date(from: "1900-01-01");
        let maxDate = dateFormatter.date(from: "2030-01-01");
        datePicker.minimumDate = minDate;
        datePicker.maximumDate = maxDate;
        textField.inputView = self.datePicker;
        // ToolBar
        let toolBar = UIToolbar();
        toolBar.barStyle = .default;
        toolBar.isTranslucent = true;
        toolBar.tintColor = UIColor(red: 92/255, green: 216/255, blue: 255/255, alpha: 1);
        toolBar.sizeToFit();

        // Adding Button ToolBar
        let doneButton = UIBarButtonItem(title: "确定", style: .plain, target: self, action: #selector(doneClick));
        let spaceButton = UIBarButtonItem(barButtonSystemItem: .flexibleSpace, target: nil, action: nil)
        let cancelButton = UIBarButtonItem(title: "取消", style: .plain, target: self, action: #selector(cancelClick));
        toolBar.setItems([cancelButton, spaceButton, doneButton], animated: false);
        toolBar.isUserInteractionEnabled = true;
        textField.inputAccessoryView = toolBar;

    }
    // MARK:- Button Done and Cancel
//    func doneClick() {
//        let formatter = DateFormatter();
//        //日期样式
//        formatter.dateFormat = "yyyy-MM-dd";
//        startDtae.text = formatter.string(from: self.datePicker.date);
//
//        startDtae.resignFirstResponder();
//        if(textTitle.text?.count == 0){
//            self.textTitle.text = formatter.string(from: self.datePicker.date) as String
//        }
//    }
    @objc func doneClick() {
        let formatter = DateFormatter();
        //日期样式
        formatter.dateFormat = "yyyy-MM-dd";
        lab_Tbirth.text = formatter.string(from: self.datePicker.date);
        lab_Tbirth.resignFirstResponder();
    }
    @objc func cancelClick() {
        lab_Tbirth.resignFirstResponder();
        //        startTime.resignFirstResponder();
        //        endTime.resignFirstResponder();
    }
    //底部弹窗
    @objc func popupView(){
        //判断是否开启打开相册权限
        if(!common.share.isAuthorizePhotos()){
            common.share.authorizePhotos()
        }else{
            self.upload()
        }
    }

    //底部弹窗
    func upload(){
        if( self.uploadUrl.isEmpty){
            common.share.getUploadUrl();
        }
        let userIconAlert = UIAlertController(title: "请选择操作", message: "", preferredStyle: UIAlertControllerStyle.actionSheet)
        
        let chooseFromPhotoAlbum = UIAlertAction(title: "从相册选择", style: UIAlertActionStyle.default, handler: funcChooseFromPhotoAlbum)
        userIconAlert.addAction(chooseFromPhotoAlbum)
        
        let chooseFromCamera = UIAlertAction(title: "拍照", style: UIAlertActionStyle.default,handler:funcChooseFromCamera)
        userIconAlert.addAction(chooseFromCamera)
        
        let canelAction = UIAlertAction(title: "取消", style: UIAlertActionStyle.cancel,handler: nil)
        userIconAlert.addAction(canelAction)
        
        if(UIDevice.current.model == "iPad")
        {
            let mine = UIView.init(frame: CGRect(x:self.view.bounds.width/2,y:self.view.bounds.height,width:20,height:20))
            self.view.addSubview(mine)
            let popPresenter =  userIconAlert.popoverPresentationController
            
            popPresenter?.sourceView = mine
            popPresenter?.sourceRect = mine.bounds
            self.present(userIconAlert, animated: true, completion: nil)
        }
        else{
            self.present(userIconAlert, animated: true, completion: nil)
        }
       
    }

    //从相册选择照片
    func funcChooseFromPhotoAlbum(_ avc:UIAlertAction) -> Void{


        let masterVC = HsuAlbumMasterTableViewController()
        let navi = UINavigationController(rootViewController: masterVC)
        masterVC.title = "图片"
        let gridVC = HsuAssetGridViewController()
        gridVC.title = "所有图片"
        let leftBarBtn = UIBarButtonItem(title: "", style: .plain, target: self,
                                         action:nil)
        gridVC.navigationItem.leftBarButtonItem = leftBarBtn
        navi.pushViewController(gridVC, animated: false)
       
        UIDevice.current.setValue(UIInterfaceOrientation.landscapeLeft.rawValue, forKey: "orientation")
        present(navi, animated: true)
        
        HandleSelectionPhotosManager.share.getSelectedPhotos(with: 1) { (assets, images) in
         
           
            self.upload(img: images[0])
        }

        
   }
    
    func funcChooseFromCamera(_ avc:UIAlertAction) -> Void{
        if UIImagePickerController.isSourceTypeAvailable(UIImagePickerControllerSourceType.camera) {
            let imagePicker = UIImagePickerController()
            
            //设置代理
            imagePicker.delegate = self
            //允许编辑
            imagePicker.isEditing = false;
            //设置图片源
            imagePicker.sourceType = UIImagePickerControllerSourceType.camera
            //模态弹出IamgePickerView
            
            self.present(imagePicker, animated: true, completion: nil)
            
        }else{
            print("模拟器不支持拍照功能")
        }
    }
    
    func imagePickerControllerDidCancel(_ picker: UIImagePickerController){
        picker.dismiss(animated: true, completion: nil)
    }
    
    func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [String : Any]) {
        //获取照片的原图
        let image = (info as NSDictionary).object(forKey: UIImagePickerControllerOriginalImage)as!UIImage
        //获得编辑后的图片
        //let image = (info as NSDictionary).object(forKey: UIImagePickerControllerEditedImage)as!UIImage
        
        imgview.image = image;
        self.upload(img: image);
        
        picker.dismiss(animated: true, completion: nil)
    }
    
    
    //上传
    func upload(img:UIImage)
    {
        self.uploadUrl = appAPI.uploadUrl;
        self.prefixUrl = appAPI.prefixUrl;
        
        //let fileURL1 = Bundle.main.url(forResource: "faceMS", withExtension: "png")
        let fileManager = FileManager.default
        let rootPath = NSSearchPathForDirectoriesInDomains(.documentDirectory,
                                                           .userDomainMask, true)[0] as String
        let date = NSDate(),
        timeInterval = date.timeIntervalSince1970 * 1000
        
        let filePath = "\(rootPath)/" + String(timeInterval) + ".jpg"
        XLBallLoading.show(in: self.view)
        let  imageData =  common.share.resetImgSize(sourceImage: img, maxImageLenght: 0, maxSizeKB: 200)
        fileManager.createFile(atPath: filePath, contents: imageData, attributes: nil)
        let imageNSURL = URL.init(fileURLWithPath: filePath)
        Alamofire.upload(
            multipartFormData: { multipartFormData in
                multipartFormData.append(imageNSURL, withName: "file1")
        },
            to: self.uploadUrl,
            encodingCompletion: { encodingResult in
                switch encodingResult {
                case .success(let upload, _, _):
                    upload.responseJSON { response in
                        let result = JSON(response.result.value as Any);
                        
                        self.updataAvator(json:result);
                        self.imgview.image = img
                        XLBallLoading.hide(in: self.view)
                    }
                case .failure(let encodingError):
                    print(encodingError)
                    XLBallLoading.hide(in: self.view)
                }
        })
    }

    func updataAvator(json:JSON){
      
        let dict = ["avator": json["url"].stringValue,
                    "userId":Account.defaultAccount.id!] 
        Alamofire.request(appAPI.MobileLogin_updateAvator, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            
            if let value = response.result.value {
                let r = JSON(value)
                if r["code"] == 1{

                    var account = Account.defaultAccount
                    account.avatar = json["ossOriUrl"].stringValue
                    Account.saveAccount(account)
                }else{
                    ZKProgressHUD.showError(r["msg"].stringValue);
                }
                
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }

    }

    func authorize()->Bool{
        let status = PHPhotoLibrary.authorizationStatus()

        switch status {
        case .authorized:
            return true

        case .notDetermined:
            // 请求授权
            PHPhotoLibrary.requestAuthorization({ (status) -> Void in
                DispatchQueue.main.async(execute: { () -> Void in
                    _ = self.authorize()
                })
            })

        default: ()
        DispatchQueue.main.async(execute: { () -> Void in
            let alertController = UIAlertController(title: "照片访问受限",
                                                    message: "点击“设置”，允许访问您的照片",
                                                    preferredStyle: .alert)

            let cancelAction = UIAlertAction(title:"取消", style: .cancel, handler:nil)

            let settingsAction = UIAlertAction(title:"设置", style: .default, handler: {
                (action) -> Void in
                let url = URL(string: UIApplicationOpenSettingsURLString)
                if let url = url, UIApplication.shared.canOpenURL(url) {
                    if #available(iOS 10, *) {
                        UIApplication.shared.open(url, options: [:],
                                                  completionHandler: {
                                                    (success) in
                        })
                    } else {
                        UIApplication.shared.openURL(url)
                    }
                }
            })

            alertController.addAction(cancelAction)
            alertController.addAction(settingsAction)

            self.present(alertController, animated: true, completion: nil)
        })
        }
        return false
    }
    
    override func viewWillDisappear(_ animated: Bool) {
          UINavigationBar.appearance().tintColor = UIColor.white;//返回的颜色
            self.navigationController?.navigationBar.isTranslucent = false
    }

    func textFieldShouldBeginEditing(_ textField: UITextField) -> Bool {
        textField.inputAccessoryView = toolBar;
        return true
    }
    /*
    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        // Get the new view controller using segue.destinationViewController.
        // Pass the selected object to the new view controller.
    }
    */
    func setUI(){
        if(common.share.isX()){
            ht = 30
        }
        //监听键盘弹出通知
        NotificationCenter.default
            .addObserver(self,selector: #selector(keyboardWillShow(_:)),
                         name: NSNotification.Name.UIKeyboardWillShow, object: nil)
        //监听键盘隐藏通知
        NotificationCenter.default
            .addObserver(self,selector: #selector(keyboardWillHide(_:)),
                         name: NSNotification.Name.UIKeyboardWillHide, object: nil)

        toolBar = common.share.AddToolKeyboardDoneBar()
        let doneButton = UIBarButtonItem(title: "确定", style: .plain, target: self, action: #selector(self.DoneClick));
        let spaceButton = UIBarButtonItem(barButtonSystemItem: .flexibleSpace, target: nil, action: nil)
        toolBar.setItems([spaceButton,doneButton], animated: false);
        self.view.addSubview(view_top)
        self.view_top.addSubview(imgview)
        self.view_top.addSubview(lab_userName)
        self.view_top.addSubview(lab_studentID)
        self.view.addSubview(self.lab_sexIcon)
        self.view.addSubview(self.btn_sexj)
        self.view.addSubview(self.btn_sex)
        self.view.addSubview(self.lab_birth)
        self.view.addSubview(self.lab_Tbirth)
        self.view.addSubview(self.text_tel)
        self.view.addSubview(self.lab_telIcon)
        self.view.addSubview(self.lab_emailIcon)
        self.view.addSubview(self.text_email)
        self.view.addSubview(self.lab_qqIcon)
        self.view.addSubview(self.text_qq)
        self.view.addSubview(self.lab_schoolIcon)
        self.view.addSubview(self.text_school)

        self.view.addSubview(self.btn_save)
        self.view.addSubview(self.btn_img)

        self.view_top.snp.makeConstraints{ (make) in
            make.width.equalTo(width)
            make.top.equalTo(60 + ht)
            make.left.equalTo(0)
            make.height.equalTo(80)
        }
        
        self.imgview.snp.makeConstraints{ (make) in
            make.width.height.equalTo(60)
            make.top.left.equalTo(10)
        }
        self.imgview.layer.masksToBounds = true
        self.imgview.layer.cornerRadius = 30
        let tapGR = UITapGestureRecognizer.init(target: self, action: #selector(self.popupView))
        self.imgview.addGestureRecognizer(tapGR)
        
        self.lab_studentID .snp.makeConstraints{ (make) in
            make.width.equalTo(150)
            make.height.equalTo(30)
            make.top.equalTo(self.lab_userName.snp.bottom).offset(0)
            make.left.equalTo(self.imgview.snp.right).offset(10)
        }
        self.lab_userName.snp.makeConstraints{ (make) in
            make.width.height.equalTo(self.lab_studentID)
            make.top.equalTo(10)
            make.left.equalTo(self.imgview.snp.right).offset(10)
        }
        self.btn_img.snp.makeConstraints { (make) in
            make.width.height.equalTo(50)
            make.centerY.equalTo(self.view_top.snp.centerY)
            make.right.equalTo(self.view_top.snp.right).offset(-20)
        }
        self.lab_sexIcon.snp.makeConstraints { (make) in
            make.width.equalTo(width - 200)
            make.height.equalTo(50)
            make.top.equalTo(self.view_top.snp.bottom).offset(10)
            make.left.equalTo(0)
        }
        
        
        self.btn_sex.snp.makeConstraints { (make) in
            make.width.equalTo(100)
            make.height.equalTo(50)
            make.top.equalTo(self.view_top.snp.bottom).offset(10)
            make.right.equalTo(self.btn_sexj.snp.left).offset(0)
        }
        
        self.btn_sexj.snp.makeConstraints { (make) in
            make.width.equalTo(100)
            make.height.equalTo(50)
            make.top.equalTo(self.view_top.snp.bottom).offset(10)
            make.right.equalTo(self.view.snp.right).offset(0)
        }
        self.lab_birth.snp.makeConstraints { (make) in
            make.width.equalTo(width/2)
            make.height.equalTo(50)
            make.top.equalTo(self.lab_sexIcon.snp.bottom).offset(1)
            make.left.equalTo(0)
        }
        self.lab_Tbirth.snp.makeConstraints { (make) in
            make.width.height.equalTo(self.lab_birth)
            make.top.equalTo(self.lab_sexIcon.snp.bottom).offset(1)
            make.right.equalTo(0)
        }

        self.text_tel.snp.makeConstraints { (make) in
            make.width.equalTo(width/2)
            make.height.equalTo(50)
            make.right.equalTo(0)
            make.top.equalTo(self.lab_birth.snp.bottom).offset(10)
        }
        //添加事件
        self.text_tel.isUserInteractionEnabled = true
        let lab_Click = UITapGestureRecognizer(target: self, action: #selector(changeTel))
        self.text_tel.addGestureRecognizer(lab_Click)
        self.lab_telIcon.snp.makeConstraints { (make) in
            make.width.equalTo(width/2)
            make.height.equalTo(50)
            make.left.equalTo(0)
            make.top.equalTo(self.lab_birth.snp.bottom).offset(10)
        }
        self.lab_emailIcon.snp.makeConstraints { (make) in
            make.width.equalTo(width/2 - 50)
            make.height.equalTo(50)
            make.left.equalTo(0)
            make.top.equalTo(self.lab_telIcon.snp.bottom).offset(1)
        }
        self.text_email.snp.makeConstraints { (make) in
            make.width.equalTo(width/2 + 50)
            make.height.equalTo(50)
            make.right.equalTo(0)
            make.top.equalTo(self.lab_telIcon.snp.bottom).offset(1)
        }
        self.lab_qqIcon.snp.makeConstraints { (make) in
            make.width.equalTo(width/2)
            make.height.equalTo(50)
            make.left.equalTo(0)
            make.top.equalTo(self.text_email.snp.bottom).offset(1)
        }
        self.text_qq.snp.makeConstraints { (make) in
            make.width.equalTo(width/2)
            make.height.equalTo(50)
            make.right.equalTo(0)
            make.top.equalTo(self.text_email.snp.bottom).offset(1)
        }
        self.lab_schoolIcon.snp.makeConstraints { (make) in
            make.width.equalTo(width/2)
            make.height.equalTo(50)
            make.left.equalTo(0)
            make.top.equalTo(self.lab_qqIcon.snp.bottom).offset(1)
        }
        self.text_school.snp.makeConstraints { (make) in
            make.width.equalTo(width/2)
            make.height.equalTo(50)
            make.right.equalTo(0)
            make.top.equalTo(self.lab_qqIcon.snp.bottom).offset(1)
        }

        self.btn_save.snp.makeConstraints { (make) in
            make.width.equalTo(width/4 * 3)
            make.height.equalTo(45)
            make.centerX.equalTo(self.view.snp.centerX)
            make.bottom.equalTo(-40)
        }
        
        
        self.btn_save.layer.masksToBounds = true
        self.btn_save.layer.cornerRadius = 10
        self.btn_save.layer.borderColor = UIColor.bg.cgColor
        self.btn_save.layer.borderWidth = 2

       self.text_qq.delegate = self
       self.text_email.delegate = self
        
    }

    @objc func changeTel(){
        //取认证手机
        let vc = bindingPhoneNumber()
        vc.isFromSetInfo = true
        vc.reloadTel = {(Tel) in
            self.text_tel.text =  Tel
        }
        self.isPushed = true
        self.present(vc, animated: true, completion: nil)

    }
    //键盘处理
    @objc func DoneClick(){
          self.view.frame = CGRect.init(x:0, y: 0, width:self.view.bounds.width, height: self.view.bounds.height);
          self.view.endEditing(true)
    }

    // 键盘显示
    @objc func keyboardWillShow(_ notification: Notification) {

            self.view.frame = CGRect.init(x:0, y: -64, width:self.view.bounds.width, height: self.view.bounds.height);

    }
    //移除监听
    override func viewDidDisappear(_ animated: Bool) {
        if(!self.isPushed){
            NotificationCenter.default.removeObserver(self)
        }
        self.isPushed = false
        
    }
    // 键盘隐藏
    @objc func keyboardWillHide(_ notification: Notification) {

        self.view.frame = CGRect.init(x:0, y: 0, width:self.view.bounds.width, height: self.view.bounds.height);
    }
    //键盘隐藏
    override func touchesEnded(_ touches: Set<UITouch>, with event: UIEvent?) {
        self.view.endEditing(true)

    }
    var json :JSON = []
    var data :JSON = []
    var images = [UIImage]()
    var avatorimg :UIImage?
 
    let height = UIScreen.main.bounds.height;
    var imageView = UIImageView();

    var userName = "";

    var avator_str = "";
    var uploadUrl = "";
    var prefixUrl = "";
    var userNo = "";
    var userStartDate : String = "";
    var sex = "";
    lazy var isPushed :Bool = {
        return false;
    }()
     var toolBar = UIToolbar();

    //弹出视图
    fileprivate lazy var view_date :UIView = {
        let view = UIView()
        view.backgroundColor = UIColor.white
        return view
    }()
    //头部
    fileprivate lazy var view_top :UIView = {
        let view = UIView()
        view.backgroundColor = UIColor.white
        return view
    }()
    //头像
    lazy var imgview :UIImageView = {
        let view = UIImageView()
        view.layer.masksToBounds = true //设置圆角
        view.isUserInteractionEnabled = true //设置允许交互属性
       
        return view
    }()
    //学号
    lazy var lab_studentID :UILabel = {
        let lab = UILabel()
        lab.font = UIFont.init(name: "iconfont", size: 16)
        lab.textAlignment = NSTextAlignment.left
        lab.text = self.userNo
        return lab
    }()
    //姓名
    lazy var lab_userName :UILabel = {
        let lab = UILabel()
        lab.font = UIFont.init(name: "iconfont", size: 16)
        lab.textAlignment = NSTextAlignment.left
        lab.text = self.userName
        return lab
    }()
    //箭头btn
    lazy var btn_img:UIButton = {
        let btn = UIButton()
        btn.tag = 1
        btn.addTarget(self, action:#selector(tapped(_:)), for:.touchUpInside);
        btn.backgroundColor = UIColor.white
        btn.setTitle("\u{e700}", for: .normal)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 20);
        btn.setTitleColor(UIColor.gray, for: .normal)
        return btn
    }()
    //性别
    lazy var lab_sexIcon : UILabel = {
        let lab = UILabel()
        lab.text = "     性别"
        lab.textColor = UIColor.black
        lab.contentMode = .center
        lab.backgroundColor = UIColor.white
        return lab ;
    }()
    
    //性别 男
    lazy var btn_sex:UIButton = {
        let btn = UIButton()
        btn.backgroundColor = UIColor.white
        btn.titleLabel?.textAlignment = .right
        btn.tag = 5
        btn.addTarget(self, action:#selector(tapped(_:)), for:.touchUpInside);
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 16);
        btn.setTitleColor(UIColor.black, for: .normal)
        btn.setTitleColor(UIColor.bg, for: .selected)
        btn.setTitle("\u{e6f5} 男", for: .normal)
        btn.setTitle("\u{e6f4} 男", for: .selected)
        return btn
    }()
    //性别 女
    lazy var btn_sexj:UIButton = {
        let btn = UIButton()
        btn.titleLabel?.textAlignment = .right
        btn.backgroundColor = UIColor.white
        btn.tag = 6
        btn.addTarget(self, action:#selector(tapped(_:)), for:.touchUpInside);
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 16);
        btn.setTitleColor(UIColor.black, for: .normal)
        btn.setTitleColor(UIColor.bg, for: .selected)
        btn.setTitle("\u{e6f5} 女", for: .normal)
        btn.setTitle("\u{e6f4} 女", for: .selected)
        return btn
    }()
    //手机号
    lazy var lab_telIcon :UILabel = {
        let lab = UILabel.init()
        lab.text = "     手机号"
        lab.backgroundColor = UIColor.white
        return lab
    }()
//    lazy var text_tel : UITextField = {
//
//        let text = UITextField()
//        text.leftViewMode = .always
//        text.textAlignment = NSTextAlignment.right
//        text.backgroundColor = UIColor.white
//        text.textColor = UIColor.gray
//        text.placeholder = "请输入有效的手机号码"
//        return text
//    }()
    lazy var text_tel :UILabel = {
        let lab = UILabel()
        lab.textAlignment = .right
        lab.backgroundColor = UIColor.white
        lab.textColor = UIColor.gray
        return lab
    }()
    
    //出生日期
    lazy var lab_birth:UILabel = {
        let lab = UILabel()
        lab.font = UIFont.init(name: "iconfont", size: 16)
        lab.textAlignment = NSTextAlignment.left
        lab.backgroundColor = UIColor.white
        lab.text = "     出生日期"
        return lab
    }()
    //显示出生日期
    lazy var lab_Tbirth:UITextField = {
        let text = UITextField()
        text.leftViewMode = .always
        text.backgroundColor = UIColor.white
        text.textAlignment = NSTextAlignment.right
        text.textColor = UIColor.gray
        text.placeholder = "请输入有效的邮箱"
        return text
    }()
    //显示邮箱
    lazy var lab_emailIcon:UILabel = {
        let lab = UILabel()
        lab.font = UIFont.init(name: "iconfont", size: 16)
        lab.textAlignment = NSTextAlignment.left
        lab.backgroundColor = UIColor.white
        lab.text = "     Email"
        return lab
    }()
    lazy var text_email : UITextField = {
        
        let text = UITextField()
        text.leftViewMode = .always
        text.backgroundColor = UIColor.white
        text.textAlignment = NSTextAlignment.right
        text.textColor = UIColor.gray
        text.placeholder = "请输入有效的邮箱"
        return text
    }()
    //显示qq
    lazy var lab_qqIcon:UILabel = {
        let lab = UILabel()
        lab.font = UIFont.init(name: "iconfont", size: 16)
        lab.textAlignment = NSTextAlignment.left
        lab.backgroundColor = UIColor.white
        lab.text = "     QQ"
        return lab
    }()
    lazy var text_qq : UITextField = {
        
        let text = UITextField()
        text.leftViewMode = .always
        text.backgroundColor = UIColor.white
        text.placeholder = "请输入你的的QQ"
        text.textColor = UIColor.gray
        text.textAlignment = NSTextAlignment.right
        return text
    }()
    //显示学校
    lazy var lab_schoolIcon:UILabel = {
        let lab = UILabel()
        lab.font = UIFont.init(name: "iconfont", size: 16)
        lab.textAlignment = NSTextAlignment.left
        lab.backgroundColor = UIColor.white
        lab.text = "     学校"
        return lab
    }()
    lazy var text_school : UILabel = {
        let text = UILabel()
        text.backgroundColor = UIColor.white
        text.textColor = UIColor.gray
        text.textAlignment = NSTextAlignment.right
        return text
    }()

    lazy var btn_save:UIButton = {
        let btn = UIButton()
        btn.backgroundColor = UIColor.white
        btn.setTitle("保存", for: .normal)
        btn.addTarget(self, action:#selector(self.editlist), for:.touchUpInside);
        btn.setTitleColor(UIColor.bg, for: .normal)
        return btn
    }()
    //时间选取
    fileprivate lazy var datePicker :UIDatePicker = {
        let datePicker = UIDatePicker()
        return datePicker
    }()
    var ht = 0
}

