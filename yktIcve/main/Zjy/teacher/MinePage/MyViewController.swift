//
//  MyViewController.swift
//  云课堂2
//
//  Created by cc on 2018/6/20.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit

class MyViewController: UIViewController {
    var myNews : myNewsModel?
    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.colorWithHex(hexColor: 0xf1f1f1)
        self.headview()
        self.setUI()
        // Do any additional setup after loading the view.
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(false)
        self.navigationController?.navigationBar.isHidden = true
        
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    //头部
    func headview(){
        let head = headView()
        head.frame = CGRect.init(x: 0, y: 0, width: width, height: 120)
        head.backgroundColor = UIColor.bg
        head.thumbnail.layer.borderWidth = 1
        head.thumbnail.layer.borderColor = UIColor.white.cgColor
        head.thumbnail.isUserInteractionEnabled = true
        let imageTapGesture = UITapGestureRecognizer.init(target: self, action: #selector(self.touch_image(sender:)));
        head.thumbnail.addGestureRecognizer(imageTapGesture);
        head.lab_name.text = Account.defaultAccount.displayName
        head.lab_account.text = Account.defaultAccount.number
        head.lab_school.text = Account.defaultAccount.schoolName
        head.btn_mine.addTarget(self, action: #selector(self.setInfo), for: .touchUpInside)
        common.share.setSDImg(str: Account.defaultAccount.avatar!, imgview: head.thumbnail)
        self.view.addSubview(head)
    }
    func setUI(){
        var h = 0
        if(Account.defaultAccount.role == "1"){
            h = 51
        }else{
//            self.view.addSubview(self.btn_Upload)
//            self.btn_Upload.snp.makeConstraints { (make) in
//                make.width.equalTo(width)
//                make.height.equalTo(50)
//                make.top.equalTo(130)
//                make.left.equalTo(0)
//            }
        }
        self.view.addSubview(self.btn_Download)
        self.view.addSubview(self.btn_Set)
        self.view.addSubview(self.btn_Info)
        self.view.addSubview(self.btn_feedback)
        self.view.addSubview(self.btn_Quit)
        self.btn_Info.addSubview(self.lab_InfoIcon)
       
        
        self.btn_Download.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(50)
            make.top.equalTo(130)
            make.left.equalTo(0)
        }
        if Account.defaultAccount.role == "1"{
            self.btn_Set.snp.makeConstraints { (make) in
                make.width.equalTo(width)
                make.height.equalTo(self.btn_Download)
                make.top.equalTo(self.btn_Download.snp.bottom).offset(1)
                make.left.equalTo(0)
            }
        }else{
            self.view.addSubview(self.btn_Statistics)
            self.btn_Statistics.snp.makeConstraints  { (make) in
                make.width.equalTo(width)
                make.height.equalTo(50)
                make.top.equalTo(self.btn_Download.snp.bottom).offset(1)
            }
        
            self.btn_Set.snp.makeConstraints { (make) in
                make.width.equalTo(width)
                make.height.equalTo(self.btn_Download)
                make.top.equalTo(self.btn_Statistics.snp.bottom).offset(1)
                make.left.equalTo(0)
            }
        }
        
        self.btn_Info.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(self.btn_Download)
            make.top.equalTo(self.btn_Set.snp.bottom).offset(1)
            make.left.equalTo(0)
        }
        self.lab_InfoIcon.snp.makeConstraints{ (make) in
            make.width.height.equalTo(18)
            make.top.equalTo(self.btn_Info.snp.top).offset(8)
            make.left.equalTo(self.btn_Info.snp.left).offset(32)
        }
        self.lab_InfoIcon.layer.masksToBounds = true
        self.lab_InfoIcon.layer.cornerRadius = 9
        
        
        self.btn_feedback.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(self.btn_Download)
            make.top.equalTo(self.btn_Info.snp.bottom).offset(1)
            make.left.equalTo(0)
        }
        self.btn_Quit.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(self.btn_Download)
            make.top.equalTo(self.btn_feedback.snp.bottom).offset(20)
            make.left.equalTo(0)
        }
        self.btn_Upload.addTarget(self, action: #selector(tappedcache(_:)), for: .touchUpInside);
        self.btn_Download.addTarget(self, action: #selector(tappedcache(_:)), for: .touchUpInside);
        self.btn_Set.addTarget(self, action: #selector(tappedcache(_:)), for: .touchUpInside);
        self.btn_Info.addTarget(self, action: #selector(tappedcache(_:)), for: .touchUpInside);
        self.btn_feedback.addTarget(self, action: #selector(tappedcache(_:)), for: .touchUpInside);
        self.btn_Quit.addTarget(self, action: #selector(tappedcache(_:)), for: .touchUpInside);
        self.btn_Statistics.addTarget(self, action: #selector(tappedcache(_:)), for: .touchUpInside)
        
        self.btn_Upload.contentHorizontalAlignment = .left
        self.btn_Download.contentHorizontalAlignment = .left
        self.btn_Set.contentHorizontalAlignment = .left
        self.btn_Info.contentHorizontalAlignment = .left
        self.btn_feedback.contentHorizontalAlignment = .left
        self.btn_Quit.contentHorizontalAlignment = .left
        self.btn_Statistics.contentHorizontalAlignment = .left
        
        self.btn_Upload.setAttributedTitle(shezhi(str: "   \u{e713} 文件上传" ,  colorStr: 0x28A9BF), for: .normal)
        self.btn_Download.setAttributedTitle(shezhi(str: "   \u{e714} 我的下载" ,  colorStr: 0x59BE27), for: .normal)
        self.btn_Set.setAttributedTitle(shezhi(str: "   \u{e715} 系统设置" ,  colorStr: 0xBD9C00), for: .normal)
        self.btn_Info.setAttributedTitle(shezhi(str: "   \u{e716} 我的消息" ,  colorStr: 0x004EE7), for: .normal)
        self.btn_feedback.setAttributedTitle(shezhi(str: "   \u{e72b} 问题反馈" ,  colorStr: 0x03A967), for: .normal)
        self.btn_Quit.setAttributedTitle(shezhi(str: "   \u{e711} 退出登录" ,  colorStr: 0xEB5436), for: .normal)
        self.btn_Statistics.setAttributedTitle(shezhi(str: "   \u{e74d} 个人统计" , colorStr: 0xb1ceff), for: .normal)
    }
//    字体图标
    func shezhi(str:String, colorStr:Int64) -> NSAttributedString{
        let attributeString = NSMutableAttributedString(string:str)
        attributeString.addAttribute(NSAttributedStringKey.foregroundColor, value: UIColor.colorWithHex(hexColor: colorStr),
                                     range: NSMakeRange(2,3))
        attributeString.addAttribute(NSAttributedStringKey.backgroundColor, value: UIColor.white, range: NSMakeRange(2,3))
        attributeString.addAttribute(NSAttributedStringKey.font, value: UIFont.init(name: "iconfont", size: 25)!, range: NSMakeRange(2,3))
        return attributeString
    }
    //点击头像跳转
    @objc func touch_image(sender: UITapGestureRecognizer){
        let vc = userInfoSetViewController()
        vc.hidesBottomBarWhenPushed = true
        self.navigationController?.navigationBar.isHidden = false
        self.navigationController?.pushViewController(vc, animated: true)
    }
    //修改信息
    @objc func setInfo(){
        let vc = userInfoSetViewController()
        vc.hidesBottomBarWhenPushed = true
         self.navigationController?.navigationBar.isHidden = false
        self.navigationController?.pushViewController(vc, animated: true)
    }
    
    @objc func tappedcache(_ button:UIButton){
        let tag = button.tag;
        switch tag {
        case 0 :
            print("文件上传")
        case 1 :
            let vc = cacheViewController();
            vc.hidesBottomBarWhenPushed = true
            self.navigationController?.navigationBar.isHidden = false
            self.navigationController?.pushViewController(vc, animated: true)
            print("我的下载")
        case 2 :
            print("个人统计")
            let vc = personalStatisticsViewController()
            self.present(vc, animated: true, completion: nil)
        case 3 :
            let vc = systemSettingsView();
            vc.hidesBottomBarWhenPushed = true
            self.navigationController?.navigationBar.isHidden = false
            self.navigationController?.pushViewController(vc, animated: true)
            print("系统设置")
        case 4 :
            //我的消息
            let vc = MineInfoView()
            vc.hidesBottomBarWhenPushed = true
            vc.myNews = self.myNews
            self.navigationController?.navigationBar.isHidden = false
            self.navigationController?.pushViewController(vc, animated: true)
        case 5 :
            let vc = problemFeedbackView()
            vc.hidesBottomBarWhenPushed = true
             self.navigationController?.navigationBar.isHidden = false
            self.navigationController?.pushViewController(vc, animated: true)
        case 6 :
            print("退出登录")
            let alertController = UIAlertController(title: "提示",
                                                    message:"是否退出登录?", preferredStyle: .alert)
            let cancelAction = UIAlertAction(title: "取消", style: .cancel, handler: nil)
            
            let okAction = UIAlertAction(title: "确定", style: .destructive, handler: {
                action in
                var account = Account.defaultAccount
                    account.id = nil
                    account.schoolId = nil
                Account.saveAccount(account)
                NavigatorService.pop(true)
                let appDelegate = UIApplication.shared.delegate as! AppDelegate
                appDelegate.window?.rootViewController = LogInController()
            })
            alertController.addAction(cancelAction)
            alertController.addAction(okAction)
            self.present(alertController, animated: true, completion: nil)
        default:
            print("--------")
        }
    }
    
    
    let width = UIScreen.main.bounds.width
    //文件上传
    lazy var btn_Upload : UIButton = {
        let btn = UIButton()
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 15)
        btn.backgroundColor = UIColor.white
        btn.setTitleColor(UIColor.black, for: .normal)
        btn.tag = 0
        return btn
    }()
    //我的下载
    lazy var btn_Download : UIButton = {
        let btn = UIButton()
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 15)
        btn.backgroundColor = UIColor.white
        btn.setTitleColor(UIColor.black, for: .normal)
        btn.tag = 1
        return btn
    }()
    //个人统计
    lazy var btn_Statistics : UIButton = {
        let btn = UIButton()
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 15)
        btn.backgroundColor = UIColor.white
        btn.setTitleColor(UIColor.black, for: .normal)
        btn.tag = 2
        return btn
    }()
    //系统设置
    lazy var btn_Set : UIButton = {
        let btn = UIButton()
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 15)
        btn.backgroundColor = UIColor.white
        btn.setTitleColor(UIColor.black, for: .normal)
        btn.tag = 3
        return btn
    }()
    //我的消息
    lazy var btn_Info : UIButton = {
        let btn = UIButton()
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 15)
        btn.backgroundColor = UIColor.white
        btn.setTitleColor(UIColor.black, for: .normal)
        btn.tag = 4
        return btn
    }()
    
    lazy var lab_InfoIcon : UILabel = {
        let lab = UILabel()
        lab.backgroundColor = UIColor.colorWithHex(hexColor: 0xEB2A1C)
        lab.font = UIFont.init(name: "iconfont", size: 10)
        lab.textColor = UIColor.white
        lab.textAlignment = .center
        return lab
    }()
    //问题反馈
    lazy var btn_feedback : UIButton = {
        let btn = UIButton()
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 15)
        btn.backgroundColor = UIColor.white
        btn.setTitleColor(UIColor.black, for: .normal)
        btn.tag = 5
        return btn
    }()
    //退出登录
    lazy var btn_Quit : UIButton = {
        let btn = UIButton()
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 15)
        btn.backgroundColor = UIColor.white
        btn.setTitleColor(UIColor.black, for: .normal)
        btn.tag = 6
        return btn
    }()
    var count:Int = 0 {
        didSet{
            
            if self.count <= 0{
                self.lab_InfoIcon.isHidden = true
            }else{
                self.lab_InfoIcon.isHidden = false
                
                if count > 99{
                    self.lab_InfoIcon.text = "99+"
                }else{
                    self.lab_InfoIcon.text = self.count.description
                }
            }
        }
    }
}
