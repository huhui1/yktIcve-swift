//
//
//  云课堂职教云
// ppt  H5  的播放
//  Created by 尤增强 on 2018/5/4.
//  Copyright © 2018年 jcjy. All rights reserved.
//

import UIKit
import JavaScriptCore
import SwiftyJSON

// 定义协议SwiftJavaScriptDelegate 该协议必须遵守JSExport协议
@objc protocol SwiftJavaScriptDelegate: JSExport {

    // js调用返回
    func back()

    // js返回操作 演示字典参数的使用
    func postMessage(_ dict: [String: String])

    // js显示面授
    func showFaceMS()

    //js 显示 BBS
    func  showBBS()

    //下载
    func down()
}

// 定义一个模型 该模型实现SwiftJavaScriptDelegate协议
@objc class SwiftJavaScriptModel: NSObject, SwiftJavaScriptDelegate {


    func down() {
        controller?.IsstartDownload()
    }

    weak var controller: teacherPPTOffficeViewViewController?
    weak var jsContext: JSContext?

    func showBBS() {
        controller?.webView.isHidden = true
        controller?.view.backgroundColor = UIColor.white;
        let value = UIInterfaceOrientation.portrait.rawValue
        (UIApplication.shared.delegate as! AppDelegate).isEffective = true
        (UIApplication.shared.delegate as! AppDelegate).allowRotation = true
        UIDevice.current.setValue(value, forKey: "orientation")
        let vc = CourseWare_BBSTabController()
        vc.vc.docId =  (controller?.cellId)!
        vc.vc.openClassId = (controller?.openClassId)!
        vc.vc.courseOpenId = (controller?.courseOpenId)!
        vc.vc.modalTransitionStyle = .crossDissolve
        controller?.present(vc, animated: true, completion: nil)
    }
    func back() {

        let value = UIInterfaceOrientation.portrait.rawValue
        (UIApplication.shared.delegate as! AppDelegate).isEffective = true
        (UIApplication.shared.delegate as! AppDelegate).allowRotation = true
        UIDevice.current.setValue(value, forKey: "orientation")
        let  dict = ["type":"closeRes","fromRes":"true"]
        controller?.emitToPC(dict: dict)

        controller?.presentingViewController?.dismiss(animated: false, completion: nil);
    }

    func showFaceMS() {
         controller?.webView.isHidden = true
         controller?.view.backgroundColor = UIColor.white;
        let value = UIInterfaceOrientation.portrait.rawValue
        (UIApplication.shared.delegate as! AppDelegate).isEffective = true
        (UIApplication.shared.delegate as! AppDelegate).allowRotation = true
        UIDevice.current.setValue(value, forKey: "orientation")
      let vc = CourseWare_TeachingTabController()
      vc.vc.openClassId = (controller?.openClassId)!
      vc.vc.courseOpenId = (controller?.courseOpenId)!
      vc.modalTransitionStyle = .crossDissolve
      controller?.present(vc, animated: true, completion: nil)
    }

    func postMessage(_ dict: [String: String]) {
        let dic = ["type":"whiteboard","params":dict["params"]!]
        controller?.emitToPC(dict: dic)
    }

}
class teacherPPTOffficeViewViewController: UIViewController,UIWebViewDelegate {

    var resourcesUrl : JSON = [];
    lazy var doctype :String = {return ""}()
    lazy  var type = ["其他", "视频", "音频", "图片", "文档", "ppt", "zip"];
    
    let appDelegate = UIApplication.shared.delegate as! AppDelegate
    override func viewDidLoad() {
        super.viewDidLoad()
        self.setWebView()
    }



    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    override  func viewWillAppear(_ animated: Bool) {
        self.webView.isHidden = true

        appDelegate.isEffective = false
        appDelegate.allowRotation = false    // 打开横屏功能
        let value = UIInterfaceOrientation.landscapeRight.rawValue

        UIDevice.current.setValue(value, forKey: "orientation")

    }

    func officeBack(){

    }
    func setWebView(){
        let path = Bundle.main.path(forResource: "previewl", ofType: ".html",
                                    inDirectory: "HTML5/src");
        let url = URL(fileURLWithPath:path!);
        let request = URLRequest(url:url);

        //        let url = NSURL(string: linkStr)

        //        let request:NSURLRequest = NSURLRequest(url:url! as URL)
        webView.loadRequest(request as URLRequest)
        webView.scalesPageToFit = true
        webView.delegate = self
        self.view.addSubview(self.webView)
        var frame = CGRect(x:0, y:0, width:UIScreen.main.bounds.height,
                           height:UIScreen.main.bounds.width )
        if(UIDevice.current.model == "iPad"){
            frame = CGRect(x:0, y:0, width:UIScreen.main.bounds.width,
                           height:UIScreen.main.bounds.height  )
        
        }
        webView.frame = frame
        webView.delegate = self
        webView.scrollView.bounces = false

    }




    func webViewDidFinishLoad(_ webView: UIWebView) {


        self.jsContext = webView.value(forKeyPath: "documentView.webView.mainFrame.javaScriptContext") as! JSContext
        let model = SwiftJavaScriptModel()
        model.controller = self
        model.jsContext = self.jsContext

        // 这一步是将SwiftJavaScriptModel模型注入到JS中，在JS就可以通过WebViewJavascriptBridge调用我们暴露的方法了。
        self.jsContext.setObject(model, forKeyedSubscript: "WebViewJavascriptBridge" as NSCopying & NSObjectProtocol)

        // 注册到本地的Html页面中
        let path = Bundle.main.path(forResource: "previewl", ofType: ".html",
                                    inDirectory: "HTML5/src");
        let url = URL(fileURLWithPath:path!);
        self.jsContext.evaluateScript(try? String(contentsOf: url, encoding: String.Encoding.utf8))

        // 注册到网络Html页面 请设置允许Http请求
        //let url = "http://www.mayanlong.com";
        //let curUrl = self.webView.request?.URL?.absoluteString    //WebView当前访问页面的链接 可动态注册
        //self.jsContext.evaluateScript(try? String(contentsOfURL: NSURL(string: url)!, encoding: NSUTF8StringEncoding))

        self.jsContext.exceptionHandler = { (context, exception) in
            print("exception：", exception as Any)
        }

        if(!self.isload){
            let jsHandlerFunc = self.jsContext?.objectForKeyedSubscript("jsHandlerFunc")
            let dict = ["data":self.resourceUrl,
                        "cellId":self.cellId,
                        "isTeaching":self.isTeaching] as [String : Any]
            let _ = jsHandlerFunc?.call(withArguments: [dict])
            self.isload = true

        }
    }

    func IsstartDownload() {
        if(!self.isAllowDownLoad){
            ZKProgressHUD.showMessage("该资源不允许下载！")
            return
        }
        let cx = SQLiteManagerCache()
        let path = cx.readOneData(_userId: Account.defaultAccount.id!, docId: self.cellId)
        if(path.docPath.isEmpty){
            self.startDownload()
        }else{
            ZKProgressHUD.showMessage("该资源已被下载")
        }
        print("| BMPlayerDelegate | bmPlayerStartDownload")
    }


    //开始下载
    func startDownload(){
//        let vc = cacheViewController();
//        vc.docId = self.cellId
//        vc.docUrl = self.resourceUrl
//        vc.docType = 5
//        vc.docTitle = self.celltittle
//        vc.isStart = true;
//        self.navigationController?.pushViewController(vc, animated: true);
        self.webView.isHidden = true
        self.view.backgroundColor = UIColor.white;
        let value = UIInterfaceOrientation.portrait.rawValue
        appDelegate.isEffective = true
        appDelegate.allowRotation = true
        UIDevice.current.setValue(value, forKey: "orientation")
        let vc = CourseWare_CacheController()
        vc.vc.docId = self.cellId
        vc.vc.docUrl = self.resourcesUrl["urls"]["download"].stringValue 
        vc.vc.docType = self.type.index(of:self.doctype)!
        vc.vc.docTitle = self.celltittle
        vc.vc.isStart = true;
        vc.vc.hasNavigation = true
        self.isPushed = true
        vc.vc.modalTransitionStyle = .crossDissolve
        
        self.present(vc, animated: true, completion: nil)
    }
    //投屏事件
    func emitToPC(dict:[String:String]){

        ZQSocketManager.share.notificationSocketManager(data: dict)
    }


    override func viewDidAppear(_ animated: Bool) {
        if(self.isPushMS){

            let dict = ["type":"openRes",
                        "cellId":self.cellId,
                        "fromRes":"true"]
            self.emitToPC(dict: dict)
        }
        self.webView.isHidden = false

    }

    lazy var isPushed:Bool = {
        return false
    }()
    
    lazy var resourceUrl :String = {
        let str: String = String();
        return str;
    }()

    var jsContext:JSContext!

    lazy var webView : UIWebView = {
        let web = UIWebView()
        return web
    }()

    /// 是否可以下载
    var isAllowDownLoad = false
    lazy var celltittle:String = ""
    var isload = false

    lazy var cellId :String = {
        let str: String = String();
        return str;
    }()
    lazy var courseOpenId :String = {
        let str: String = String();
        return str;
    }()

    lazy var openClassId :String = {
        let str: String = String();
        return str;
    }()
    lazy var isTeaching :Bool = {

        return true;
    }()


    var isPushMS = false;

    fileprivate var isFullScreen:Bool {
        get {
            return UIApplication.shared.statusBarOrientation.isLandscape
        }
    }
    /*
    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        // Get the new view controller using segue.destinationViewController.
        // Pass the selected object to the new view controller.
    }
    */

}

