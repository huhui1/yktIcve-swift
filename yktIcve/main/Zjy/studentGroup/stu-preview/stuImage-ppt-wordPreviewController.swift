//
//  stuImage-ppt-wordPreviewController.swift
//  云课堂2
//
//  Created by 志辉教育 on 2018/6/11.
//  Copyright © 2018年 jcjy. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire
import SCLAlertView

extension stuImage_ppt_wordPreviewVC {
    //请求page_count,拼接URL
    func getpage_count(){
        let str = JSON.init(parseJSON: self.resourceUrl)

            self.images = []
            self.pagecount = str["args"]["page_count"].intValue
            self.pageControl.numberOfPages = self.pagecount
            if self.pagecount == 0{
                self.pagecount = 1
            }

            if str["urls"]["preview_oss_gen"].stringValue.isEmpty{
                let str1 = str["urls"]["status"].stringValue
                for i in 1...self.pagecount{
                    let imgUrl = str1.replacingOccurrences(of: "/status", with: "/\(i).preview.jpg")
                    self.images.append(imgUrl)
                    }
                
            }else{
                for i in 1...self.pagecount{
                    let imgUrl = "\(str["urls"]["preview_oss_gen"].stringValue)/\(i).png"
                    self.images.append(imgUrl)
                }
            }
         
           self.collectionView.reloadData()
           
    }
   
    //保存学习日志
     func savePlayLog(){
        let dict = ["openClassId":self.openClassId,
                    "courseOpenId":self.courseOpenId,
                    "cellId":self.cellId,
                    "cellLogId":self.cellLogId,
                    "sourceType":3,
                    "studyCellTime":self.studyCellTime,
                    "picNum": self.picNum + 1,
                    "studyNewlyTime":0,
                    "studyNewlyPicNum":self.leavepage + 1,
                    "token":self.token] as [String : Any];
        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.Student_stuProcessCellLog, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in

            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    //已学习
                    self.StuCourseKJModel?.zjycellRefresh = "zjycellRefresh"
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
        
    }
    //是否继续
    func iscontinue(){
        let alertController = UIAlertController(title: "温馨提示！",
                                                message: "是否继续上次的浏览",
                                                preferredStyle: .alert)
        let cancelAction = UIAlertAction(title: "取消", style: .cancel, handler: {
            action in
            //当前显示的单元格
            self.leavepage = 0
            self.isfirst = true
            self.collectionView.reloadData()
        })
        let okAction = UIAlertAction(title: "好的", style: .default, handler: {
            action in
            self.pageControl.currentPage = self.leavepage
            self.collectionView.reloadData()
        })
        alertController.addAction(cancelAction)
        alertController.addAction(okAction)
        
        self.present(alertController, animated: true, completion: nil)
    }
    //讨论区
    @objc func Discuss(){
        let vc = courseBBSListView()  
        vc.courseOpenId = self.courseOpenId
        vc.openClassId = self.openClassId
        vc.activeType = 1
        vc.docId = self.cellId
        vc.isStu = true
        self.navigationController?.pushViewController(vc, animated: true)
    }
    
    //指示浮窗
    func maskView(){
        self.makeView.frame = CGRect.init(x: 0, y: 0, width: UIScreen.main.bounds.width, height: UIScreen.main.bounds.height)
        self.makeView.backgroundColor = UIColor(red: 0, green: 0, blue: 0, alpha: 0.3);
        let tapBtn = UIButton.init()
        tapBtn.setBackgroundImage(UIImage.init(named: "handTap.png"), for: .normal)
        
        self.makeView.addSubview(tapBtn)
        tapBtn.snp.makeConstraints { (make) in
            make.width.height.equalTo(60)
            make.top.equalTo(0)
            make.right.equalTo(2)
        }
        let Btn_title = UIButton.init()
        Btn_title.setTitle("评论，问答，笔记，纠错，请点击这里 | 下一步", for: .normal)
        Btn_title.setTitleColor(UIColor.white, for: .normal)
        self.view.addSubview( self.makeView)
        self.makeView.addSubview( Btn_title)
        
        let lw = UIScreen.main.bounds.width - 70  > 300 ? 300 :UIScreen.main.bounds.width - 70
        Btn_title.snp.makeConstraints { (make) in
            make.width.equalTo(lw)
            make.height.equalTo(30)
            make.right.equalTo(tapBtn.snp.left)
            make.centerY.equalTo(tapBtn)
        }
        Btn_title.titleLabel?.adjustsFontSizeToFitWidth = true
        tapBtn.addTarget(self, action: #selector(self.hideview), for: .touchUpInside)
        Btn_title.addTarget(self, action: #selector(self.hideview), for: .touchUpInside)
    }
    
    @objc func hideview(){
        self.makeView.isHidden = true
        let cx = SQLiteManagerMask()
        cx.updateData(isType: "isbrowselessonPPTDiscuss")
    }
    
    
    //下载
    @objc func DownloadKJ(){
        if(self.isAllowDownLoad == "false"){
            ZKProgressHUD.showMessage("该课件不允许下载！") ;
            return
        }
        if(self.resourcesUrl["urls"]["download"].stringValue.isEmpty){
            SCLAlertView().showInfo("温馨提示！", subTitle: "该文件已破损，暂不支持下载",closeButtonTitle: "确定")
        }else{
            self.cache()
        }
    }
    //下载
    func cache(){
        
        let cx = SQLiteManagerCache()
        let path = cx.readOneData(_userId: Account.defaultAccount.id!, docId: self.cellId)
        if(path.docPath.isEmpty){
            let vc = cacheViewController();
            vc.docId = self.cellId;
            vc.docUrl = self.resourcesUrl["urls"]["download"].stringValue
            vc.docType = self.type.index(of:self.doctype)!
            vc.docTitle = title!
            vc.isStart = true;
            vc.courseOpenId = self.courseOpenId
            vc.openClassId = self.openClassId
            vc.moduleId = self.moduleId
            vc.isStu = true
            if(self.resourcesUrl["urls"]["download"].stringValue.isEmpty){
                SCLAlertView().showInfo("温馨提示！", subTitle: "该文件已破损，暂不支持下载",closeButtonTitle: "确定")
            }else{
                self.navigationController?.pushViewController(vc, animated: true);
            }
        }else{
            print("===")
//            switch path.docType {
//            case 3:
//                let vc = cachePreviewImgView()
//                let fullPath = "\(NSHomeDirectory())/Documents/\(path.docPath)"
//                vc.file =  fullPath
//
//                self.navigationController?.pushViewController(vc, animated: true)
//            case 4,5:
//                self.openOffice(path: path);
//            default:
//                print("asxa")
//
//            }
            ZKProgressHUD.showMessage("该课件已经下载")
        }
    }
    func openOffice(path:CacheDocModel){
        let sandboxFilePath = "\(NSHomeDirectory())/Documents/\(path.docPath)"
        let docUrl = URL(fileURLWithPath: sandboxFilePath);
        documentController = UIDocumentInteractionController(url:docUrl)
        documentController.delegate = self;
        //当前APP打开  需实现协议方法才可以完成预览功能
        documentController.presentPreview(animated: true);
        
 
        
    }
    func documentInteractionControllerViewControllerForPreview(_ controller: UIDocumentInteractionController) -> UIViewController
    {
        
        //这个地方需要返回给一个控制器用于展现documentController在其上面，所以我们就返回当前控制器self
        return self
    }
    
   
}
