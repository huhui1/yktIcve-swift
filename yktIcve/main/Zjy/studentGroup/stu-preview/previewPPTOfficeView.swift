//
//  previewPPTOfficeView.swift
//  云课堂职教云
//
//  Created by 尤增强 on 2018/4/22.
//  Copyright © 2018年 jcjy. All rights reserved.
//

import UIKit
import WebKit
class previewPPTOfficeView: UIViewController,WKNavigationDelegate {


    override func viewDidLoad() {
        
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.white;

        self.setWebView()
        if(self.isStu){
            self.savePlayLog()
        }
        let item = UIBarButtonItem(title: "\u{e6f7}返回", style: .plain, target: self, action: #selector(self.backBtnClick))
        self.navigationItem.leftBarButtonItem = item
        common.share.setBackButtonItem(item:item)
        self.navigationController?.navigationBar.tintColor = UIColor.white
    }


    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    func setWebView(){

        let url = NSURL(string: linkStr)

        let request = URLRequest(url:url! as URL);
        webView.load(request as URLRequest)

        self.view.addSubview(self.webView)
        webView.snp.makeConstraints{ (make) in
            make.width.equalTo(UIScreen.main.bounds.width - 60)
            make.height.equalTo(UIScreen.main.bounds.height - 40)
//            make.top.equalTo(10)
//            make.left.equalTo(35)
            make.center.equalTo(self.view.snp.center)
        }

        self.webView.navigationDelegate = self

        self.view.addSubview(self.btn_pree)
        self.btn_pree.snp.makeConstraints { (make) in
            make.width.equalTo(35)
            make.height.equalTo(70)
            make.centerY.equalTo(self.view.snp.centerY)
            make.left.equalTo(0)
        }
        self.view.addSubview(self.btn_nextt)
        self.btn_nextt.snp.makeConstraints { (make) in
            make.width.equalTo(35)
            make.height.equalTo(70)
            make.centerY.equalTo(self.view.snp.centerY)
            make.right.equalTo(0)
        }
        self.btn_pree.setAttributedTitle(shezhi(str: "\u{e703}", colorStr: 0xf1f1f1), for: .normal)
        self.btn_nextt.setAttributedTitle(shezhi(str: "\u{e6ff}", colorStr: 0xf1f1f1), for: .normal)

        //禁用页面在最顶端时下拉拖动效果
        webView.scrollView.bounces = false;
        webView.scrollView.isScrollEnabled = false;
        self.webView.addSubview(self.ladingView)

        self.ladingView.snp.makeConstraints { (make) in
            make.width.height.equalTo(100)
            make.centerY.centerX.equalTo(self.webView)
        }
        XLBallLoading.show(in:self.ladingView)
       
    }
    //返回
   @objc func backBtnClick(){
         self.navigationController?.popViewController(animated: true)
    }
    //箭头
    func shezhi(str:String, colorStr:Int64) -> NSAttributedString{
        let attributeString = NSMutableAttributedString(string:str)
        attributeString.addAttribute(NSAttributedStringKey.foregroundColor, value: UIColor.gray,
                                     range: NSMakeRange(0,1))
        attributeString.addAttribute(NSAttributedStringKey.backgroundColor, value: UIColor.colorWithHex(hexColor: colorStr), range: NSMakeRange(0,1))
        attributeString.addAttribute(NSAttributedStringKey.font, value: UIFont.init(name: "iconfont", size: 30)!, range: NSMakeRange(0,1))
        return attributeString
    }
    
    
    //视图显示时，横屏
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        let value = UIInterfaceOrientation.landscapeRight.rawValue
        appDelegate.isEffective = true
        appDelegate.allowRotation = false
        UIDevice.current.setValue(value, forKey: "orientation")
    }
    
    //关闭横屏
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        
        if(!self.isPushed){
            appDelegate.allowRotation = true
            appDelegate.isEffective = true
            let value = UIInterfaceOrientation.portrait.rawValue
            
            UIDevice.current.setValue(value, forKey: "orientation")
        }
        self.isPushed = false
    }

    func webView(_ webView: WKWebView, didFinish navigation: WKNavigation!) {
       XLBallLoading.hide(in: self.ladingView)
        self.ladingView.isHidden = true
    }
    

    lazy var linkStr :String = {
        return ""
    }()
    var isStu = false
    var openClassId = "";
    var courseOpenId = "";
    
    var moduleId = ""
    var stuPreviewDuration: Float64 = 10
    lazy var cellId :String = {
        let str: String = String();
        return str;
    }()
    lazy var isPushed :Bool = {
        
        return false;
    }()

   lazy var webView : WKWebView = {
        let web = WKWebView()
        return web
    }()

    fileprivate  lazy var ladingView :UIView = {
        let view = UIView()
        return view
    }()

  fileprivate  lazy var btn_pree : UIButton = {
       let btn = UIButton()
        btn.setTitleColor(UIColor.black, for: .normal)
        btn.addTarget(self, action: #selector(self.pree), for: .touchUpInside)
        btn.backgroundColor = UIColor.colorWithHex(hexColor: 0xf1f1f1)
        return btn
    }()
    
 fileprivate   lazy var btn_nextt :UIButton = {
       let btn = UIButton()
        btn.setTitleColor(UIColor.black, for: .normal)
        btn.addTarget(self, action: #selector(self.nextt), for: .touchUpInside)
        btn.backgroundColor = UIColor.colorWithHex(hexColor: 0xf1f1f1)
        return btn
    }()
 let appDelegate = UIApplication.shared.delegate as! AppDelegate
}
