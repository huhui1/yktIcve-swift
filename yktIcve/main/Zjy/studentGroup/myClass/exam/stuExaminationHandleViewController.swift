//
//  stuExaminationHandleViewController.swift
//  云课堂职教云
//
//  Created by 尤增强 on 2018/4/3.
//  Copyright © 2018年 jcjy. All rights reserved.
//

import UIKit
import  Alamofire
import SwiftyJSON

extension  stuExaminationHandleView {

    //是否要提交
    func isSubmit(msg:String){

        let alertController = UIAlertController(title: "提示",
                                                message:msg, preferredStyle: .alert)
        let cancelAction = UIAlertAction(title: "取消", style: .cancel, handler: nil)
        let okAction = UIAlertAction(title: "确定", style:.default, handler: {
            action in
            self.submitExam()
        })
        alertController.addAction(cancelAction)
        alertController.addAction(okAction)

        self.present(alertController, animated: true, completion: nil)
    }

    //提交试卷
    func submitExam(){
//        examId: _this.examId,
//        stuExamId: _this.stuExamId,
//        openClassId: _this.openClassId,
//        uniqueId: _this.uniqueId,
//        examTermTimeId: _this.examTermTimeId,
//        paperStructUnique: _this.paperStructUnique,
//        stuId: _this.stuId,
//        sourceType: 3,
//        useTime: _this.time_s
        let dict = ["examId": self.examId,
                    "stuExamId":self.examStuId,
                    "openClassId":self.openClassId,
                    "uniqueId":self.uniqueId,
                    "examTermTimeId":self.examTermTimeId,
                    "paperStructUnique":self.paperStructUnique,
                    "stuId":Account.defaultAccount.id!,
                    "sourceType":3,
                    "useTime":self.useTime] as [String : Any]
         XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.OnlineExam_stuSubmitExam, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in

            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    ZKProgressHUD.showMessage(json["msg"].stringValue);
                    self.doneSuccess()
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }

    }
  
    //返回按钮
    @objc func backBtnClick() {
        let alertController = UIAlertController(title: "警告", message: "你当前处于做题状态，退出后将会提交此次作答记录，请确认是否退出？", preferredStyle: .alert)
        //设置 Actions   点击出发的响应事件都写在相应的代码块里
        let noAction = UIAlertAction(title: "取消", style: .cancel){ (action) -> Void in
        }
        let yesAction = UIAlertAction(title: "确定", style: .default){ (action) -> Void in
            print("ok!")
            self.submitExam()
        }
        //添加 Actions，添加的先后和显示的先后顺序是有关系的
        alertController.addAction(noAction)
        alertController.addAction(yesAction)
        //展示Alert Controller
        self.present(alertController, animated: true, completion: nil)
        //self.presentingViewController?.dismiss(animated: true, completion: nil)
    }
    //  提交成功
    func doneSuccess (){
        if reloadExam != nil {
        self.reloadExam!()
        }
        let count  = self.navigationController?.viewControllers.count
        if  let vc :getExamListView = self.navigationController?.viewControllers[count! - 2] as? getExamListView   {
            vc.refreshItemData(isRefresh: false)
        }
        self.navigationController?.popViewController(animated: true)
    }

    //查看图片
    func previewImg (url:String){

        let vc  = PicturePreviewView()
        vc.imgurl = url
        vc.hidesBottomBarWhenPushed = true
        self.isPushed = true
        self.navigationController?.pushViewController(vc, animated: true)
    }

    //通过附件Id
    func getFileById(Id:String){

        let dict = ["Id": Id]
         XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.Homework_getFileHomeworkUrlById, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in

            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{

                    self.pushView(data: json["url"].stringValue)

                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }

    }

    //通过URL获取
    func getFileInfoByUrl(url:String){

        let dict = ["url": url];
         XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.MobileLogin_getFileInfoByUrl, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in

            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{

                    self.pushView(data: json["url"].stringValue)
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }

    }

    //资源预览
    func pushView(data:String){
        let json = JSON.init(parseJSON: data)
        switch json["category"] {
        case "video":
            let vc = videoPlayView()
            vc.isFromZjyErrorQuestion = true
            vc.videourls.removeAll()
            vc.videourls.append(json["urls"]["preview"].stringValue)
            self.isPushed = true
            self.navigationController?.pushViewController(vc, animated: true)

        case  "mp3":
            let  vc = audioViewController();
            if(!json["urls"]["preview_oss_gen"].stringValue.isEmpty){
                vc.audiourl = json["urls"]["preview_oss_gen"].stringValue
            }else{
                vc.audiourl = json["urls"]["preview"].stringValue
            }
            vc.title = "播放音频"
            vc.title = "考试附件音频"
            vc.isNet = true
            self.isPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        case "img":
            let vc = PicturePreviewView()
            vc.imgurl = json["urls"]["preview_oss_ori"].stringValue
            if(json["urls"]["preview_oss_ori"].stringValue.isEmpty){
                vc.imgurl = json["urls"]["preview"].stringValue
            }
            vc.hidesBottomBarWhenPushed = true
            self.isPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        case "office","ppt","pptx","doc","docx":
            if(json["isH5"].intValue == 1){
                let vc = PPT_Animation_PreviewView()
                self.isPushed = true
                vc.linkStr = json["h5PreviewUrl"].stringValue
                vc.hidesBottomBarWhenPushed = true
                self.navigationController?.pushViewController(vc, animated: true)
            }else{
                let  vc = stuImage_ppt_wordPreviewVC()
                vc.resourceUrl = data
                self.isPushed = true
                vc.isfirst = false
                self.navigationController?.pushViewController(vc, animated: true)
            }
        default:
            print("11")
        }
    }


}
