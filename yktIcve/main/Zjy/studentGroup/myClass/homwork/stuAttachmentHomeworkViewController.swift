//
//  stuAttachmentHomeworkViewController.swift
//  云课堂职教云
//
//  Created by 尤增强 on 2018/4/3.
//  Copyright © 2018年 jcjy. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire
import SCLAlertView
extension stuAttachmentHomeworkView {


   @objc func saveHomework(_ btn :UIButton){
        let alert = SCLAlertView()
        let msg = btn.tag == 0 ? "确定提交该作业吗？":"确定要保存作业吗？"
        alert.addButton("确定") {
        self.theWebView.evaluateJavaScript("attachmentHomewok.send('\(btn.tag)')",
                completionHandler: nil)
        }
        alert.showInfo("提交作业", subTitle: msg,closeButtonTitle: "取消")
    }


   
    //通过URL获取
    func getFileInfoByUrl(url:String){

        let dict = ["url": url];
        //        ZKProgressHUD.setAnimationStyle(.chrysanthemum);
        //
        //        ZKProgressHUD.show();
        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.MobileLogin_getFileInfoByUrl, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in

            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{

                    //                    ZKProgressHUD.hide()
//                    self.pushView(data: json["url"].stringValue)
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }

    //通过附件Id
    func getFileById(Id:String){

        let dict = ["Id": Id]
        //        ZKProgressHUD.setAnimationStyle(.chrysanthemum);
//
//        ZKProgressHUD.show();
         XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.Homework_getFileHomeworkUrlById, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in

            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{

//                    ZKProgressHUD.hide()
//                    self.pushView(data: json["url"].stringValue)

                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }

    
    //资源预览
//    func pushView(data:String){
//        let json = JSON.init(parseJSON: data)
//        switch json["category"] {
//        case "video":
//            let  vc = videoAVViewController();
//            vc.videourl = json["urls"]["preview"].stringValue
//            vc.videotitle = "";
//            vc.resourcesUrl = json
//            self.isPushed = true
//            vc.hidesBottomBarWhenPushed = true
//            self.navigationController?.pushViewController(vc, animated: true);
//
//        case  "mp3":
//            let  vc = audioViewController();
//            if(!json["urls"]["preview_oss_gen"].stringValue.isEmpty){
//                vc.audiourl = json["urls"]["preview_oss_gen"].stringValue
//            }else{
//                vc.audiourl = json["urls"]["preview"].stringValue
//            }
//            vc.title = "播放音频"
//            vc.title = "作业附件音频"
//            vc.isNet = true
//            self.isPushed = true
//             vc.hidesBottomBarWhenPushed = true
//            self.navigationController?.pushViewController(vc, animated: true)
//        case "img":
////            let  vc = previewLeafletImgViewController();
////             vc.leafletUrl = json["urls"]["preview_oss_ori"].stringValue
////            if(json["urls"]["preview_oss_ori"].stringValue.isEmpty){
////                vc.leafletUrl = json["urls"]["preview"].stringValue
////            }
////            self.isPushed = true
////             vc.isNet = true
////            present(vc, animated: false, completion: nil)
//            let vc = DetailViewController()
//            vc.imageURL = NSURL.init(string: json["urls"]["preview_oss_ori"].stringValue)! as URL
//            if(json["urls"]["preview_oss_ori"].stringValue.isEmpty){
//                vc.imageURL = NSURL.init(string: json["urls"]["preview"].stringValue)! as URL
//            }
//            vc.hidesBottomBarWhenPushed = true
//            self.isPushed = true
//            self.navigationController?.pushViewController(vc, animated: true)
//        case "office","ppt","pptx","doc","docx":
////            let  vc = stuPreviewViewController()
////            vc.resourceUrl = data
////            self.isPushed = true
////            present(vc, animated: false, completion: nil)
//            if(json["isH5"].intValue == 1){
//                let vc = previewPPTOfficeView()
//                self.isPushed = true
//                vc.linkStr = json["h5PreviewUrl"].stringValue
//                vc.hidesBottomBarWhenPushed = true
//                self.navigationController?.pushViewController(vc, animated: true)
//            }else{
//                let  vc = stuImage_ppt_wordPreviewVC()
//                vc.resourceUrl = data
//                self.isPushed = true
//                self.navigationController?.pushViewController(vc, animated: true)
//            }
//        default:
//            print("11")
//        }
//    }

}
