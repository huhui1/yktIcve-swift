//
//  stuAssignmentHandleViewController.swift
//  云课堂职教云
//
//  Created by 尤增强 on 2018/4/3.
//  Copyright © 2018年 jcjy. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire
import SCLAlertView

extension stuAssignmentHandleView {

    //获取学生是否做完题目

    func getUnDoQuestionCount(){
//        uniqueId: _this.uniqueId,
//        stuId: _this.stuId
        let dict = ["uniqueId":self.uniqueId,"stuId":Account.defaultAccount.id!]
         XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.Homework_getUnDoQuestionCount, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
//                    self.isSubmit(msg: "是否要提交作业？")
                    self.saveHomework(num: json["code"].intValue)
                }else if json["code"] < 0{
//                    self.isSubmit(msg: "注意！您有题目未作答,是否要提交作业！")
                    self.saveHomework(num: json["code"].intValue)
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }

    }
    
    func saveHomework(num:Int){
        let alert = SCLAlertView()
        let msg = num == 1 ? "是否要提交作业？":"注意！您有题目未作答,是否要提交作业?"
        alert.addButton("确定") {
           self.submit()
        }
        alert.showInfo("提交作业", subTitle: msg,closeButtonTitle: "取消")
    }

    //是否要提交
    func isSubmit(msg:String){
        let alertController = UIAlertController(title: "提示",
                                                message:msg, preferredStyle: .alert)
        let cancelAction = UIAlertAction(title: "取消", style: .cancel, handler: nil)
        let okAction = UIAlertAction(title: "确定", style:.default, handler: {
            action in
            self.submit()
        })
        alertController.addAction(cancelAction)
        alertController.addAction(okAction)
        self.present(alertController, animated: true, completion: nil)

    }



    //提交试卷
    func submit(){
//    homeworkId: _this.homeWorkId,
//    homeworkStuId: _this.homeworkStuId,
//    openClassId: _this.openClassId,
//    uniqueId: _this.uniqueId,
//    homeworkTermTimeId: _this.homeworkTermTimeId,
//    paperStructUnique: _this.paperStructUnique,
//    stuId: _this.stuId,
//    sourceType: 3,
//    useTime: _this.time_s,
//    isDraft: isDraft
        let dict = ["homeworkId": self.homeWorkId,
                    "homeworkStuId":self.homeworkStuId,
                    "openClassId":self.openClassId,
                    "uniqueId":self.uniqueId,
                    "homeworkTermTimeId":self.homeworkTermTimeId,
                    "paperStructUnique":self.paperStructUnique,
                    "stuId":Account.defaultAccount.id!,
                    "sourceType":3,
                    "useTime":self.useTime,
                    "isDraft":self.isDraft] as [String : Any]
         XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.Homework_stuSubmitHomework, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in

            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    ZKProgressHUD.showMessage(json["msg"].stringValue);
                    self.doneSuccess()
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }

    }

    //查看图片
    func previewImg (url:String){

        let vc  = PicturePreviewView()
        vc.imgurl = url
        self.isPushed = true
        vc.hidesBottomBarWhenPushed = true
        self.navigationController?.pushViewController(vc, animated: true)
    }

    //通过附件Id
    func getFileById(Id:String){

        let dict = ["Id": Id]
         XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.Homework_getFileHomeworkUrlById, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in

            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{

                    self.pushView(data: json["url"].stringValue)

                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }

    }

    //通过URL获取
    func getFileInfoByUrl(url:String){

        let dict = ["url": url];
         XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.MobileLogin_getFileInfoByUrl, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in

            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    self.pushView(data: json["url"].stringValue)
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }

    }

    //资源预览
    func pushView(data:String){
        let json = JSON.init(parseJSON: data)
        switch json["category"] {
        case "video":
            let vc = videoPlayView()
            vc.isFromZjyErrorQuestion = true
            vc.videourls.removeAll()
            vc.videourls.append(json["urls"]["preview"].stringValue)
            self.isPushed = true
            vc.hidesBottomBarWhenPushed = true
            self.navigationController?.pushViewController(vc, animated: true)

        case  "mp3":
            let  vc = audioViewController();
            if(!json["urls"]["preview_oss_gen"].stringValue.isEmpty){
                vc.audiourl = json["urls"]["preview_oss_gen"].stringValue
            }else{
                vc.audiourl = json["urls"]["preview"].stringValue
            }
            vc.title = "播放音频"
            vc.title = "作业附件音频"
            vc.isNet = true
            self.isPushed = true
             vc.hidesBottomBarWhenPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        case "img":
            let vc = PicturePreviewView()
            vc.imgurl = json["urls"]["preview_oss_ori"].stringValue
            if(json["urls"]["preview_oss_ori"].stringValue.isEmpty){
                vc.imgurl = json["urls"]["preview_oss_ori"].stringValue
            }
            self.isPushed = true
             vc.hidesBottomBarWhenPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        case "office","ppt","pptx","doc","docx":
            if(json["isH5"].intValue == 1){
                let vc = PPT_Animation_PreviewView()
                self.isPushed = true
                vc.linkStr = json["h5PreviewUrl"].stringValue
                vc.hidesBottomBarWhenPushed = true
                self.navigationController?.pushViewController(vc, animated: true)
            }else{
                let  vc = stuImage_ppt_wordPreviewVC()
                vc.resourceUrl = data
                self.isPushed = true
                vc.isfirst = false
                vc.hidesBottomBarWhenPushed = true
                self.navigationController?.pushViewController(vc, animated: true)
            }
        default:
           ZKProgressHUD.showMessage("文件损坏或正在转换")
        }
    }

}
