//
//  getHomeworkListTableViewCell.swift
//  66iclasscloud
//
//  Created by zqy on 2018/2/6.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import SwiftyJSON

class getHomeworkListTableViewCell: UITableViewCell {
  
    let width = UIScreen.main.bounds.width
    
    required init?(coder aDecoder:NSCoder) {
        super.init(coder: aDecoder)
    }
    
    override init(style:UITableViewCellStyle, reuseIdentifier:String?) {
        
        super.init(style: style, reuseIdentifier: reuseIdentifier);
        
        self.setUI();
    }

    override func setSelected(_ selected: Bool, animated: Bool) {
        super.setSelected(selected, animated: animated)

        // Configure the view for the selected state
    }
    func setUI(){
        self.addSubview(self.bgView)
        self.bgView.addSubview(self.lab_homeworkNum)
        self.bgView.addSubview(self.lab_homeworkName)
        self.bgView.addSubview(self.btn_homeworkRemark)
        self.bgView.addSubview(self.lab_homeworkTime)
        self.bgView.addSubview(self.lab_homeworkType)
        self.bgView.addSubview(self.lab_homeworkState)
        self.bgView.addSubview(self.btn_isMore)
        self.bgView.snp.makeConstraints  { (make) in
            make.width.equalTo(width - 12)
            make.height.equalTo(135)
            make.center.equalTo(self.snp.center)
        }
        let shadowPath = UIBezierPath(roundedRect: bounds, cornerRadius: 0.6)
        self.bgView.layer.masksToBounds = false
        self.bgView.layer.cornerRadius = 6
        self.bgView.layer.shadowColor = UIColor.white.cgColor
        self.bgView.layer.shadowOffset = CGSize.zero // CGSize(width: shadowOffsetWidth, height: shadowOffsetHeight);
        self.bgView.layer.shadowOpacity = 0.11
        self.bgView.layer.shadowPath = shadowPath.cgPath
        self.bgView.layer.borderColor = UIColor.colorWithHex(hexColor: 0x32bd73).cgColor
        self.bgView.layer.borderWidth = 0.08
        self.backgroundColor = UIColor.colorWithHex(hexColor: 0xfafafa)
        self.bgView.isUserInteractionEnabled = true
        
        self.lab_homeworkName.snp.makeConstraints { (make) in
            make.height.equalTo(35)
            make.width.equalTo(width-110)
            make.left.equalTo(self.bgView.snp.left).offset(10)
            make.top.equalTo(self.bgView.snp.top).offset(5)
        }
        self.lab_homeworkTime.snp.makeConstraints { (make) in
            make.height.equalTo(20)
            make.width.equalTo(width)
            make.top.equalTo(self.lab_homeworkName.snp.bottom).offset(3)
            make.left.equalTo(self.bgView.snp.left).offset(10)
        }
        self.lab_homeworkNum.snp.makeConstraints { (make) in
            make.height.equalTo(20)
            make.width.equalTo(width)
            make.top.equalTo(self.lab_homeworkTime.snp.bottom).offset(3)
            make.left.equalTo(self.bgView.snp.left).offset(10)
        }
        self.btn_homeworkRemark.snp.makeConstraints { (make) in
            make.height.equalTo(20)
            make.width.equalTo(width - 92)
            make.top.equalTo(self.lab_homeworkNum.snp.bottom).offset(3)
            make.left.equalTo(self.bgView.snp.left).offset(10)
        }
        self.btn_isMore.snp.makeConstraints { (make) in
            make.height.equalTo(20)
            make.width.equalTo(60)
            make.top.equalTo(self.lab_homeworkNum.snp.bottom).offset(3)
            make.left.equalTo(self.btn_homeworkRemark.snp.right)
        }
        self.lab_homeworkType.snp.makeConstraints { (make) in
            make.height.equalTo(20)
            make.width.equalTo(width)
            make.top.equalTo(self.btn_homeworkRemark.snp.bottom).offset(3)
            make.left.equalTo(self.bgView.snp.left).offset(10)

        }
        self.lab_homeworkState.snp.makeConstraints { (make) in
            make.height.equalTo(20)
            make.width.equalTo(60)
            make.right.equalTo(self.bgView.snp.right).offset(-5)
            make.top.equalTo(self.bgView.snp.top).offset(10)
        }
        self.lab_homeworkState.layer.masksToBounds = true
        self.lab_homeworkState.layer.cornerRadius = 5
    }
    func setData(json:JSON){
        
        if(!json["remark"].stringValue.isEmpty){
          //  计算字的宽度
            btn_homeworkRemark.text = "作业要求：\(json["remark"].stringValue)"
            
            let messtr = "作业要求: \(json["remark"].stringValue)" as NSString
            let widthstr = messtr.size(withAttributes: [NSAttributedStringKey.font:UIFont.systemFont(ofSize: 13)]).width
            
            if widthstr > self.width - 92{
                self.btn_isMore.setTitle("查看更多", for: .normal)
                self.btn_isMore.isHidden = false
            }else{
                self.btn_isMore.isHidden = true
            }
        }else{
            btn_homeworkRemark.text = "作业要求：该作业暂无要求"
            self.btn_isMore.isHidden = true
        }

        lab_homeworkName.text = json["title"].stringValue
        if let score = Float(json["stuHomeworkState"].stringValue) {
            if(score >= 60){
                lab_homeworkState.text = json["stuHomeworkState"].stringValue
                lab_homeworkState.backgroundColor = UIColor.colorWithHex(hexColor: 0xCCFFE6)
                lab_homeworkState.textColor = UIColor.colorWithHex(hexColor: 0x27BE71)
            }else{
                lab_homeworkState.text = json["stuHomeworkState"].stringValue
                lab_homeworkState.backgroundColor = UIColor.colorWithHex(hexColor: 0xFFEAE5)
                lab_homeworkState.textColor = UIColor.colorWithHex(hexColor: 0xE07863)
            }
        }else{
            lab_homeworkState.text = json["stuHomeworkState"].stringValue
            lab_homeworkState.backgroundColor = UIColor.colorWithHex(hexColor: 0xCCCCCC)
            lab_homeworkState.textColor = UIColor.colorWithHex(hexColor: 0x545454)
        }
        lab_homeworkTime.text = "作业时间：\(json["startDate"])~\(json["endDate"])"
        if(json["replyCount"].int! > 0){
            lab_homeworkNum.text = "作业次数：\(json["stuAnwerHomeworkCount"])/\(json["replyCount"])"
        }else{
            lab_homeworkNum.text = "作业次数：\(json["stuAnwerHomeworkCount"])/不限"
        }
        
      
    
//        if(json["homeworkType"]==1){
//            lab_homeworkType.text = "作业类型：题库作业"
//        }else if(json["homeworkType"]==2){
//            lab_homeworkType.text = "作业类型：登分作业"
//        }else if(json["homeworkType"]==4){
//            lab_homeworkType.text = "作业类型：附件作业"
//        }else{
//            lab_homeworkType.text = "作业类型：外部作业"
//        }
        switch json["homeworkType"].intValue {
            
        case 1:
            if json["ztWay"].intValue == 5{
                self.lab_homeworkType.text = "作业类型：在线作业(小组作业)"
            }else if json["ztWay"].intValue == 4{
                self.lab_homeworkType.text = "作业类型：在线作业(智能选题)"
            }else if json["ztWay"].intValue == 1 || json["ztWay"].intValue == 2{
                self.lab_homeworkType.text = "作业类型：在线作业(题库选题)"
            }else{
                self.lab_homeworkType.text = "在线作业"
            }
        case 2:
            if json["ztWay"].intValue == 5{
                self.lab_homeworkType.text = "作业类型：登分作业(小组作业)"
            }else{
                self.lab_homeworkType.text = "作业类型：登分作业"
            }
        case 3:
            if json["ztWay"].intValue == 5{
                self.lab_homeworkType.text = "作业类型：外部作业(小组作业)"
            }else{
                self.lab_homeworkType.text = "作业类型：外部作业"
            }
        case 4:
            if json["ztWay"].intValue == 5{
                self.lab_homeworkType.text = "作业类型：附件作业(小组作业)"
            }else{
                self.lab_homeworkType.text = "作业类型：附件作业"
            }
        case 5:
            if json["ztWay"].intValue == 5{
                self.lab_homeworkType.text = "作业类型：小组作业(小组作业)"
            }else{
                self.lab_homeworkType.text = "作业类型：小组作业"
            }
        default:
            self.lab_homeworkType.text = "作业类型：在线作业"
        }
    }
    
    
    lazy var bgView : UIView = {
        let view = UIView()
        view.backgroundColor = UIColor.white
        return view
    }()
    lazy var lab_homeworkName :UILabel = {
        let lab = UILabel()
        lab.font = UIFont.init(name: "Helvetica-Light", size: 15)
        lab.textColor = UIColor.colorWithHex(hexColor: 0x333333)
        lab.numberOfLines = 2
        
        return  lab
    }()
    lazy var lab_homeworkTime:UILabel = {
        let lab = UILabel()
        lab.font = UIFont.init(name: "Helvetica-Light", size: 13)
        lab.textColor = UIColor.colorWithHex(hexColor: 0x8F8F8F)
        return  lab
    }()
    lazy var lab_homeworkNum :UILabel = {
        let lab = UILabel()
        lab.font = UIFont.init(name: "Helvetica-Light", size: 13)
        lab.textColor = UIColor.colorWithHex(hexColor: 0x8F8F8F)
        return  lab
    }()
    lazy var btn_homeworkRemark:UILabel = {
        let lab = UILabel()
        lab.font = UIFont.init(name: "Helvetica-Light", size: 13)
        lab.textColor = UIColor.colorWithHex(hexColor: 0x8F8F8F)
        return lab
    }()
    lazy var btn_isMore:UIButton = {
        let btn = UIButton()
        btn.isHidden = true
        btn.setTitleColor(UIColor.colorWithHex(hexColor: 0x8F8F8F), for: .normal)
        btn.titleLabel?.font = UIFont.init(name: "Helvetica-Light", size: 13)
        btn.titleEdgeInsets = UIEdgeInsetsMake(0, 0, 0, 0);
        btn.setTitleColor(UIColor.bg, for: .normal)
        return btn
    }()
    lazy var lab_homeworkType :UILabel = {
        let lab = UILabel()
        lab.font = UIFont.init(name: "Helvetica-Light", size: 13)
        lab.textColor = UIColor.colorWithHex(hexColor: 0x8F8F8F)
        return  lab
    }()
    lazy var lab_homeworkState :UILabel = {
        let lab = UILabel()
        lab.font = UIFont.init(name: "Helvetica-Light", size: 13)
        lab.textColor = UIColor.colorWithHex(hexColor: 0x545454)
        lab.backgroundColor = UIColor.colorWithHex(hexColor: 0xCCCCCC)
        lab.textAlignment = .center
        return  lab
    }()
}
