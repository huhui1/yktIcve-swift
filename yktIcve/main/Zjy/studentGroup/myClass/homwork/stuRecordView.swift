//
//  stuRecordView.swift
//  云课堂-职教云
//
//  Created by zqy on 2018/3/27.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import SwiftyJSON
class stuRecordView: UIViewController,UISearchBarDelegate,UITableViewDelegate,UITableViewDataSource,ZQNavigationMenuViewDelegate {
    var tableView:UITableView!
    let appDelegate = UIApplication.shared.delegate as! AppDelegate
    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.colorWithHex(hexColor: 0xf2f2f2)
        self.title = "答题记录"
        self.setTableViewUI()
        self.setUI()
        self.refreshItemData(isRefresh: true)
        let NotifyEventListenercourseKJ = NSNotification.Name("refreshstuRecord")
        NotificationCenter.default.addObserver(self, selector: #selector(self.refreshData), name: NotifyEventListenercourseKJ, object: nil)
        // Do any additional setup after loading the view.
        if(self.stuHomeworkState != "未做" && self.ztWay != 5 && self.ztWay != 3 ){
//            self.setMenu()
            let detailsItem = UIBarButtonItem.init(title: "错题集", style: UIBarButtonItemStyle.plain, target :self, action: #selector(self.error));
            self.navigationItem.rightBarButtonItem = detailsItem;
        }

        let item = UIBarButtonItem(title: "\u{e6f7} 返回", style: .plain, target: self, action: #selector(self.backBtnClick))

        self.navigationItem.leftBarButtonItem = item
        let item1 = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = item1

        common.share.setBackButtonItem(item:item)

        //下拉刷新相关设置,使用闭包Block
        self.tableView.mj_header = MJRefreshNormalHeader(refreshingBlock: {
            //重现生成数据
            self.refreshItemData(isRefresh:false);
            
        })
    }

    @objc func backBtnClick(){
         NotificationCenter.default.removeObserver(self)
        self.navigationController?.popViewController(animated: true)
    }
    @objc func refreshData(){
        self.refreshItemData(isRefresh: false)
    }
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

//  fileprivate func setMenu(){
//        let items = ["错题集"]
//        let imageArray = NSMutableArray.init()
//        self.menu = ZQNavigationMenuView.init(frame: CGRect.init(x: UIScreen.main.bounds.width - 100, y: 0, width:200, height: 50), titles: items )
//        menu.layer.cornerRadius = 5.0
//        menu.layer.borderColor = UIColor.bg.cgColor
//        menu.layer.borderWidth = 1.0
//        menu.layer.masksToBounds = true
//        self.menu.isHidden = true
//        self.menu.delegate = self
//        self.view.addSubview(menu)
//    }
    fileprivate func setUI(){
        if IsTeacher == false{
            self.view.addSubview(self.answerBtn)
            self.answerBtn.snp.makeConstraints { (make) in
                make.width.equalTo(width)
                make.centerX.equalTo(self.view.snp.centerX)
                make.height.equalTo(40)
                make.left.equalTo(0)
                make.bottom.equalTo(self.view.snp.bottom).offset(HX)
            }
        }
    }
//    func showMenu(){
//        self.menu.isHidden = !self.menu.isHidden
//    }


//    func getIndex(_index: Int) {
//
//        switch _index {
//        case 0:
//            let vc = errorQuestionTableView()
//            vc.openClassId = self.openClassId;
//            vc.courseOpenId = self.courseOpenId;
//            vc.title = "错题集";
//            vc.isStu = true
//            vc.userInfo = self.userInfo
//            vc.hkIdOrExamId = self.homeWorkId
//            vc.hkOrExamType = 1
//            self.navigationController?.pushViewController(vc, animated: true)
//        default:
//            print(_index)
//        }
//
//        self.menu.isHidden = !self.menu.isHidden
//    }
   @objc func error(){
        let vc = WronghomeworkView()
        vc.openClassId = self.openClassId;
        vc.courseOpenId = self.courseOpenId;
        vc.title = "错题集";
        vc.isStu = true
        vc.hkIdOrExamId = self.homeWorkId
        vc.hkOrExamType = 1
        self.navigationController?.pushViewController(vc, animated: true)
    }
    var menu :ZQNavigationMenuView!
    func setTableViewUI(){
        //创建表视图
        self.tableView = UITableView.init(frame: CGRect(x:0, y:0, width:UIScreen.main.bounds.width,height:UIScreen.main.bounds.height - 110 + CGFloat(2 * HX)));
        
        self.tableView.delegate = self;
        self.tableView.dataSource = self;
        //创建一个重用的单元格
        self.tableView.register(stuRecordTableViewCell.self, forCellReuseIdentifier: "stuRecordTableViewCell")
        self.tableView.tableFooterView = UIView(frame:CGRect.zero)//除去多余的cell
        self.tableView.separatorInset = UIEdgeInsets.zero;
        self.tableView.layoutMargins = UIEdgeInsets.zero;
        
        self.tableView.tableFooterView = UIView.init(frame: CGRect.zero)
        
        if #available(iOS 9.0, *) {
            self.tableView.cellLayoutMarginsFollowReadableWidth = false
        } else {
            
        }
        //rowHeight属性设置为UITableViewAutomaticDimension
        self.tableView.rowHeight = UITableViewAutomaticDimension;
        self.tableView.backgroundColor = UIColor.colorWithHex(hexColor: 0xf2f2f2)
        self.view.addSubview(self.tableView);
    }
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat
    {
        return 60;
    }
    
    
    
    //返回表格行数（也就是返回控件数）
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
       
           return self.list.count
        
    }
    //创建各单元显示内容(创建参数indexPath指定的单元）
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath)
        -> UITableViewCell {
            let cell:stuRecordTableViewCell = tableView.dequeueReusableCell(withIdentifier: "stuRecordTableViewCell") as! stuRecordTableViewCell
           
            let json = JSON(self.list[indexPath.row]);
                cell.lab_num.text = "\(indexPath.row + 1)"
                cell.lab_score.text = "得分:\(json["getScore"])/\(json["totalScore"])"
                cell.lab_time.text = json["dateCreated"].stringValue
           
            return cell
    }
    
    
    //点击
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        
        tableView .deselectRow(at: indexPath, animated: true)
        let json = JSON(self.list[indexPath.row]);
        if self.IsTeacher {
            if self.ztWay == 3{
                let vc = correctingFileHomeWorkView()
                vc.openClassId = self.openClassId
                vc.courseOpenId = self.courseOpenId
                vc.homeWorkId = self.homeWorkId
                vc.homeworkTermTimeId = self.homeworkTermTimeId
                vc.homeworkStuId = json["homeworkStuId"].stringValue
                vc.ztWay = self.ztWay
                vc.title = self.homeworktitle
                self.navigationController?.pushViewController(vc, animated: true)
            }else{
                let dict = ["homeworkStuId":json["homeworkStuId"].stringValue,
                            "homeworkTermTimeId":self.homeworkTermTimeId,
                            "homeWorkId":self.homeWorkId,
                            "courseOpenId":self.courseOpenId,
                            "openClassId":self.openClassId,
                            "stuId":self.stuId,
                            "checked":false] as [String : Any]
                let vc = assignmenthandleRecordView()
                vc.title = self.homeworktitle
                vc.courseOpenId = self.courseOpenId
                vc.openClassId = self.openClassId
                vc.data = JSON.init(dict).description
                vc.HasReview = true
                self.navigationController?.pushViewController(vc, animated: true)
            }
        }else{
            if(self.ztWay == 5){
                if(json["state"].intValue == 4 && self.isTakeHomework){
                    let vc = groupHomeworkView()
                    vc.homeworktitle = self.homeworktitle
                    vc.courseOpenId = self.courseOpenId
                    vc.openClassId = self.openClassId
                    vc.homeWorkId = self.homeWorkId
                    vc.ztWay = self.ztWay
                    if json["state"].intValue == 2{
                       vc.ischeck = true
                    }
                    vc.homeworkStuId = json["homeworkStuId"].stringValue
                    vc.homeworkTermTimeId = self.homeworkTermTimeId
                    self.navigationController?.pushViewController(vc, animated: true)
                }else{
                    let vc = stuAttachmentJobPreviewView()
                    vc.courseOpenId = self.courseOpenId
                    vc.openClassId = self.openClassId
                    vc.ztWay = self.ztWay
                    vc.homeWorkId = self.homeWorkId
                    vc.homeworkStuId =  json["homeworkStuId"].stringValue
                    vc.title = self.homeworktitle
                    self.navigationController?.pushViewController(vc, animated: true)
                
                }
            }else if(self.ztWay == 3){
                if(json["state"].intValue == 4 && self.isTakeHomework){
                    let vc = groupHomeworkView()
                        vc.courseOpenId = self.courseOpenId
                        vc.openClassId = self.openClassId
                        vc.homeWorkId = self.homeWorkId
                        vc.ztWay = self.ztWay
                        vc.homeworkStuId = json["homeworkStuId"].stringValue
                        vc.homeworkTermTimeId = self.homeworkTermTimeId
                        vc.title = self.homeworktitle
                    self.navigationController?.pushViewController(vc, animated: true)
                }else{
                    let vc = stuAttachmentJobPreviewView()
                        vc.courseOpenId = self.courseOpenId
                        vc.openClassId = self.openClassId
                        vc.ztWay = self.ztWay
                        vc.title = self.homeworktitle
                        vc.homeWorkId = self.homeWorkId
                        vc.homeworkStuId =  json["homeworkStuId"].stringValue
                    self.navigationController?.pushViewController(vc, animated: true)

                }
            }else{
                if(json["state"].intValue == 4 && self.isTakeHomework){
                    let vc = stuAssignmentHandleView()
                        vc.courseOpenId = self.courseOpenId
                        vc.openClassId = self.openClassId
                        vc.title = self.homeworktitle
                        vc.homeWorkId = self.homeWorkId
                        vc.homeworkStuId = json["homeworkStuId"].stringValue
                        vc.homeworkTermTimeId = self.homeworkTermTimeId
                   
                    self.navigationController?.pushViewController(vc, animated: true)
                    let count = self.navigationController?.viewControllers.count
                    self.navigationController?.viewControllers.remove(at: count! - 2)
                }else{
                    let vc = stuAssignmentHandleRecordView()
                        vc.courseOpenId = self.courseOpenId
                        vc.openClassId = self.openClassId
                        vc.homeWorkId = self.homeWorkId
                        vc.title = self.homeworktitle
                        vc.homeworkStuId = json["homeworkStuId"].stringValue
                    self.navigationController?.pushViewController(vc, animated: true)
                    let count = self.navigationController?.viewControllers.count
                    self.navigationController?.viewControllers.remove(at: count! - 2)
                }
            }
        }
    }
    @objc func doHomework(){
        if(self.ztWay == 5 || self.ztWay == 3){
            let vc = groupHomeworkView()
            vc.courseOpenId = self.courseOpenId
            vc.homeworktitle = self.homeworktitle
            vc.openClassId = self.openClassId
            vc.homeWorkId = self.homeWorkId
            vc.ztWay = self.ztWay
            if self.list.count > 0 && self.ztWay == 5 {
              vc.homeworkStuId = JSON(self.list[0])["homeworkStuId"].stringValue
            }
            vc.homeworkTermTimeId = self.homeworkTermTimeId
          
            self.navigationController?.pushViewController(vc, animated: true)
       // }//else if(self.ztWay == 3){
//            let vc = groupHomeworkView()
//                vc.courseOpenId = self.courseOpenId
//                vc.openClassId = self.openClassId
//                vc.homeWorkId = self.homeWorkId
//                vc.homeworkTermTimeId = self.homeworkTermTimeId
//            self.navigationController?.pushViewController(vc, animated: true)
//            let count = self.navigationController?.viewControllers.count
//            self.navigationController?.viewControllers.remove(at: count! - 2)
        }else{
            let vc = stuAssignmentHandleView()
                vc.courseOpenId = self.courseOpenId
                vc.openClassId = self.openClassId
                vc.homeWorkId = self.homeWorkId
                vc.homeworkStuId = ""
                vc.homeworkTermTimeId = self.homeworkTermTimeId
                vc.title = self.homeworktitle
                vc.hidesBottomBarWhenPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
            let count = self.navigationController?.viewControllers.count
            self.navigationController?.viewControllers.remove(at: count! - 2)
        }
    }

    let width = UIScreen.main.bounds.height
    lazy  var answerBtn : UIButton = {
        let btn = UIButton()
       // btn.contentMode = .center
        btn.contentHorizontalAlignment = UIControlContentHorizontalAlignment.center
        btn.setTitleColor(UIColor.white, for: .normal)
        btn.backgroundColor = UIColor.bg
        btn.setTitle("开始答题", for: .normal)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 15)
        btn.isHidden = true
        btn.addTarget(self, action:  #selector(self.doHomework), for: .touchUpInside)
        return btn ;
        
    }()
    
    lazy var lab_msg :UILabel = {
        let lab_msg = UILabel.init()
        lab_msg.textColor = UIColor.gray
        lab_msg.textAlignment = .center
        lab_msg.backgroundColor = UIColor.white
        lab_msg.font = UIFont.init(name: "iconfont", size: 16)
        lab_msg.numberOfLines = 3
        return lab_msg
    }()

    lazy var openClassId: String = {
        return ""
    }()
    lazy var list :NSArray = {
        return []
    }()
    
    
    lazy var courseOpenId: String = {
        return""
    }()
    lazy var stuHomeworkState: String = {
        return ""
    }()
    lazy var homeWorkId: String = {
        return ""
    }()
    lazy var homeworkTermTimeId: String = {
        return ""
    }()
    lazy var homeworktitle: String = {
        return ""
    }()
    var ztWay = 1
    lazy var state : Bool = {
        return false
    }()
    lazy var IsTeacher:Bool = {return false}()
    lazy var stuId:String = {
        return Account.defaultAccount.id!
    }()
   
    lazy var isTakeHomework :Bool = {
        return true
    }()
    let HX = common.share.returnSafeAreaLineHeight()
    lazy var userType:Int = 1
    

    var Newsmodel : NewsModel?
}

