//
//  getHomeworkListView.swift
//  66iclasscloud
//
//  Created by zqy on 2018/2/6.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import SwiftyJSON
class getHomeworkListView: UITableViewController{
   var list :NSArray = [];
    override func viewDidLoad() {
        super.viewDidLoad()


        let item = UIBarButtonItem(title: "\u{e6f7}返回", style: .plain, target: self, action: #selector(self.backBtnClick))
        self.navigationItem.leftBarButtonItem = item
        common.share.setBackButtonItem(item:item)
        self.navigationController?.navigationBar.tintColor = UIColor.white
        let Item = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = Item
        
        // Do any additional setup after loading the view.

        self.view.backgroundColor = UIColor.colorWithHex(hexColor: 0xF9F9F9);
        // 设置分割线的样式为None.
        self.tableView.separatorStyle = UITableViewCellSeparatorStyle.none
        tableView.register(getHomeworkListTableViewCell.self, forCellReuseIdentifier: "getHomeworkListTableViewCell");
        tableView.tableFooterView = UIView(frame:CGRect.zero)//除去多余的cell
        tableView.separatorInset = UIEdgeInsets.zero;
        
        tableView.layoutMargins = UIEdgeInsets.zero;
        
        if #available(iOS 9.0, *) {
            tableView.cellLayoutMarginsFollowReadableWidth = false
        } else {
            // Fallback on earlier versions
        }
        
        let NotifyEventListenercourseKJ = NSNotification.Name("refreshStuHomeworkList")
        NotificationCenter.default.addObserver(self, selector: #selector(self.refreshData), name: NotifyEventListenercourseKJ, object: nil)
        
        self.refreshItemData(isRefresh: true)
        //下拉刷新相关设置,使用闭包Block
        self.tableView.mj_header = MJRefreshNormalHeader(refreshingBlock: {
            //重现生成数据
            self.refreshItemData(isRefresh:false);
            
        })
    }
    @objc func refreshData(){
        self.refreshItemData(isRefresh: false)
    }
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        if(!self.isPushed){
            NotificationCenter.default.removeObserver(self)
        }
        self.isPushed = false
    }
    override func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    override func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat
    {
        return 155;
    }
    
    //返回表格行数（也就是返回控件数）
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        
        return self.list.count;
    }
    
    //创建各单元显示内容(创建参数indexPath指定的单元）
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath)
        -> UITableViewCell {
            //
            let cell:getHomeworkListTableViewCell = tableView.dequeueReusableCell(withIdentifier: "getHomeworkListTableViewCell") as! getHomeworkListTableViewCell
            let json = JSON(self.list[indexPath.row]);
            //去除点击cell变灰
            cell.selectionStyle = UITableViewCellSelectionStyle.none
            cell.setData(json: json)
            
            cell.btn_isMore.tag = indexPath.row
            cell.btn_isMore.addTarget(self, action: #selector(self.viewMore(_:)), for: .touchUpInside)
          
            return cell
    }
    //点击
    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        
        tableView .deselectRow(at: indexPath, animated: true)
        let json = JSON(self.list[indexPath.row]);
        if(json["homeworkType"] == 1 || json["homeworkType"] == 4){

            let vc = stuRecordView()
            vc.homeworktitle = json["title"].stringValue
            vc.courseOpenId = self.courseOpenId
            vc.openClassId = self.openClassId
            vc.homeWorkId = json["homeworkId"].stringValue
            vc.homeworkTermTimeId = json["homeworkTermTimeId"].stringValue
            vc.ztWay = json["ztWay"].intValue
            vc.stuHomeworkState = json["stuHomeworkState"].stringValue
            self.isPushed = true
            vc.hidesBottomBarWhenPushed = true
            self.navigationController?.pushViewController(vc, animated: true)

        }else if(json["homeworkType"]==2){
            ZKProgressHUD.showMessage("此作业直接由老师打分，无需作答")
            return
        }else {
            ZKProgressHUD.showMessage("此作业功能暂不支持手机端查看！")
        }

    }

    //返回按钮
  @objc  func backBtnClick() {
        if(state){
            self.presentingViewController?.presentingViewController?.dismiss(animated: true, completion: nil)
        }else{
            self.presentingViewController?.dismiss(animated: true, completion: nil)
        }
    }
    var isPushed = false
    let width = UIScreen.main.bounds.width
    var state:Bool = {return false}()
    lazy var openClassId :String = {return ""}()
    lazy var courseOpenId :String = {return ""}()
   
}
