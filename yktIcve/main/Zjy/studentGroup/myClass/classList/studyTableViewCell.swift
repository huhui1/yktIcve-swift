//
//  studyTableViewCell.swift
//  66iclasscloud
//
//  Created by zqy on 2018/2/6.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import SwiftyJSON

class studyTableViewCell: UITableViewCell {

    let width = UIScreen.main.bounds.width
    
    
    required init?(coder aDecoder:NSCoder) {
        super.init(coder: aDecoder)
    }
    
    override init(style:UITableViewCellStyle, reuseIdentifier:String?) {
        
        super.init(style: style, reuseIdentifier: reuseIdentifier);
        self.backgroundColor = UIColor.colorWithHex(hexColor: 0xF9F9F9)
        self.setUI();
    }

    override func setSelected(_ selected: Bool, animated: Bool) {
        super.setSelected(selected, animated: animated)

        // Configure the view for the selected state
    }
    
    func setUI(){
        self.addSubview(self.UIthumbnail)
        self.addSubview(self.lab_courseName)
        self.addSubview(self.lab_class)
        self.addSubview(self.lab_totalScore)
        self.addSubview(self.lab_process)
        self.addSubview(self.progressBar)
        self.addSubview(self.lab_line)
        
        self.UIthumbnail.snp.makeConstraints { (make) in
                make.width.equalTo(150)
                make.height.equalTo(84)
                make.left.equalTo(10)
                make.centerY.equalTo(self.snp.centerY)
            }
            self.UIthumbnail.layer.masksToBounds = true
            self.UIthumbnail.layer.cornerRadius = 5
            self.UIthumbnail.layer.borderColor = UIColor.gray.cgColor
            self.UIthumbnail.layer.borderWidth = 0.08
        
        self.lab_courseName.snp.makeConstraints { (make) in
                make.width.equalTo(width-180)
                make.height.equalTo(30)
                make.top.equalTo(self.snp.top).offset(7)
                make.left.equalTo(self.UIthumbnail.snp.right).offset(10)
            }
        
        self.lab_totalScore.snp.makeConstraints { (make) in
            make.width.equalTo(width-180)
            make.height.equalTo(18)
            make.top.equalTo(self.lab_courseName.snp.bottom).offset(5)
            make.left.equalTo(self.UIthumbnail.snp.right).offset(10)
            }
        
        self.lab_class.snp.makeConstraints { (make) in
            make.width.equalTo(width-180)
            make.height.equalTo(18)
            make.top.equalTo(self.lab_totalScore.snp.bottom).offset(5)
            make.left.equalTo(self.UIthumbnail.snp.right).offset(10)
            }
        
        self.progressBar.snp.makeConstraints { (make) in
                make.width.equalTo(width-230)
                make.height.equalTo(7)
                make.top.equalTo(self.lab_class.snp.bottom).offset(5)
                make.left.equalTo(self.UIthumbnail.snp.right).offset(10)
            }
        
            self.progressBar.layer.masksToBounds = true
            self.progressBar.layer.cornerRadius = 4
            self.progressBar.layer.borderColor = UIColor.bg.cgColor
            self.progressBar.layer.borderWidth = 0.4
        
        self.lab_process.snp.makeConstraints { (make) in
            make.width.equalTo(40)
            make.height.equalTo(18)
            make.right.equalTo(self.snp.right).offset(-10)
            make.centerY.equalTo(self.progressBar.snp.centerY)
            }
        self.lab_line.snp.makeConstraints { (make) in
            make.width.equalTo(width - 180)
            make.height.equalTo(0.8)
            make.right.equalTo(self.snp.right).offset(-10)
            make.bottom.equalTo(self.snp.bottom)
        }
    
    }
    func setCell(json:JSON){
        common.share.setSDImg(str: json["thumbnail"].stringValue, imgview: UIthumbnail)
        lab_courseName.text = "\(json["mainTeacherName"].stringValue) -- \(json["courseName"].stringValue)"
        lab_class.text = "班级：\(json["openClassName"].stringValue)"
        lab_process.text = "\(json["process"])%"
        if(json["totalScore"].intValue != -1){
            lab_totalScore.text = "成绩：\(json["totalScore"].stringValue)"
        }else{
            lab_totalScore.text = "成绩：未确认"
        }
        progressBar.progress = json["process"].floatValue / 100
    }
    
    lazy var UIthumbnail :UIImageView = {
        let view = UIImageView()
        return  view
    }()
    
    lazy var lab_courseName :UILabel = {
        let lab = UILabel()
        lab.font = UIFont.init(name: "Helvetica", size: 14)
        lab.textColor = UIColor.colorWithHex(hexColor: 0x333232)
        lab.backgroundColor = UIColor.colorWithHex(hexColor: 0xF9F9F9)
        lab.numberOfLines = 2
        return  lab
    }()
    lazy var lab_class :UILabel = {
        let lab = UILabel()
        lab.font = UIFont.init(name: "Helvetica-Light", size: 12)
        lab.textColor = UIColor.colorWithHex(hexColor: 0x808080)
        lab.backgroundColor = UIColor.colorWithHex(hexColor: 0xF9F9F9)
        return  lab
    }()
    lazy var lab_totalScore :UILabel = {
        let lab = UILabel()
        lab.font = UIFont.init(name: "Helvetica-Light", size: 12)
        lab.textColor = UIColor.colorWithHex(hexColor: 0x808080)
        lab.backgroundColor = UIColor.colorWithHex(hexColor: 0xF9F9F9)
        return  lab
    }()
    lazy var lab_process :UILabel = {
        let lab = UILabel()
        lab.font = UIFont.init(name: "Helvetica-Light", size: 11)
        lab.textColor = UIColor.bg
        lab.textAlignment = .right
        lab.backgroundColor = UIColor.colorWithHex(hexColor: 0xF9F9F9)
        return  lab
    }()
    lazy var progressBar : UIProgressView = {
        let progress = UIProgressView()
            progress.progress = 0
            progress.setProgress(0.0, animated: true)
            progress.progressTintColor = UIColor.bg
            progress.trackTintColor = UIColor.clear
        return progress
    }()
    lazy var lab_line : UILabel = {
        let lab = UILabel()
        lab.backgroundColor = UIColor.colorWithHex(hexColor: 0xE0E0E0)
        return lab
    }()
}
