//
//  courseBBSListView.swift
//  云课堂2
//
//  Created by cc on 2018/7/5.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit

class courseBBSListView: UIViewController {

    var courseBBSRefresh = CourseBBSAction.init(ActionName: "")


    let vc2 = courseBBSEvaluationView()
    let vc3 = courseBBSQuestionView()
    let vc4 = courseBBSNoteView()
      let vc5 = courseBBSErrorView()
    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.white

        self.setSlideMenu()
        // Do any additional setup after loading the view.
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    func setSlideMenu(){

        self.courseBBSRefresh.addObserver(self, forKeyPath: "ActionName", options: [.new, .old], context: nil)
            var titles = [String]()
            var arr:Array<UIViewController> = [];

            let vc1 = KJCourseTeachingTableView()
            let vc6 = StatisticallearningView()
            if isStu{
                titles = ["评价","问答","笔记","纠错"]
                arr = [vc2,vc3,vc4,vc5]
            }else{
                titles = ["课堂教学","评价","问答","笔记","纠错","学习统计"]
                arr = [vc1,vc2,vc3,vc4,vc5,vc6]
            }
        
        
                vc1.courseOpenId = self.courseOpenId
                vc1.openClassId = self.openClassId
                vc1.courseBBSAction = self.courseBBSRefresh

                vc2.courseOpenId = self.courseOpenId
                vc2.activeType = 1
                vc2.openClassId = self.openClassId
                vc2.cellId = self.docId
                vc2.courseBBSAction = self.courseBBSRefresh
    
                vc3.courseOpenId = self.courseOpenId
                vc3.activeType = 2
                vc3.openClassId = self.openClassId
                vc3.cellId = self.docId
                vc3.courseBBSAction = self.courseBBSRefresh
    
                vc4.courseOpenId = self.courseOpenId
                vc4.activeType = 3
                vc4.openClassId = self.openClassId
                vc4.cellId = self.docId
                vc4.courseBBSAction = self.courseBBSRefresh
    
                vc5.courseOpenId = self.courseOpenId
                vc5.activeType = 4
                vc5.openClassId = self.openClassId
                vc5.cellId = self.docId
                vc5.courseBBSAction = self.courseBBSRefresh
    
                vc6.cellId = self.docId
                vc6.openClassId = self.openClassId
        
            var ht = 104
            if common.share.isX(){
                ht += 50
            }
            slideMenu = SlideMenu(frame: CGRect(x:0,y:0 ,width:view.frame.width,height:40), titles:titles, childControllers:arr)
            slideMenu?.backgroundColor = UIColor.white
            slideMenu?.bodyFrame = CGRect.init(x: 0, y:40, width: view.frame.width, height: view.frame.height  -  CGFloat(ht))
            vc2.f =  CGRect.init(x: 0, y:0, width: view.frame.width, height: view.frame.height - CGFloat(ht))
            vc3.f =  CGRect.init(x: 0, y:0, width: view.frame.width, height: view.frame.height  -  CGFloat(ht))
            vc4.f =  CGRect.init(x: 0, y:0, width: view.frame.width, height: view.frame.height  -  CGFloat(ht))
            vc5.f =  CGRect.init(x: 0, y:0, width: view.frame.width, height: view.frame.height -   CGFloat(ht))
            slideMenu?.selectedColor = UIColor(red: 6/255, green: 163/255, blue: 121/255, alpha: 1);
            
            slideMenu?.isFixed = true;
            slideMenu?.indicatorStyle = .followText;
            slideMenu?.titleStyle = .transfrom;
            slideMenu?.line.isHidden = false;
            slideMenu?.scrollToIndex(0)
            view.addSubview(slideMenu!)

    }


    //添加监听后,使用完必须移除监听(一个add 对应一个 remove)
    deinit {
        self.courseBBSRefresh.removeObserver(self, forKeyPath: "ActionName", context: nil)
    }

    override func observeValue(forKeyPath keyPath: String?, of object: Any?, change: [NSKeyValueChangeKey : Any]?, context: UnsafeMutableRawPointer?) {
        if keyPath == "ActionName" {

            self.actionBBSType()
        }
    }



    var slideMenu:SlideMenu?

    var courseOpenId = ""
    var openClassId = ""
    lazy var docId:String = ""
    var activeType = 1 //1.评价，2.问答，3，笔记，4.纠错
    var isStu = false
}

extension courseBBSListView {
    @objc func actionBBSType(){

        switch (self.courseBBSRefresh.ActionName) {
        case "create":
            let vc = createCourseBBSView()
            vc.courseOpenId = self.courseOpenId
            vc.openClassId = self.openClassId
            vc.cellId = self.docId
            vc.courseBBSAction = self.courseBBSRefresh
            vc.activeType = "\(self.courseBBSRefresh.actionType)"
            self.navigationController?.pushViewController(vc, animated: true)
        case "details":
            let vc = CourseBBSDetailsView()
            vc.activeType = (self.courseBBSRefresh.actionType)
            vc.cellId = self.docId
            vc.openClassId = self.openClassId
            vc.courseOpenId = self.courseOpenId
            vc.evaluation = self.courseBBSRefresh._evaluationModel!
            vc.courseBBSAction = self.courseBBSRefresh
            vc.isMainTeacher = self.courseBBSRefresh.isMainTeacher == true ? 1 : 0
            self.navigationController?.pushViewController(vc, animated: true)
        case "teaching":
            let vc = faceInfoView();
            vc.faceTimeStatus = self.courseBBSRefresh.faceTimeStatus
            vc.activityId =   self.courseBBSRefresh.activityId
            vc.courseOpenId =  self.courseOpenId
            vc.openClassIds =   self.courseBBSRefresh.openClassIds
            self.navigationController?.pushViewController(vc, animated: true);
        case "refresh":
            switch (self.courseBBSRefresh.actionType){
            case 1:
                vc2._BBSViewModel.getBBSData()
            case 2:
                vc3._BBSViewModel.getBBSData()
            case 3:
                vc4._BBSViewModel.getBBSData()
            case 4:
                vc5._BBSViewModel.getBBSData()
            default:
                print("")
            }
        default:
            print("_____")
        }

    }
}
