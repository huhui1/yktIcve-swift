//
//  ZJY_StudentCourseKJViewController.swift
//  云课堂2
//
//  Created by 尤增强 on 2018/6/14.
//  Copyright © 2018年 jcjy. All rights reserved.
//

import UIKit
import Alamofire
import SwiftyJSON
import SCLAlertView

extension  ZJY_StudentCourseKJView {

    //获取单元
    func getModuleList(){
        let dict = ["courseOpenId": self.courseOpenId,
                    "openClassId":self.openClassId]
        ZKProgressHUD.setAnimationStyle(.chrysanthemum);
        ZKProgressHUD.show()
        Alamofire.request(appAPI.AssistTeacher_getModuleListByClassId, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    self.makeData(json:json["moduleList"])
                    
                }else{
                    ZKProgressHUD.showMessage(json["msg"].stringValue);
                }
                ZKProgressHUD.hide()
            }else{
                ZKProgressHUD.showMessage("网络环境异常请稍后再试！");
            }
        }
    }

    //  模块列表
    func makeData(json:JSON){

        for i in json {
            let m = zjycourseModule.init(data: i.1, _isUnfold: false)
            self.moduleList.append(m)
        }
        self.tableview.reloadData()
        common.share.setTableFootView_noData(self.tableview, list: self.moduleList as NSArray)
    }

    //获取单元列表
    func getTopicList(moduleId:String,section:Int){
        if( self.moduleList[section].topic.count > 0){

            self.tableview.reloadSections(IndexSet.init(integer: section), with: UITableViewRowAnimation.automatic)

        }else {

            let dict = ["courseOpenId": self.courseOpenId,
                        "openClassId":self.openClassId,
                        "moduleId":moduleId]
            XLBallLoading.show(in: self.view)
            Alamofire.request(appAPI.AssistTeacher_getTopicListByModuleId, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
                if let value = response.result.value {
                    let json = JSON(value)
                    if json["code"] == 1{
                         self.setTopicList(section: section, data: json["topicList"])
                    }else{
                        ZKProgressHUD.showMessage(json["msg"].stringValue)
                    }
                    XLBallLoading.hide(in: self.view)
                }else{
                    ZKProgressHUD.showMessage("网络环境异常请稍后再试！");
                    XLBallLoading.hide(in: self.view)
                }
            }

        }
    }

    //填充数据
    func setTopicList(section:Int,data:JSON){
        let m =  self.moduleList[section]
        var j = 0
        for i in data{

            let t = zjycourseTopic.init(data: i.1, _level: 2, _topicIndex: j, _isUnfold: false, _isFirstModule: m.isFirstModule,_moduleId: m.moduleId)
            j += 1
            self.moduleList[section].topic.append(t)

        }
        self.tableview.reloadSections(IndexSet.init(integer: section), with: UITableViewRowAnimation.automatic)
    }


    //获取获得课程下的单元
    func getCellList(indexPath:IndexPath,topic:zjycourseTopic){


        let dict = ["courseOpenId": self.courseOpenId,
                    "topicId":topic.id,
                    "openClassId":self.openClassId,
                    "stuId":Account.defaultAccount.id!]

        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.AssistTeacher_getCellListByTopicId, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    if(json["cellList"].count < 1){
                         SCLAlertView().showInfo("提示！", subTitle: "当前章节下没有课件资源",closeButtonTitle: "确定")
                    }
                      self.setCellInTopicList(indexPath: indexPath, data: json["cellList"], topic: topic)

                }else{
                    ZKProgressHUD.showMessage(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showMessage("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }

    }

    //set cell数据

    func setCellInTopicList(indexPath:IndexPath,data:JSON,topic:zjycourseTopic){


        for i in data{
            let c = zjycourseTopic.init(data: i.1, _level: 3, _topicIndex: -99, _isUnfold: false, _isFirstModule: topic.isFirstModule,_moduleId: topic.moduleId)
            topic.cell.append(c)
            //子节点
            if( i.1["cellType"].intValue == 4){
                for k in i.1["cellChildNodeList"]{
                    let c1 = zjycourseTopic.init(data: k.1, _level: 3, _topicIndex: 99, _isUnfold: false,_isFirstModule: topic.isFirstModule,_moduleId: topic.moduleId)
                    topic.cell.append(c1)
                }
            }
        }
        self.tableview.reloadSections(IndexSet.init(integer: indexPath.section), with: .automatic)
    }

    //分区下标 与当前分区下所有topic
    func getshowList(model:zjycourseModule,_section: Int) -> zjycourseTopic{

        var courseTopicModelR = zjycourseTopic.init(data: JSON(), _level: 0, _topicIndex: -99, _isUnfold: false, _isFirstModule: model.isFirstModule,_moduleId: model.moduleId)
        if model.isUnfold {
            var index = 0

            for i in 0..<model.topic.count{
                let courseTopicModel = model.topic[i]

                if(_section<index+1){
                    courseTopicModelR = courseTopicModel
                    courseTopicModelR.level = 2;
                    return courseTopicModelR;
                }
                index = index + 1 ;

                if (courseTopicModel.isUnfold){
                    if(_section<index+courseTopicModel.cell.count){
                        courseTopicModelR = courseTopicModel.cell[_section-index]
                        courseTopicModelR.level = 3;
                        return courseTopicModelR;
                    }
                    index = index + courseTopicModel.cell.count;

                }

            }
            return courseTopicModelR;
        }else{
            return courseTopicModelR
        }

    }

    func getCellNum(model:zjycourseModule,_section: Int) -> Int{
        if model.isUnfold {
            var i = model.topic.count;

            for courseTopicModel in model.topic{

                if (courseTopicModel.isUnfold){
                    i = i + courseTopicModel.cell.count
                }
            }
            return i ;
        }else{
            return 0
        }
    }


    //是否是闯关模式
    func isCanSee(cell:zjycourseTopic){

        let dict = ["openClassId":self.openClassId,
                    "userId":Account.defaultAccount.id!,
                    "moduleId":cell.moduleId,
                    "isFirstModule":cell.isFirstModule,
                    "upTopicId":cell.upTopicId,
                    "upCellId":cell.upCellId] as [String : Any]
            XLBallLoading.show(in: self.tableview)
        Alamofire.request(appAPI.AssistTeacher_canOpenCell, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    self.isfileDownload(cell:cell)
                }else{
                    ZKProgressHUD.showMessage(json["msg"].stringValue)
                }
                XLBallLoading.hide(in: self.tableview)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.tableview)
            }
        }
    }

    //判断文件是否被下载过
    func  isfileDownload(cell:zjycourseTopic){
        let cx = SQLiteManagerCache()
        let path = cx.readOneData(_userId: Account.defaultAccount.id!, docId: cell.id)
        if path.docPath.isEmpty {
             self.getUrl(cell:cell)
        }else {
            switch cell.categoryName {
           
            case "音频":
                let vc = audioViewController()
                vc.cellId = cell.id
                vc.courseOpenId = self.courseOpenId
                vc.openClassId = self.openClassId
                vc.moduleId = cell.moduleId
                vc.isNet = false
                vc.audiourl = path.docPath
                vc.isAllowDownLoad = true
                vc.title = cell.title
                vc.StuCourseKJModel = self.StuCourseKJModel
                vc.moduleId = cell.moduleId
                vc.isStu = true
                vc.isNeedUpdate = self.isNeedUpdate
                vc.token = self.token
                vc.isKJ = true
                vc.hidesBottomBarWhenPushed = true

                self.navigationController?.pushViewController(vc, animated: true)
            default:
                self.getUrl(cell:cell)
            }
        }
    }

    //观看跳转页面
    func pushstuCourseWareVC(cell:zjycourseTopic,isAllowDownLoad:Bool){

        switch cell.categoryName {
        case "视频":
            let vc = zjyVideoPlayView()
            vc.isStu = true
            vc.courseOpenId = self.courseOpenId
            vc.docId = cell.id
            vc.videotittle = cell.title
            vc.openClassId = self.openClassId
            vc.moduleId = cell.moduleId
            vc.cellLogId = self.cellLogId
            vc.isStudyFinish = cell.isStudyFinish
            vc.token = self.token
            vc.isAllowDownLoad = cell.isAllowDownLoad
            vc.stuCellPicCount = self.stuCellPicCount
            vc.StuCourseKJModel = self.StuCourseKJModel
            vc.leavelocation = self.stuStudyNewlyTime
            vc.isNeedUpdate = self.isNeedUpdate
            vc.WatchMaxtime = Double(self.stuStudyNewlyTime)
            vc.videourls.removeAll()
            //拼接URL
            for (key, value) in self.resourcesUrl["args"]{
                if self.resourcesUrl["urls"]["preview_oss_gen"].stringValue.isEmpty{
                    if value.boolValue{
                        let videoUrl = "\(self.resourcesUrl["urls"]["preview"].stringValue)/\(key).mp4"
                        vc.videourls.append(videoUrl)
                    }
                }else{
                    if value.boolValue{
                        let videoUrl = "\(self.resourcesUrl["urls"]["preview_oss_gen"].stringValue)/\(key).mp4"
                        vc.videourls.append(videoUrl)
                    }
                }

            }
            vc.isNeedUpdate = self.isNeedUpdate
            vc.hidesBottomBarWhenPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        case "图片","文档":
            if(self.resourcesUrl["isH5"] != 1){
                let vc = stuImage_ppt_wordPreviewVC()
                if cell.categoryName == "图片"{
                   vc.isZjyFromImg = true
                }
                vc.cellId = cell.id;
                vc.courseOpenId = self.courseOpenId
                vc.openClassId = self.openClassId
                vc.moduleId = cell.moduleId
                vc.isStu = true
                vc.isKJ = true
                vc.token = self.token
                vc.cellLogId = self.cellLogId
                vc.stuCellPicCount = self.stuCellPicCount
                vc.isAllowDownLoad = cell.isAllowDownLoad.description
                vc.resourceUrl = self.resourcesUrl.description
                vc.resourcesUrl = self.resourcesUrl
                vc.title = cell.title
                vc.doctype = cell.categoryName
                vc.StuCourseKJModel = self.StuCourseKJModel
                vc.hidesBottomBarWhenPushed = true
                self.navigationController?.pushViewController(vc, animated: true)
            }
        case "图文":
            let vc = courseware_tuWenView()
            vc.courseOpenId = self.courseOpenId
            vc.openClassId = self.openClassId
            vc.cellId = cell.id;
            vc.isStu = true
            vc.cellLogId = self.cellLogId
            vc.stuCellPicCount = self.stuCellPicCount
            vc.moduleId = cell.moduleId
            vc.token = self.token
            vc.title = cell.title
            vc.StuCourseKJModel = self.StuCourseKJModel
            vc.hidesBottomBarWhenPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        case "音频":  //暂未记录日志
             let vc = audioViewController()
             vc.cellId = cell.id
             vc.courseOpenId = self.courseOpenId
             vc.openClassId = self.openClassId
             vc.moduleId = cell.moduleId
             vc.isNet = true
             vc.token = self.token
             vc.isAllowDownLoad = isAllowDownLoad
             vc.isStu = true
             vc.isKJ = true
             vc.cellLogId = self.cellLogId
             vc.isNeedUpdate = self.isNeedUpdate
             vc.leavelocation = self.stuCellViewTime
             vc.stuCellPicCount = self.stuCellPicCount
             vc.StuCourseKJModel = self.StuCourseKJModel
             vc.title = cell.title
             if self.resourcesUrl["urls"]["preview_oss_gen"].stringValue.isEmpty{
                vc.audiourl = self.resourcesUrl["urls"]["preview"].stringValue
             }else{
                 vc.audiourl = self.resourcesUrl["urls"]["preview_oss_gen"].stringValue
             }
             vc.hidesBottomBarWhenPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        case "ppt":
            if(self.resourcesUrl["isH5"] != 1){
                let vc = stuImage_ppt_wordPreviewVC()
                vc.cellId = cell.id;
                vc.courseOpenId = self.courseOpenId
                vc.openClassId = self.openClassId
                vc.moduleId = cell.moduleId
                vc.isStu = true
                vc.isKJ = true
                vc.token = self.token
                vc.cellLogId = self.cellLogId
                vc.stuCellPicCount = self.stuCellPicCount
                vc.isAllowDownLoad = cell.isAllowDownLoad.description
                vc.resourceUrl = self.resourcesUrl.description
                vc.resourcesUrl = self.resourcesUrl
                vc.doctype = cell.categoryName
                vc.title = cell.title
                vc.StuCourseKJModel = self.StuCourseKJModel
                vc.hidesBottomBarWhenPushed = true
                self.navigationController?.pushViewController(vc, animated: true)
            }else{
                let vc = PPT_Animation_PreviewView()
                vc.cellId = cell.id;
                vc.courseOpenId = self.courseOpenId
                vc.openClassId = self.openClassId
                vc.moduleId = cell.moduleId
                vc.isStu = true
                vc.isKJ = true
                vc.token = self.token
                vc.cellLogId = self.cellLogId
                vc.stuCellPicCount = self.stuCellPicCount
                vc.linkStr = self.resourcesUrl["h5PreviewUrl"].stringValue
                vc.page_count = self.resourcesUrl["args"]["page_count"].intValue
                vc.isAllowDownLoad = cell.isAllowDownLoad.description
                vc.title = cell.title
                vc.resourcesUrl = self.resourcesUrl
                vc.doctype = cell.categoryName
                vc.StuCourseKJModel = self.StuCourseKJModel
                vc.hidesBottomBarWhenPushed = true
                self.navigationController?.pushViewController(vc, animated: true)
            }
        case "链接":
            let vc = LinkView()
            vc.linkStr = self.linkstr
            vc.courseOpenId = self.courseOpenId
            vc.openClassId = self.openClassId
            vc.cellId = cell.id
            vc.isStu = true
            vc.isKJ = true
            vc.token = self.token
            vc.cellLogId = self.cellLogId
            vc.stuCellPicCount = self.stuCellPicCount
            vc.title = cell.title
            vc.StuCourseKJModel = self.StuCourseKJModel
            vc.hidesBottomBarWhenPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        default:
             SCLAlertView().showInfo("温馨提示！", subTitle: "该课件暂不支持打开",closeButtonTitle: "确定")
        }
    }


    //获取课件信息
    func getUrl(cell:zjycourseTopic) {
      
        let dict = ["cellId":cell.id,
                    "stuId":Account.defaultAccount.id!,
                    "openClassId":self.openClassId,
                    "sourceType":3] as [String : Any]

        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.AssistTeacher_getCellInfoByCellId, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                
                if json["code"] == 1{
                    self.token = json["cellInfo"]["token"].description;
                    let resourceUrl =  json["cellInfo"]["resourceUrl"].description;
                    self.linkstr = json["cellInfo"]["externalLinkUrl"].description;
                    self.resourcesUrl = JSON.init(parseJSON: resourceUrl);
                    self.previewUrl = JSON.init(parseJSON: resourceUrl)["urls"]["preview"].stringValue
                    self.cellLogId = json["cellInfo"]["cellLogId"].description;
                    self.stuCellPicCount = json["cellInfo"]["stuCellPicCount"].intValue;
                    self.stuCellViewTime = json["cellInfo"]["stuCellViewTime"].intValue;
                    self.stuStudyNewlyTime = json["cellInfo"]["stuStudyNewlyTime"].intValue;
                    self.pushstuCourseWareVC(cell: cell, isAllowDownLoad: json["cellInfo"]["isAllowDownLoad"].boolValue)
                    self.StuCourseKJModel?.topicId = json["cellInfo"]["topicId"].stringValue
                    self.isNeedUpdate = json["cellInfo"]["isNeedUpdate"].intValue == 1 ? true : false
                    if json["cellInfo"]["isNeedUpdate"].intValue == 1{
                        switch json["cellInfo"]["categoryName"].stringValue {
                        case "图片","ppt","文档":
                            let str = JSON.init(parseJSON:json["cellInfo"]["resourceUrl"].description)
                                common.share.updateDataByCell(cellId: cell.id, pageNum: str["args"]["page_count"].intValue, seconds: 0)
                        default:
                            print("====")
                        }
                    }
                    
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                XLBallLoading.hide(in: self.view)
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }
    }

}
