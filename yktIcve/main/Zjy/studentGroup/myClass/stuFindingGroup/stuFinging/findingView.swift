//
//  findingView.swift
//  66iclasscloud
//
//  Created by zqy on 2018/2/6.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import SwiftyJSON

class findingView: UIViewController {
    let height = UIScreen.main.bounds.height;
    let width = UIScreen.main.bounds.width;
    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.colorWithHex(hexColor: 0xEFEFEF)
        let item = UIBarButtonItem(title: "\u{e6f7}返回", style: .plain, target: self, action: #selector(self.backBtnClick))
        self.navigationItem.leftBarButtonItem = item
        common.share.setBackButtonItem(item:item)
        let Item = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = Item

        
        // Do any additional setup after loading the view.
        self.setUI();
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    func setUI (){
        self.view.addSubview(self.btn_notice)
        self.btn_notice.addSubview(self.lab_notice)
        self.view.addSubview(self.btn_guidance)
        self.btn_guidance.addSubview(self.lab_guidance)
        self.view.addSubview(self.btn_grade)
        self.btn_grade.addSubview(self.lab_grade)
        self.view.addSubview(self.btn_Qrcode)
        self.btn_Qrcode.addSubview(self.lab_Qrcode)

        self.btn_notice.snp.makeConstraints { (make) in
            make.width.equalTo(width / 3)
            make.height.equalTo(120)
            make.top.equalTo(10)
            make.left.equalTo(0)
        }
        self.lab_notice.snp.makeConstraints { (make) in
            make.width.equalTo(60)
            make.height.equalTo(13)
            make.bottom.equalTo(self.btn_notice.snp.bottom).offset(-32)
            make.centerX.equalTo(self.btn_notice.snp.centerX)
        }
        

        self.btn_guidance.snp.makeConstraints { (make) in
            make.width.equalTo(self.btn_notice)
            make.height.equalTo(120)
            make.left.equalTo(self.btn_notice.snp.right).offset(1)
            make.centerY.equalTo(self.btn_notice.snp.centerY)
        }
        self.lab_guidance.snp.makeConstraints { (make) in
            make.width.equalTo(60)
            make.height.equalTo(13)
            make.bottom.equalTo(self.btn_guidance.snp.bottom).offset(-32)
            make.centerX.equalTo(self.btn_guidance.snp.centerX)
        }

        
        self.btn_grade.snp.makeConstraints { (make) in
            make.width.equalTo(self.btn_notice)
            make.height.equalTo(120)
            make.left.equalTo(self.btn_guidance.snp.right).offset(1)
            make.centerY.equalTo(self.btn_notice.snp.centerY)
        }
        self.lab_grade.snp.makeConstraints { (make) in
            make.width.equalTo(60)
            make.height.equalTo(13)
            make.bottom.equalTo(self.btn_grade.snp.bottom).offset(-32)
            make.centerX.equalTo(self.btn_grade.snp.centerX)
        }
        
        self.btn_Qrcode.snp.makeConstraints { (make) in
            make.width.equalTo(self.btn_notice)
            make.height.equalTo(120)
            make.centerX.equalTo(self.btn_notice.snp.centerX)
            make.top.equalTo(self.btn_notice.snp.bottom).offset(2)
        }
        self.lab_Qrcode.snp.makeConstraints { (make) in
            make.width.equalTo(65)
            make.height.equalTo(13)
            make.bottom.equalTo(self.btn_Qrcode.snp.bottom).offset(-32)
            make.centerX.equalTo(self.btn_Qrcode.snp.centerX)
        }

        self.btn_notice.addTarget(self, action:#selector(tap(_:)), for:.touchUpInside);
        self.btn_grade.addTarget(self, action:#selector(tap(_:)), for:.touchUpInside);
        self.btn_guidance.addTarget(self, action:#selector(tap(_:)), for:.touchUpInside);
        self.btn_Qrcode.addTarget(self, action:#selector(tap(_:)), for:.touchUpInside);
        
    }
    
   @objc func tap(_ button:UIButton){
        let tag = button.tag;
        switch tag {
        case 1:
            let vc = classNoticeView();
            vc.title = "公 告";
            vc.isStu = 1
            vc.openClassId = self.openClassId;
            vc.courseOpenId = self.courseOpenId;
            vc.hidesBottomBarWhenPushed = true;
            self.navigationController?.pushViewController(vc, animated: true);
        case 2:
            let vc = stuGuidanceView();
            vc.title = "课程导学";
            vc.courseOpenId = self.courseOpenId;
            vc.hidesBottomBarWhenPushed = true;
            self.navigationController?.pushViewController(vc, animated: true);
            print("导学")
        case 3:
            let vc = reultsAnalysisListView()
            vc.title = "成绩"
            vc.courseOpenId = self.courseOpenId
            vc.openClassId = self.openClassId
            vc.stuId = Account.defaultAccount.id!
            vc.isStu = 1
            vc.hidesBottomBarWhenPushed = true
            self.navigationController?.pushViewController(vc, animated: true);
            print("成绩")
        case 4:
            print("二维码")
            let data = ["flag":"ssykt",
                        "type":"1",
                        "courseOpenId":self.courseOpenId,
                        "openClassId":self.openClassId]
            let vc = classQrcodeView();
            vc.msg = "扫描二维码，立刻加入班级"
            vc.courseName = self.courseName
            vc.thumbnail = self.thumbnail
            vc.isHasImg = true
            vc.schoolName = self.mainTeacherName
            vc.qrstr = JSON.init(data).description
            vc.view.backgroundColor = UIColor.white
            vc.modalTransitionStyle = .crossDissolve
            vc.view.backgroundColor = UIColor.init(red: 0, green: 0, blue: 0, alpha: 0.5)
            self.present(vc, animated:  true,completion: nil)
        default:
           print("sxasx")
        }

    }
    //返回按钮
   @objc func backBtnClick() {
        if(state){
            self.presentingViewController?.presentingViewController?.dismiss(animated: true, completion: nil)
        }else{
            self.presentingViewController?.dismiss(animated: true, completion: nil)
        }
    }
    
    lazy var btn_notice :UIButton={
        let btn = UIButton()
        btn.setTitle("\u{e712}", for: .normal)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 27)
        btn.titleLabel?.textAlignment = .center
        btn.setTitleColor(UIColor.colorWithHex(hexColor: 0xD4237A), for: .normal)
        btn.backgroundColor = UIColor.white
        btn.tag = 1
        return  btn
    }()
    lazy var lab_notice : UILabel = {
        let lab = UILabel()
        lab.text = "消息公告"
        lab.textColor = UIColor.colorWithHex(hexColor: 0x666666)
        lab.textAlignment = .center
        lab.font = UIFont.init(name: "iconfont", size: 13)
        return lab
    }()
   lazy  var btn_guidance :UIButton={
        let btn = UIButton()
        btn.setTitle("\u{e72c}", for: .normal)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 27)
        btn.titleLabel?.textAlignment = .center
        btn.setTitleColor(UIColor.colorWithHex(hexColor: 0x053DAB), for: .normal)
        btn.backgroundColor = UIColor.white
        btn.tag = 2
        return  btn
    }()
    lazy var lab_guidance : UILabel = {
        let lab = UILabel()
        lab.text = "导 学"
        lab.textColor = UIColor.colorWithHex(hexColor: 0x666666)
        lab.textAlignment = .center
        lab.font = UIFont.init(name: "iconfont", size: 13)
        return lab
    }()
    lazy  var btn_grade :UIButton={
        let btn = UIButton()
        btn.setTitle("\u{e725}", for: .normal)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 24)
        btn.titleLabel?.textAlignment = .center
        btn.setTitleColor(UIColor.colorWithHex(hexColor: 0xF5996C), for: .normal)
        btn.backgroundColor = UIColor.white
        btn.tag = 3
        return  btn
    }()
    lazy var lab_grade : UILabel = {
        let lab = UILabel()
        lab.text = "学生成绩"
        lab.textColor = UIColor.colorWithHex(hexColor: 0x666666)
        lab.textAlignment = .center
        lab.font = UIFont.init(name: "iconfont", size: 13)
        return lab
    }()
    lazy var btn_Qrcode : UIButton = {
        let btn = UIButton()
        btn.setTitle("\u{e727}", for: .normal)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 26)
        btn.titleLabel?.textAlignment = .center
        btn.setTitleColor(UIColor.colorWithHex(hexColor: 0x14A31D), for: .normal)
        btn.backgroundColor = UIColor.white
        btn.tag = 4
        return btn
    }()
    lazy var lab_Qrcode : UILabel = {
        let lab = UILabel()
        lab.text = "班级二维码"
        lab.textColor = UIColor.colorWithHex(hexColor: 0x666666)
        lab.textAlignment = .center
        lab.font = UIFont.init(name: "iconfont", size: 13)
        return lab
    }()
    var state:Bool = {return false}()
    lazy var openClassId :String = {return ""}()
    lazy var courseOpenId :String = {return ""}()
    lazy var courseName:String = {return ""}()
    lazy var thumbnail : String = {return ""}()
    lazy var mainTeacherName:String = {return ""}()
}
