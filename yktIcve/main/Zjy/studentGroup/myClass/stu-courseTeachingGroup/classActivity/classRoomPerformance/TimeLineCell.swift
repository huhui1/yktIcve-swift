//
//  TimeLineCell.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2018/1/21.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import SnapKit

class TimeLineCell: UITableViewCell {
    //时间轴线上的图标
    var timeLineIcon: UILabel!
    //标题显示文本标签
    var titleLabel: UILabel!
    //时间文本标签
    var dateTimeLabel: UILabel!
    //活动类型文本标签
    var dataTypeLabel: UILabel!
    //参与人数信息文本标签
    var attendLabel :UILabel!
    //备注标签容器
    var containView: UIView!
    //备注显示文本标签
    var appendixLabel: UILabel!
    //图标上半部分的时间线
    var forepartTimeLineLabel: UIView!
    //图标下半部分的时间线
    var backpartTimeLineLabel: UIView!
    //备注标签容器的高度约束（将高度设为0）
    var heightContraint: Constraint?
    //时间线离左的横向间距
    let horizontalGap: CGFloat = 70

    //是否有备注
    var hasAppendix:Bool = false {
        didSet
        {
            if hasAppendix {
                //有备注则高度约束失效，备注容器高度更具内容自适应
                self.heightContraint?.deactivate()
            }else{
                //没有备注高度约束生效，高度变成0
                self.heightContraint?.activate()
            }
        }
    }

    override init(style: UITableViewCellStyle, reuseIdentifier: String?) {
        super.init(style: style, reuseIdentifier: reuseIdentifier)

        setSubviews()
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    func setSubviews(){
        //图标上半部分的时间线初始化。并设置相关约束。
        forepartTimeLineLabel = UIView()
        forepartTimeLineLabel.backgroundColor = UIColor.lightGray
        contentView.addSubview(forepartTimeLineLabel)
        forepartTimeLineLabel.snp.makeConstraints { (make) -> Void in
            make.left.equalTo(contentView).offset(horizontalGap)
            make.height.equalTo(25)
            make.width.equalTo(3)
            make.top.equalTo(contentView)
        }

        //时间线上图标初始化。并设置相关约束。
        timeLineIcon = UILabel()
        timeLineIcon.layer.masksToBounds = true
        //设置圆角半径，显示成圆形。
        timeLineIcon.layer.cornerRadius = 20
        timeLineIcon.font = UIFont.init(name: "iconfont", size: 40)
        timeLineIcon.textAlignment = .center
        contentView.addSubview(timeLineIcon)
        timeLineIcon.snp.makeConstraints { (make) -> Void in
            make.top.equalTo(forepartTimeLineLabel.snp.bottom)
            make.centerX.equalTo(forepartTimeLineLabel.snp.centerX)
            make.width.height.equalTo(40)
        }

        //活动类型显示文本标签初始化。并设置相关约束。
        dataTypeLabel = UILabel()
        dataTypeLabel.font = UIFont.init(name: "iconfont", size: 14)
        dataTypeLabel.sizeToFit()
        contentView.addSubview(dataTypeLabel)
        dataTypeLabel.snp.makeConstraints { (make) -> Void in
            make.top.equalTo(timeLineIcon)
            make.left.equalTo(forepartTimeLineLabel.snp.right).offset(25)
        }

        //时间文本标签初始化。并设置相关约束。
        dateTimeLabel = UILabel()
        dateTimeLabel.font = UIFont.init(name: "iconfont", size: 13)
        dateTimeLabel.sizeToFit()
        dateTimeLabel.textColor = UIColor.white
        dateTimeLabel.layer.masksToBounds = true
        dateTimeLabel.layer.cornerRadius = 5
        dateTimeLabel.backgroundColor = UIColor.bg
        dateTimeLabel.textAlignment = .center
        self.contentView.addSubview(dateTimeLabel)
        dateTimeLabel.snp.makeConstraints { (make) -> Void in
            make.centerY.equalTo(timeLineIcon.snp.centerY)
            make.left.equalTo(5)
            make.width.equalTo(40)
            make.height.equalTo(16)
        }
        //参与人数与总人数
        attendLabel = UILabel()
        attendLabel.font = UIFont.systemFont(ofSize: 12)
        attendLabel.textColor = UIColor.lightGray
        attendLabel.sizeToFit()
        contentView.addSubview(attendLabel)
        attendLabel.snp.makeConstraints { (make) -> Void in
            make.left.equalTo(dataTypeLabel.snp.right).offset(5)
            make.centerY.equalTo(dataTypeLabel)
        }

        //消费条目文本标签初始化。并设置相关约束。
        titleLabel = UILabel()
        titleLabel.font = UIFont.init(name: "iconfont", size: 14)
        titleLabel.textColor = UIColor.bg

        titleLabel.sizeToFit()
        contentView.addSubview(titleLabel)
        titleLabel.snp.makeConstraints { (make) -> Void in
            make.left.equalTo(dataTypeLabel)
            make.top.equalTo(dataTypeLabel.snp.bottom).offset(10)
        }

        //备注便签容器初始化。并设置相关约束。
        containView = UIView()
        containView.backgroundColor = UIColor(red: 200/255, green: 200/255,
                                              blue: 200/255, alpha: 0.3)
        containView.layer.cornerRadius = 3
        contentView.addSubview(containView)
        containView.snp.makeConstraints { (make) -> Void in
            make.top.equalTo(titleLabel.snp.bottom).offset(10)
            make.left.equalTo(forepartTimeLineLabel.snp.right).offset(10)
            make.right.equalTo(contentView).offset(-10)
        }

        //备注文本标签初始化。并设置相关约束。
        appendixLabel = UILabel()
        appendixLabel.lineBreakMode = NSLineBreakMode.byWordWrapping
        appendixLabel.font = UIFont.systemFont(ofSize: 16)
        appendixLabel.numberOfLines = 4
        appendixLabel.sizeToFit()
        containView.addSubview(appendixLabel)
        appendixLabel.snp.makeConstraints { (make) -> Void in
            make.edges.equalTo(containView).inset(UIEdgeInsetsMake(10, 10, 10, 10))
        }

        containView.snp.makeConstraints { (make) -> Void in
            self.heightContraint = make.height.equalTo(0).constraint
            make.bottom.equalTo(contentView.snp.bottom).offset(-10)
        }

        //图标下半部分的时间线初始化。并设置相关约束。
        backpartTimeLineLabel = UIView()
        backpartTimeLineLabel.backgroundColor = UIColor.lightGray
        contentView.addSubview(backpartTimeLineLabel)
        backpartTimeLineLabel.snp.makeConstraints { (make) -> Void in
            make.left.width.equalTo(forepartTimeLineLabel)
            make.top.equalTo(timeLineIcon.snp.bottom)
            make.bottom.equalTo(contentView)
        }
    }
}
