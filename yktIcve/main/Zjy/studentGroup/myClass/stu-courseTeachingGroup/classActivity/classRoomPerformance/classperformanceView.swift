//
//  classperformanceView.swift
//  云课堂-职教云
//
//  Created by 志辉教育 on 2018/4/2.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit

class classperformanceView: UITableViewController {

    override func viewDidLoad() {
        super.viewDidLoad()
        self.title = "课堂表现"
        self.getStuSummary()
        //初始化数据，这一次数据，我们放在属性列表文件里
        tableView.register(TimeLineCell.self, forCellReuseIdentifier: "teachcell")
        tableView.tableFooterView = UIView(frame:CGRect.zero)//除去多余的cell
        if #available(iOS 9.0, *) {
            tableView.cellLayoutMarginsFollowReadableWidth = false
        } else {
            // Fallback on earlier versions
        }
        
        //让单元格自适应
        tableView!.rowHeight = UITableViewAutomaticDimension
        tableView!.estimatedRowHeight = 100
        tableView!.separatorStyle = UITableViewCellSeparatorStyle.none
        
        // Uncomment the following line to preserve selection between presentations
        // self.clearsSelectionOnViewWillAppear = false
        
        // Uncomment the following line to display an Edit button in the navigation bar for this view controller.
        // self.navigationItem.rightBarButtonItem = self.editButtonItem()
        
    }
    
    //在本例中，只有一个分区
    override func numberOfSections(in tableView: UITableView) -> Int {
        return 1;
    }
    
    override func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 130
    }
    
    //返回表格行数（也就是返回控件数）
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return  self.ProcessIn.count
    }
    
    //创建各单元显示内容(创建参数indexPath指定的单元）
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath)
        -> UITableViewCell {
            let identifier = "SwiftCell"
            var cell = tableView.dequeueReusableCell(withIdentifier: identifier)
                as? classperformanceCell
            if cell == nil{
                cell = classperformanceCell(style: .default, reuseIdentifier: identifier)
                cell?.selectionStyle = .none
            }
            
            //获取记录
            let process = self.ProcessIn[indexPath.row]
            
            var  index = 0
            index = typeTitle.index(of: process.dataType)!
            //设置时间轴上的图标
            cell?.timeLineIcon.text = typeIcons[index]
            cell?.timeLineIcon.textColor = UIColor.colorWithHex(hexColor: Int64(typeIconColor[index]))
            //设置活动类型
            cell!.dataTypeLabel.text = process.dataType
            cell?.forepartTimeLineLabel.backgroundColor = UIColor.colorWithHex(hexColor: Int64(typeIconColor[index]))
            cell?.backpartTimeLineLabel.backgroundColor = UIColor.colorWithHex(hexColor: Int64(typeIconColor[index]))
            let a = NSString(string:process.dateCreated)
            //设置时间
            cell?.dateTimeLabel.text = "\(a.substring(with: NSMakeRange(11, 5)))"
            //设置
            cell?.titleLabel.text = "参与  \(process.title)"
            cell?.titleLabel.lineBreakMode = .byTruncatingTail;
            cell?.scoreLabel.text = "得分  \(process.score)"
            self.LableTextColor(lab: (cell?.titleLabel)!, sizeFont: 14, textColor: UIColor.black, startInt: 0, len: 2)
            self.LableTextColor(lab: (cell?.scoreLabel)!, sizeFont: 14, textColor: UIColor.black, startInt: 0, len: 2)
           
            //            //设置备注信息
            //        cell?.appendixLabel.text = "参与  \(process.title)"
            //            //设置是否有备注（自动更新备注标签容器相关约束）
            //            cell?.hasAppendix = (cell?.appendixLabel.text != "")
            return cell!
    }
    func LableTextColor(lab:UILabel,sizeFont:CGFloat,textColor: Any,startInt:Int,len:Int) -> () {
        
        let attributedString = NSMutableAttributedString(string: lab.text!)
        
        attributedString.addAttribute(NSAttributedStringKey.foregroundColor, value: textColor, range: NSMakeRange(startInt, len))
        
        attributedString.addAttribute(NSAttributedStringKey.font, value: UIFont.systemFont(ofSize: sizeFont), range: NSMakeRange(startInt, len))
        
        lab.attributedText = attributedString
        
    }
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
    }

    var typeTitle = ["讨论","头脑风暴","签到","提问","抢答","随堂测验","投票","小组PK",
                     "我的表现","课前要求","测验","投票","讨论","问卷调查","作业","课后要求",
                     "学生表现","课前调研","学生总结","自我总结","课后安排","课堂评价"]
    var typeIcons = ["\u{e667}","\u{e66c}","\u{e665}","\u{e66b}","\u{e66a}","\u{e666}","\u{e6c8}","\u{e69f}",
                     "\u{e678}","\u{e67a}","\u{e666}","\u{e611}","\u{e610}","\u{e701}","\u{e677}","\u{e67a}",
                     "\u{e686}","\u{e6b9}","\u{e69b}","\u{e69b}","\u{e67a}","\u{e666}"]
    var typeIconColor = [0x54b8ff,0x879eff,0xfa8144,0x2dcaa9,0xd0de37,0x54b8ff,0xffd73e,0x2dcaa9,0xfa5544,0xd0de37,0x54b8ff,0x54b5fa,0x54b8ff,0x37deac,0xd0de37,0x797979
        ,0x54b8ff,0xd0dc77,0x54b8ff,0x54b8ff,0x797979,0xd0de37]
    let dateFormatter = DateFormatter()
    var ProcessIn = [stuInfo]()
    var  courseOpenId = ""
    var  openClassId = ""
    var  activityId = ""

    var list :NSArray = []
    var sumScore:Int = 0
    var usernameAndscore  = Dictionary<String, Any>()
    lazy var img_user : UIImageView = {
        let img = UIImageView()
        img.layer.masksToBounds = true;
        return img
    }()
    lazy var lab_userName:UILabel = {
        let lab = UILabel()
        lab.font = UIFont.init(name: "Helvetica-Light", size: 14)
        return lab
    }()
    lazy var lab_useId:UILabel = {
        let lab = UILabel()
        lab.font = UIFont.init(name: "Helvetica-Light", size: 14)
        return lab
    }()
    lazy var lab_zongfen:UILabel = {
        let lab = UILabel()
        lab.font = UIFont.init(name: "Helvetica-Light", size: 14)
        return lab
    }()
    lazy var lab_sumscore:UILabel = {
        let lab = UILabel()
        lab.font = UIFont.init(name: "Helvetica-Light", size: 14)
        return lab
    }()
    let width = UIScreen.main.bounds.width
    let height = UIScreen.main.bounds.height
}
//教学过程信息
struct stuInfo{
    let id:String //对应签到、讨论、头脑风暴、提问、随堂测验、投票 学生表 ID
    let dateCreated:String //时间
    let dataType:String //活动类型
    let stuId:String //参与学生
    let stuName:String //学生姓名
    let score:String //得分
    let title:String //对应签到、讨论、头脑风暴、提问、随堂测验、投票 标题
}

