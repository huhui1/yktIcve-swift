//
//  faceEvaluationController.swift
//  云课堂-职教云
//
//  Created by 志辉教育 on 2018/4/4.
//  Copyright © 2018年 zqy. All rights reserved.
//

import Alamofire
import SwiftyJSON

extension faceEvaluationView{
    //获取数据
    func get(){
        XLBallLoading.show(in: self.view)
        let dict = ["activityId":self.activityId,
                    "stuId":Account.defaultAccount.id!,
                    "courseOpenId":self.courseOpenId,
                    "openClassId":self.openClassId]
        Alamofire.request(appAPI.FaceTeach_getstuEvaluationInfo, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if(json["code"] == 1){
                    self.summarizeText.text = json["stuEvaluationInfo"]["StuContent"].stringValue
                    self.textViewDidEndEditing(self.summarizeText)
                    self.setScoreUI(score: Float(json["stuEvaluationInfo"]["Star"].float!))
                    self.starNumber.text = "\((json["stuEvaluationInfo"]["Star"].float!))"
                    self.Id = json["stuEvaluationInfo"]["Id"].stringValue
                    //如果已经评价过了，隐藏发布评价,禁止在次评价
                    if(self.summarizeText.text != ""){
                        self.btn_determine.isHidden = true
                        self.summarizeText.isEditable = false
                        self.view_star.isUserInteractionEnabled = false;
                    }
                }else{
                    ZKProgressHUD.showMessage("您当前未评价本次课堂教学！");
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }
    
//    func textViewDidChange(_ textView: UITextView) {
//        if textView.text.lengthOfBytes(using: .utf8) > 0 {
//            //文本框内有文字个数大于0 进行相应操作
//            self.textstate = true
//            print(self.textstate)
//        }else{
//            //文本框内有文字个数等于0 进行相应操作
//        }
//        //获取文本内容
//        let str = textView.text!
//        //通过富文本来设置行间距
//        let paraph = NSMutableParagraphStyle()
//        //将行间距设置为28
//        paraph.lineSpacing = 10
//        //样式属性集合
//        let attributes = [NSFontAttributeName:UIFont.systemFont(ofSize: 15),
//                          NSParagraphStyleAttributeName: paraph]
//        textView.attributedText = NSAttributedString(string: str, attributes: attributes)
//    }
//
//    func getScore(){
//        let vc = keyBoardView()
//        vc.modalTransitionStyle = .crossDissolve
//        vc.view.backgroundColor = UIColor(red: 0, green: 0, blue: 0, alpha: 0.1);
//        vc.setSocreClosure = {(score) in
//            if(score < 99){
//                //self.setSoceToOnline(score:score)
//            }
//            self.navigationController?.dismiss(animated: true, completion: nil)
//            
//        }
//        self.present(vc, animated: true, completion: nil)
//        
//    }
   @objc func setSoceToOnline(){
        if(self.summarizeText.text.isEmpty){
            ZKProgressHUD.showMessage("请输入评价内容!")
            return
        }
        if(self.score == 0)
        {
            ZKProgressHUD.showMessage("请选择星级!")
            return
        }
        let dict = ["OpenClassId":self.openClassId,
                    "activityId":self.activityId,
                    "Content":self.summarizeText.text,
                    "Star":self.score,
                    "UserId":Account.defaultAccount.id!,
                    "sourceType":3] as [String : Any]
        let json = ["data":JSON.init(dict)]
        Alamofire.request(appAPI.FaceTeach_addFaceTeachEvaluationStu, method: .post, parameters: json, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if(json["code"] == 1){
                    if((self.reloadsummary) != nil){
                        self.reloadsummary!(json["code"].intValue)
                    }
                    NotificationCenter.default.removeObserver(self)
                    self.navigationController?.popViewController(animated: true)
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }
        
    }
    
}
