//
//  StuRequireView.swift
//  云课堂职教云
//
//  Created by 尤增强 on 2018/4/11.
//  Copyright © 2018年 jcjy. All rights reserved.
//

import UIKit
import WebKit
import SwiftyJSON
class StuRequireView: UIViewController,WKScriptMessageHandler {

    override func viewDidLoad() {
        super.viewDidLoad()
          self.setWebUI()
            self.setBtnUI()
        self.view.backgroundColor = UIColor.white
        // Do any additional setup after loading the view.
        let item = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = item
    }

  fileprivate  func setWebUI() {

        let path = Bundle.main.path(forResource: "require", ofType: ".html",
                                    inDirectory: "HTML5/src/student/require");
        let url = URL(fileURLWithPath:path!);
        //let request = URLRequest(url:url);

        //创建供js调用的接口
        let theConfiguration = WKWebViewConfiguration()
        theConfiguration.userContentController.add(self, name: "interOp")

        //将浏览器视图全屏(在内容区域全屏,不占用顶端时间条)
//        if common.share.isX(){
//            let frame = CGRect(x:0, y:0, width:width,
//                               height:UIScreen.main.bounds.height - 70)
//            theWebView = WKWebView(frame:frame, configuration: theConfiguration)
//        }else{
            let frame = CGRect(x:0, y:0, width:width,
                               height:UIScreen.main.bounds.height - 60 + CGFloat(2 * HX))
            theWebView = WKWebView(frame:frame, configuration: theConfiguration)
//        }
        //禁用页面在最顶端时下拉拖动效果
        //                theWebView.scrollView.bounces = false;
        //                theWebView.isUserInteractionEnabled = false;
        //加载页面
        if #available(iOS 9.0, *) {
            
            theWebView.loadFileURL(url, allowingReadAccessTo: url)
        } else {
            
            do{
                
                let url1 = try common.share.fileURLForBuggyWKWebView8(fileURL:url as NSURL)
                let request = URLRequest(url:url1 as URL);
                theWebView.load(request)
                
            }catch{}
        }
        //theWebView.load(request)
        self.view.addSubview(theWebView);
    }

   fileprivate func setBtnUI(){
        self.view.addSubview(self.Btn_reply)
    
        self.Btn_reply.snp.makeConstraints { (make) in
            make.width.equalTo(width)
            make.height.equalTo(40)
            make.left.equalTo(0)
            make.bottom.equalTo(self.view.snp.bottom).offset(HX)
        }
        //self.Btn_reply.addTarget(self, action: #selector(self.btntap(_:)), for: .touchUpInside)
        self.Btn_reply.addTarget(self, action: #selector(self.replyRequire), for: .touchUpInside)

    }
    //响应处理js那边的调用
    func userContentController(_ userContentController:WKUserContentController,
                               didReceive message: WKScriptMessage) {
        let sentData = message.body as! Dictionary<String,String>

        if(sentData["method"] == "load" ){

            self.getRequireReplyList()
        }else if(sentData["method"]=="preview"){
            self.previewImg(url:sentData["url"]!);
        }else if(sentData["method"]=="details"){
            self.requireInfoDetails(json: JSON.init(parseJSON: sentData["data"]!))
        }
    }

    //返回处理h5清除页面，防内存溢出
    override func viewWillDisappear(_ animated: Bool) {
        if(!self.isPushed){
            theWebView.configuration.userContentController.removeScriptMessageHandler(forName: "interOp")

        }

        self.isPushed = false
    }
    lazy var theWebView:WKWebView = {
        let WK = WKWebView()

        return WK
    }()

    lazy var isPushed :Bool = {return false}()
  
    lazy var requireType : Int = {
        return  1
    }()
    lazy var requireId :String = {

        return ""
    }()
    lazy var openClassId :String = {

        return ""
    }()
    lazy var courseOpenId :String = {
        return ""
    }()
    lazy var activityId :String = {
        return ""
    }()
    fileprivate lazy var width = UIScreen.main.bounds.width
    fileprivate lazy var Btn_reply :UIButton = {
        let btn = UIButton()
        btn.setTitle("回复", for: .normal)
        btn.setTitleColor(UIColor.colorWithHex(hexColor: 0x333), for: .normal)
        btn.backgroundColor = UIColor.white
        return btn
    }()

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    let HX = common.share.returnSafeAreaLineHeight()

    /*
    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        // Get the new view controller using segue.destinationViewController.
        // Pass the selected object to the new view controller.
    }
    */

}
