//
//  groupPKTableView.swift
//  yunketang
//
//  Created by 尤增强 on 2018/2/23.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import SwiftyJSON
class groupPKTableView: UIViewController,UITableViewDelegate,UITableViewDataSource {

    override func viewDidLoad() {
        super.viewDidLoad()

        self.view.backgroundColor = UIColor.white

        self.setTableviewUI()

        self.getData()
        let item = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = item
        // Uncomment the following line to preserve selection between presentations
        // self.clearsSelectionOnViewWillAppear = false

        // Uncomment the following line to display an Edit button in the navigation bar for this view controller.
        // self.navigationItem.rightBarButtonItem = self.editButtonItem()
    }


    func setTableviewUI(){
        //创建表视图

        var fheight = 0 ;
        if((self.navigationController) == nil){
            fheight = 60
        }
        //将浏览器视图全屏(在内容区域全屏,不占用顶端时间条)
        self.tableView = UITableView.init(frame: CGRect(x:CGFloat(0), y:CGFloat(fheight), width:UIScreen.main.bounds.width, height:UIScreen.main.bounds.height - 110));

        self.tableView.delegate = self;
        self.tableView.dataSource = self;

        tableView.register(groupPKTableViewCell.self, forCellReuseIdentifier: "zqycell")

        tableView.tableFooterView = UIView(frame:CGRect.zero)//除去多余的cell
        tableView.separatorInset = UIEdgeInsets.zero;

        tableView.layoutMargins = UIEdgeInsets.zero;

        if #available(iOS 9.0, *) {
            tableView.cellLayoutMarginsFollowReadableWidth = false
        } else {
            // Fallback on earlier versions
        }

        self.view.addSubview(self.tableView!);
    }

  

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 70
    }

    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        // #warning Incomplete implementation, return the number of rows
        return self.list.count
    }


    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {

       let cell:groupPKTableViewCell = tableView.dequeueReusableCell(withIdentifier: "zqycell") as! groupPKTableViewCell

       let json = JSON(self.list[indexPath.row])
        cell.accessoryType = .disclosureIndicator
//        "GroupScore" : 0,
//        "GroupStuCount" : 1,
//        "GroupName" : "第1组",
//        "isJoinGroup" : 1,
//        "Id" : "qkisahgoy7tjqydq73aogq"
        let str = "小组人数:\(json["GroupStuCount"].stringValue) \(json["isJoinGroup"].intValue > 0 ? "已加入":"")"
        //富文本设置
        let attributeString = NSMutableAttributedString(string:str)
        //设置字体颜色
        attributeString.addAttribute(NSAttributedStringKey.foregroundColor, value: UIColor.black,
                                     range: NSMakeRange(0,5))
        cell.lab_num.attributedText = attributeString
        cell.lab_Title.text = json["GroupName"].stringValue
        cell.lab_scoreNum.text = " x \(json["GroupScore"])"

        return cell
    }


    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        let json = JSON(self.list[indexPath.row])
        let vc = stuJoinGroupPkTableView()
        vc.PKId = self.groupPKId
        vc.groupId = json["Id"].stringValue
        vc.title = "小组成员"
        vc.isJoinGroup = json["isJoinGroup"].intValue
        vc.openClassId = self.openClassId
     
        vc.reloadClosure={()in
            self.getData()
        }
        if((self.navigationController) != nil){
             self.navigationController?.pushViewController(vc, animated: true)
        }else{
            self.present(vc, animated: true, completion: nil)
        }

    }

  

    var list :NSArray = [];
    lazy var activityId = ""
    lazy var openClassId :String = {
        return ""
    }()
    lazy var courseOpenId = ""
    lazy var groupPKId = ""
    lazy var creatorId = ""
    lazy var user :String = {return ""}()
    var tableView:UITableView!

    

}
