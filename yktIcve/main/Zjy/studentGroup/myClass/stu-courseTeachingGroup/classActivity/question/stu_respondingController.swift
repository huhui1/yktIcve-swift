//
//  stu_respondingController.swift
//  云课堂-职教云
//
//  Created by 尤增强 on 2018/3/8.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire

extension stu_respondingView {
    //获取抢答内容
    func getData(){
        let dict = ["askId" :self.quizId] as [String : Any]
        Alamofire.request(appAPI.FaceTeach_getStuAskedList, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    self.questitle.text = json["title"].stringValue
                    self.center.text = json["content"].stringValue
                    if(self.center.text.count < 1){
                        self.center.text = "此提问暂无内容"
                    }
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }
    }
    //学生抢答
   @objc func stuResponding(){

        //        var data_josn = {
        //            CourseOpenId: _this.courseOpenId,
        //            OpenClassId: _this.openClassId,
        //            ActivityId: _this.activityId,
        //            QuizId: _this.actId,
        //            StuId: $user.id,
        //            SourceType: $user.sourceType
        //
        //        };

        let dict = ["CourseOpenId": self.courseOpenId,
                    "OpenClassId":self.openClassId,
                    "ActivityId":self.activityId,
                    "QuizId":self.quizId,
                    "StuId":Account.defaultAccount.id!,
                    "SourceType":3
            ] as [String : Any]
//        ZKProgressHUD.setAnimationStyle(.chrysanthemum);
//        ZKProgressHUD.show();
        XLBallLoading.show(in: self.view)
        let data = ["data":JSON.init(dict)]
        Alamofire.request(appAPI.FaceTeach_stuResponsed, method: .post, parameters: data, encoding: URLEncoding.default).responseJSON { response in

            if let value = response.result.value {
                let json = JSON(value)
//                ZKProgressHUD.hide()
                if json["code"] == 1{
                    self.btnResponding.setTitle("恭喜，抢到机会", for: .normal)
                    self.btnResponding.isEnabled = false
                    self.sendGeTUI()
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }

    }

    //判断学生是否抢答过
    func isResponded(){

        //        stuId: $user.id, quizId: _this.actId,
        let dict = ["stuId": Account.defaultAccount.id!,
                    "quizId":self.quizId]
        //        ZKProgressHUD.setAnimationStyle(.chrysanthemum);
//
//        ZKProgressHUD.show();
         XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.FaceTeach_isResponsed, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in

            if let value = response.result.value {
                let json = JSON(value)
//                ZKProgressHUD.hide()
                if json["code"] == 1{
                    self.btnResponding.setTitle("恭喜，抢到机会", for: .normal)
                    self.btnResponding.isEnabled = false

                }else{
                    self.btnResponding.isEnabled = true
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }


    }


    //发送个推信息

    func sendGeTUI(){

//
//        var datajson = {
//            actionType: "responded",
//            actId: _this.actId,
//            userId: $user.id,
//            displayName: $user.displayName,
//            avator: $user.avatar
//        };
        let dict = ["actionType":"responded",
                    "actId":self.quizId,
                    "userId":Account.defaultAccount.id!,
                    "displayName":Account.defaultAccount.displayName!,
                    "avator":Account.defaultAccount.avatar]

    geTuiSendController.share.sendGTMsgToUser(data:JSON.init(dict).description,creatorId:self.creatorId)
    }

}
