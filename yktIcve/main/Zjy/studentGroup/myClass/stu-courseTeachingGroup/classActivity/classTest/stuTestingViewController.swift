//
//  stuTestingViewController.swift
//  yunketang
//
//  Created by zqy on 2018/3/1.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire

extension stuTestingView {


    //返回提示
  @objc  func backBtnClick(){


        let alertController = UIAlertController(title: "返回提醒",
                                                message: "监测到此次测验作答未提交，是否要退出？退出后记录会保存但结束时不会提交此次记录", preferredStyle: .alert)
        let cancelAction = UIAlertAction(title: "取消", style: .cancel, handler: nil)
        let okAction = UIAlertAction(title: "确定", style: .default, handler: {
            action in
            if (self.navigationController != nil) {
                self.navigationController?.popViewController(animated: true)
            }else {
                self.theWebView.configuration.userContentController.removeScriptMessageHandler(forName: "interOp")
                self.presentingViewController?.dismiss(animated: true, completion: nil);
            }
        })
        alertController.addAction(cancelAction)
        alertController.addAction(okAction)
        self.present(alertController, animated: true, completion: nil)
    }
    func getClassTestData(isfirst: Bool){
        let dict = ["activityId":self.activityId,
                    "openClassId":self.openClassId,
                    "classTestId":self.examId,
                    "stuId":Account.defaultAccount.id!]
        
        Alamofire.request(appAPI.FaceTeach_getAndSaveStuAnswerRecord, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if(json["code"]>0){
                    if json["stuQuesList"].count > 0{
                       self.classTestStuId = json["classTestStuId"].stringValue
                       self.dataJson = json
                    }
                    if(isfirst){
                        self.theWebView.evaluateJavaScript("examhandle.get(\(self.dataJson),'\(Account.defaultAccount.id!)','\(Account.defaultAccount.schoolId!)','\(self.openClassId)','\(self.examId)')",
                            completionHandler: nil)
                    }
                    
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }

    }

    //通过附件url
    
    func getFileByUrl(URL:String){
        let dict = ["url": URL]
        
        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.MobileLogin_getFileInfoByUrl, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    
                    self.pushView(data: json["url"].stringValue)
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }
    
    //学生提交试卷
    func submitAll(isAllHandle:String){


            var msgConfrim = "有题目" + isAllHandle + "题未作答，确认提交么？"
            if(isAllHandle == "1"){
                msgConfrim = "确定要提交吗？"
            }
            let alertController = UIAlertController(title: "提交测验",
                                                    message: msgConfrim, preferredStyle: .alert)
            let cancelAction = UIAlertAction(title: "取消", style: .cancel, handler: nil)
            let okAction = UIAlertAction(title: "确定", style: .default, handler: {
                action in
                self.confirmSubmit()
            })
            alertController.addAction(cancelAction)
            alertController.addAction(okAction)
            self.present(alertController, animated: true, completion: nil)

    }

    func showPreviewImg(url:String){
        let vc = PicturePreviewView()
        vc.imgurl = url
        self.isPushed =  true
        self.navigationController?.pushViewController(vc, animated: true)
    }

    func confirmSubmit(){
        let dict = ["classTestStuId":self.classTestStuId,
                    "useTime":self.timeCount,
                    "sourceType":3] as [String : Any]
        //        ZKProgressHUD.setAnimationStyle(.chrysanthemum);
//
//        ZKProgressHUD.show();
         XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.FaceTeach_submitClassTestStu, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if(json["code"]>0){
                    //向老师发送推送
                    self.pushmessage()
                    if((self.reloadClosure) != nil){
                        self.reloadClosure!();
                    }
                    if(( self.navigationController) != nil){
                        self.navigationController?.popViewController(animated: true)
                    }else{
                        self.dismiss(animated: true, completion: nil)
                    }
//                    ZKProgressHUD.hide()
        
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                 XLBallLoading.hide(in: self.view)
            }
        }
        
    }
    //发送个推消息
    func pushmessage(){

        let dict = ["actionType":"tested",
                    "actId":self.examId,
                    "userId":Account.defaultAccount.id!,
                    "displayName":Account.defaultAccount.displayName!]
        geTuiSendController.share.sendGTMsgToUser(data:JSON.init(dict).description,creatorId:self.creatorId)
    }

    //打开观看
    func pushView(data:String){
        let json = JSON.init(parseJSON: data)
        switch json["category"] {
        case "video":
            let vc = videoPlayView()
            vc.isFromZjyErrorQuestion = true
            vc.videourls.removeAll()
            vc.videourls.append(json["urls"]["preview"].stringValue)
            self.isPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
            print(22)
        case "mp3":
            let  vc = audioViewController();
            if(!json["urls"]["preview_oss_gen"].stringValue.isEmpty){
                vc.audiourl = json["urls"]["preview_oss_gen"].stringValue
            }else{
                vc.audiourl = json["urls"]["preview"].stringValue
            }
            vc.title = "作业附件音频"
            vc.isNet = true
            self.isPushed = true
            vc.hidesBottomBarWhenPushed = true
            self.navigationController?.pushViewController(vc, animated: true)

        case "img":

            let vc = PicturePreviewView()
            vc.imgurl = json["urls"]["preview_oss_ori"].stringValue
            if(json["urls"]["preview_oss_ori"].stringValue.isEmpty){
                vc.imgurl = json["urls"]["preview"].stringValue
            }
            self.isPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        case "office","ppt","pptx","doc","docx":
            if(json["isH5"].intValue == 1){
                let vc = PPT_Animation_PreviewView()
                self.isPushed = true
                vc.linkStr = json["h5PreviewUrl"].stringValue
                vc.hidesBottomBarWhenPushed = true
                self.navigationController?.pushViewController(vc, animated: true)
            }else{
                let  vc = stuImage_ppt_wordPreviewVC()
                vc.resourceUrl = data
                self.isPushed = true
                vc.isfirst = false
                self.navigationController?.pushViewController(vc, animated: true)
            }
        default:

            print("11")
        }
    }
    
}
