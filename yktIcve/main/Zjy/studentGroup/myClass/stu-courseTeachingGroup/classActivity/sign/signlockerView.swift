//
//  signlockerView.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2018/2/8.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import WebKit
import SwiftyJSON

class signlockerView: UIViewController,WKScriptMessageHandler {
    var refreshList:signModel?
    override func viewDidLoad() {
        super.viewDidLoad()
        self.setWebUI()


        // Do any additional setup after loading the view.
        let item = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = item
    }



    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    func setWebUI(){

        let path = Bundle.main.path(forResource: "locker", ofType: ".html",
                                    inDirectory: "HTML5/src/student/class");
        let url = URL(fileURLWithPath:path!);
        //let request = URLRequest(url:url);

        //创建供js调用的接口
        let theConfiguration = WKWebViewConfiguration()
        theConfiguration.userContentController.add(self, name: "interOp")

        var fheight = 0 ;
        if((self.navigationController) == nil){
            fheight = 60
        }
        //将浏览器视图全屏(在内容区域全屏,不占用顶端时间条)
        let frame = CGRect.init(x: CGFloat(0), y:CGFloat(fheight), width: UIScreen.main.bounds.width, height: UIScreen.main.bounds.height - 60);

        theWebView = WKWebView(frame:frame, configuration: theConfiguration)
        //禁用页面在最顶端时下拉拖动效果
         theWebView.scrollView.bounces = false;

        //加载页面
        if #available(iOS 9.0, *) {
            
            theWebView.loadFileURL(url, allowingReadAccessTo: url)
        } else {
            
            do{
                
                let url1 = try common.share.fileURLForBuggyWKWebView8(fileURL:url as NSURL)
                let request = URLRequest(url:url1 as URL);
                theWebView.load(request)
                
            }catch{}
        }
        //theWebView.load(request)
        self.view.addSubview(theWebView);
    }

    override func viewWillDisappear(_ animated: Bool) {
        theWebView.configuration.userContentController.removeScriptMessageHandler(forName: "interOp")
    }
    //响应处理js那边的调用

    func userContentController(_ userContentController:WKUserContentController,
                               didReceive message: WKScriptMessage) {
        let sentData = message.body as! Dictionary<String,String>

        if(sentData["method"] == "load" ){
        self.theWebView.evaluateJavaScript("locker.setgesture('\(gesture)');",
                completionHandler: nil)

        }else  if(sentData["method"] == "done" ){
            
            self.donePushVc()
        }
    }

    //手势成功后的跳转

    func donePushVc(){
        let vc = signingView()
        vc.activityId = self.activityId
        vc.signId = self.signId
        vc.courseOpenId = self.courseOpenId
        vc.openClassId = self.openClassId
        vc.creatorId = self.creatorId
        vc.signType = 2
        vc.refreshList = refreshList
        vc.state = 2
        if((self.navigationController) != nil){
            self.navigationController?.pushViewController(vc, animated: true);
            let count = self.navigationController?.viewControllers.count
            self.navigationController?.viewControllers.remove(at: count! - 2)
        }else{
            self.present(vc, animated: true, completion: nil)
        }
    }

    lazy var theWebView:WKWebView = {
        let WK = WKWebView()

        return WK
    }()
    lazy var activityId = ""
    lazy var openClassId = ""
    lazy var courseOpenId = ""
    lazy var signId = ""
    lazy var creatorId = ""
    lazy var gesture = ""
   
    



}
