//
//  stu_brainstromInfoView.swift
//  云课堂2
//  学生头脑分暴结束界面
//  Created by 尤增强 on 2018/6/25.
//  Copyright © 2018年 jcjy. All rights reserved.
//

import UIKit
import SwiftyJSON

class stu_brainstromInfoView: UIViewController,brainstromInfoCellDelegate {


    var brainStormInfos = [stuBrainStormInfo]()

    lazy var courseOpenId :String = {
        return ""
    }()

    lazy var creatorId :String = {

        return ""
    }()

    lazy var openClassId :String = {

        return ""
    }()
    lazy var activityId :String = {

        return ""
    }()
    lazy var brainStormId :String = {

        return ""
    }()
    var numberline = 4

    @IBOutlet weak var flowLayout: UICollectionViewFlowLayout!
    @IBOutlet weak var collectionView: UICollectionView!

    var data = JSON()
 
    var imgList = [UploadDocModel]()

    let width = UIScreen.main.bounds.width;

    override func viewDidLoad() {
        super.viewDidLoad()
        self.setCollectionUI()
        self.getBrainStrom(isRefresh: true)
        let item = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = item
        // Do any additional setup after loading the view.
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    init() {
        super.init(nibName: "stu_brainstromInfoView", bundle: nil)
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    func BBSHeadView_backImgUrl(str: String) {
        let vc = PicturePreviewView()
        vc.imgurl = str
        self.navigationController?.pushViewController(vc, animated: true)
    }

    func BBSHeadView_viewMore(height: CGFloat) {

      self.numberline = 0
      self.setUIByData(height: height)

    }

    func brainstrom_backImgUrl(str: String) {
        let vc = PicturePreviewView()
        vc.imgurl = str
        self.navigationController?.pushViewController(vc, animated: true)
    }

}

extension stu_brainstromInfoView:BBSHeadViewDelegate,UICollectionViewDelegate,UICollectionViewDataSource  {



    /// 设置collection UI代理
    func setCollectionUI(){
        if(UIDevice.current.model != "iPad"){
            self.flowLayout.itemSize  = CGSize.init(width: width  / 2, height:240)
        }
        self.collectionView.delegate = self
        self.collectionView.dataSource = self
        self.collectionView.register(UINib.init(nibName: "brainstromInfoCell", bundle: nil), forCellWithReuseIdentifier: "brainstromInfoCell")
        // 注册一个headView
        self.collectionView.register(brainstromViewHeaderView.self, forSupplementaryViewOfKind:UICollectionElementKindSectionHeader, withReuseIdentifier: brainstromHeaderIdentifier)
        
    }

    //分区的header与footer
    func collectionView(_ collectionView: UICollectionView,
                        viewForSupplementaryElementOfKind kind: String,
                        at indexPath: IndexPath) -> UICollectionReusableView {
        var reusableview:UICollectionReusableView!

        if kind == UICollectionElementKindSectionHeader
        {

            if(reusableview == nil){
                reusableview = collectionView.dequeueReusableSupplementaryView(ofKind: kind, withReuseIdentifier: brainstromHeaderIdentifier, for: indexPath) as! brainstromViewHeaderView
            }

            (reusableview as! brainstromViewHeaderView).headview.numberline = self.numberline

            (reusableview as! brainstromViewHeaderView).headview.deletegate = self
            (reusableview as! brainstromViewHeaderView).setDataForUI(content: self.data["stormInfo"]["Content"].stringValue, title: self.data["stormInfo"]["Title"].stringValue, imgList: self.imgList)
        }

        return reusableview
    }

    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        let m = self.brainStormInfos[indexPath.row]
        let vc = stormDetailsView()
        vc.brainstorm = m
        self.navigationController?.pushViewController(vc, animated: true)
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let m = self.brainStormInfos[indexPath.row]
        let cell :brainstromInfoCell = collectionView.dequeueReusableCell(withReuseIdentifier: "brainstromInfoCell", for: indexPath) as! brainstromInfoCell
        cell.setDataForUI(m: m,_index: indexPath.row,_isStu: true)
        cell.deletgate = self
        return cell
    }

    func numberOfSections(in collectionView: UICollectionView) -> Int {
        return 1
    }

    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return  self.brainStormInfos.count
    }

}
