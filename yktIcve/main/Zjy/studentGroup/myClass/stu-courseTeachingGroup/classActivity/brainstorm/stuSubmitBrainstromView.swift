//
//  stuSubmitBrainstromView.swift
//  云课堂2
//
//  Created by 尤增强 on 2018/7/26.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit

class stuSubmitBrainstromView: UIViewController,UITextViewDelegate {
    @IBOutlet weak var title_content: UILabel!
    @IBOutlet weak var lab_title: UILabel!
    @IBOutlet weak var contenViewHeight: NSLayoutConstraint!
    @IBOutlet weak var contenView: UIView!
    
    @IBOutlet weak var addImg: UIButton!
    @IBOutlet weak var collectionHeight: NSLayoutConstraint!
    @IBOutlet weak var collectionView: UICollectionView!
    var upImg = UIImage()
    @IBOutlet weak var answerText: UITextView!
    var reloadactivityListClosure :(() ->Void)?
    override func viewDidLoad() {
        super.viewDidLoad()
        self.setUICollectionView()
        self.getBrainStromData()
        //监听键盘弹出通知
        NotificationCenter.default
            .addObserver(self,selector: #selector(keyboardWillShow(_:)),
                         name: NSNotification.Name.UIKeyboardWillShow, object: nil)
        //监听键盘隐藏通知
        NotificationCenter.default
            .addObserver(self,selector: #selector(keyboardWillHide(_:)),
                         name: NSNotification.Name.UIKeyboardWillHide, object: nil)
        let buildItem = UIBarButtonItem.init(title: "提交", style: UIBarButtonItemStyle.plain, target :self, action: #selector(self.revisebrainstrom));
        self.answerText.delegate = self
        self.navigationItem.rightBarButtonItem = buildItem;
        // Do any additional setup after loading the view.
    }
    init() {
        super.init(nibName: "stuSubmitBrainstromView", bundle: nil)
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    func textViewShouldBeginEditing(_ textView: UITextView) -> Bool {
        self.answerText.inputAccessoryView = toolBar;
        return true
    }
    @objc func Done(){
        self.view.endEditing(true)
    }
    // 键盘显示
    @objc func keyboardWillShow(_ notification: Notification) {

        let userInfo = (notification as NSNotification).userInfo!
        //键盘尺寸
        let keyboardSize = (userInfo[UIKeyboardFrameBeginUserInfoKey]
            as! NSValue).cgRectValue
        var contentInsets:UIEdgeInsets
        contentInsets = UIEdgeInsetsMake(104.0, 0.0, (keyboardSize.height), 0.0);
        self.view.frame = CGRect.init(x:0, y: -104, width:self.view.bounds.width, height: self.view.bounds.height);

    }

    // 键盘隐藏
    @objc func keyboardWillHide(_ notification: Notification) {

        //还原tableview的contentview大小
        let _:UIEdgeInsets = UIEdgeInsetsMake(64.0, 0.0, 0, 0.0);
        if(self.navigationController != nil){
            self.view.frame = CGRect.init(x:0, y: 64, width:self.view.bounds.width, height: self.view.bounds.height);

        }else{
            self.view.frame = CGRect.init(x:0, y: 0, width:self.view.bounds.width, height: self.view.bounds.height);
        }

    }

    //键盘隐藏
    override func touchesEnded(_ touches: Set<UITouch>, with event: UIEvent?) {
        self.view.endEditing(true)
    }
    //移除监听
    override func viewDidDisappear(_ animated: Bool) {
        NotificationCenter.default.removeObserver(self)
    }

    override func viewDidAppear(_ animated: Bool) {
        let t = self.title_content.frame.height -  150
        if(t > 0){
            self.contenViewHeight.constant = t
        }
    }
    override func viewDidLayoutSubviews() {
        self.addImg.setTitle("\u{e635}", for: .normal)
        self.addImg.setTitle("", for: .selected)
        self.addImg.titleLabel?.font = UIFont.init(name: "iconfont", size: 36)
        self.addImg.setTitleColor(UIColor.colorWithHex(hexColor: 0x818cf5), for: .normal)
        self.answerText.layer.borderWidth = 0.5
        self.answerText.layer.borderColor = UIColor.lightGray.cgColor
        toolBar = common.share.AddToolKeyboardDoneBar()
        let doneButton = UIBarButtonItem(title: "确定", style: .plain, target: self, action: #selector(self.Done));
        let spaceButton = UIBarButtonItem(barButtonSystemItem: .flexibleSpace, target: nil, action: nil)
        toolBar.setItems([spaceButton,doneButton], animated: false);

    }
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    @IBAction func addImgAction(_ sender: UIButton) {
        if(sender.isSelected){
            let vc = uploadImgPreviewView()
            if(self.docOssPreview.isEmpty){
                 vc.img = self.upImg
            }else{
                vc.imgurl = self.docOssPreview
            }

            vc.reloadImglistClosure = {(index) in
                self.docJson.removeAll()
                self.addImg.isSelected = false
            }
            vc.modalTransitionStyle = .crossDissolve
           self.present(vc, animated: true, completion: nil)
        }else{
          self.upload()
        }
    }
    lazy var openClassId :String = {

        return "";
    }()
    lazy var activityId :String = {

        return "";
    }()
    lazy var courseOpenId :String = {

        return "";
    }()
    lazy var brainStromingId :String = {

        return "";
    }()
     lazy var creatorId = ""
    var docPreviewList = [String]()
    var docOssPreviewList = [String]()
    lazy var uploadUrl : String = {

        return ""
    }()
    var docOssPreview = "";
    var toolBar = UIToolbar();
    var docJson = [Dictionary<String, String>]();
    /*
    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        // Get the new view controller using segue.destinationViewController.
        // Pass the selected object to the new view controller.
    }
    */

}

extension stuSubmitBrainstromView:UICollectionViewDelegate,UICollectionViewDataSource {


    func setUICollectionView(){
         self.collectionView.register(UINib.init(nibName: "itemImgCell", bundle: Bundle.main), forCellWithReuseIdentifier: "itemImgCell")
        self.collectionView.delegate = self
        self.collectionView.dataSource = self
    }

    //collectionView单元格创建
    func collectionView(_ collectionView: UICollectionView,
                        cellForItemAt indexPath: IndexPath)
        -> UICollectionViewCell {
            let cell  = collectionView.dequeueReusableCell(withReuseIdentifier: "itemImgCell", for: indexPath) as! itemImgCell
            common.share.setSDImg(str: self.docPreviewList[indexPath.row], imgview: cell.thumbnail)
            return cell
    }

    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
         let url = self.docOssPreviewList[indexPath.row]
         let vc = PicturePreviewView()
         vc.imgurl = url
         self.navigationController?.pushViewController(vc, animated: true)
      }

    //collectionView单元格数量
    func collectionView(_ collectionView: UICollectionView,
                        numberOfItemsInSection section: Int) -> Int {

        return self.docPreviewList.count
    }

}
