//
//  activityTableController.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2018/2/9.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire
import SCLAlertView

extension  activityTableView {
    
    //获取活动列表
    func refreshItemData( isRefresh:Bool){
        XLBallLoading.show(in: self.view)
        
        let dict = ["activityId":self.activityId,
                    "classState":self.classState,
                    "stuId":Account.defaultAccount.id!,
                    "openClassId":self.openClassId] as [String : Any]
        Alamofire.request(appAPI.FaceTeach_getStuFaceActivityList, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if(json["code"]>0){

//                     lazy var states = ["","未开始","进行中","已结束","未总结","未评价","已总结","已评价","课堂表现"]
                    if(self.classState == 3){


                        var isEvaluation  = "5",isSum = "4";

                        switch json["isEvaluation"].intValue {
                        case 1:
                         isEvaluation = "7"
                        case 2:
                            isSum = "6"
                        case 3:
                             isEvaluation = "7"
                             isSum = "6"
                        default:
                            isEvaluation  = "5"
                            isSum = "4"
                        }
                        let dic1 = ["DataType": "总结", "Title": "自我总结","State":isSum]
                        let dic2 = ["DataType": "课堂表现", "Title": "课堂表现","State":"8"]
                        let dic3 = ["DataType": "评价", "Title": "课堂评价","State":isEvaluation ]

                        self.list =  json["dataList"].arrayValue
                        self.list.append(dic1)
                        self.list.append(dic2)
                        self.list.append(dic3)
                        
                    }else{
                        self.list = json["dataList"].arrayValue
                    }
                    
                    //重现加载表格数据
                    self.tableView!.reloadData();
                    if(!isRefresh){
                        //结束刷新
                        self.tableView!.mj_header.endRefreshing();
                    }
                    
                    common.share.setTableFootView_noData(self.tableView, list: self.list as NSArray)
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
        
    }

    //点击挑转页面
    func pushVCByType(indexPath: IndexPath){
        
        let json = JSON(self.list[indexPath.row])

        switch json["DataType"] {
        case "签到":
            self.pushSignVc(json:json)
        case "测验":
            self.pushTestVC(json:json)
        case "小组PK":
            self.pushGroupPK(json:json)
        case "提问":
            self.pushAskQuestion(json:json)
        case "讨论":
            self.pushStudiscuss(json:json)
        case "头脑风暴":
            self.pushStubrainstorm(json:json)
        case "总结":
            self.pushconclusion(json: json)
        case "课堂表现":
            self.classroomperformance(json: json)
        case "投票":
            self.pushVote(json:json)
        case "评价":
            self.faceEvaluation(json: json)
        case "课前要求":
            self.pushRequire(json:json,type:1)
        case "课后安排":
            self.pushRequire(json:json,type:2)
        case "问卷调查":
            self.Questionnaire(json: json)
        case "作业":
            self.stuhomework(json:json)
        case "考试":
            self.stuexam(json:json)
        case "课件":
//            self.stucourse(json:json)
//            self.getUrl(cell: json)
            self.isfileDownload(cell: json)
        default:
            print("1111")
        }

    }
    //课前要求
    func pushRequire(json:JSON,type :Int){
        let vc = StuRequireView()
        vc.openClassId = self.openClassId
        vc.courseOpenId = self.courseOpenId
        vc.activityId = self.activityId
        if type == 1{
            vc.title = "课前要求"
        }else{
            vc.title = "课后安排"
        }
        vc.requireType = type
        self.navigationController?.pushViewController(vc, animated: true)

    }
    //跳转到签到
    func pushSignVc(json:JSON){
        if(json["isAttend"].intValue == 0 && json["SignType"].intValue == 2 && json["State"].intValue == 2){
            let vc = signlockerView()
            vc.activityId = self.activityId
            vc.openClassId = self.openClassId
            vc.creatorId = json["CreatorId"].stringValue
            vc.courseOpenId = self.courseOpenId
            vc.signId = json["Id"].stringValue
            vc.gesture = json["Gesture"].stringValue
            vc.title = json["Title"].stringValue
            vc.refreshList = refreshList
            self.navigationController?.pushViewController(vc, animated: true)
        }else{
            let vc = signingView()
            vc.activityId = self.activityId
            vc.openClassId = self.openClassId
            vc.creatorId = json[""].stringValue
            vc.courseOpenId = self.courseOpenId
            vc.creatorId = json["CreatorId"].stringValue
            vc.signId = json["Id"].stringValue
            vc.isAttend = json["isAttend"].intValue
            vc.title = json["Title"].stringValue
            vc.refreshList = refreshList
            vc.state = json["State"].intValue
            self.navigationController?.pushViewController(vc, animated: true)
        }
        
    }
    
    //跳转测验
    
    func pushTestVC(json:JSON){
        if(json["State"].intValue == 3 ){
            if(json["isAttend"].intValue>0){
                let vc = examreportView()
                vc.activityId = self.activityId
                vc.openClassId = self.openClassId
                vc.courseOpenId = self.courseOpenId
                vc.examId = json["Id"].stringValue

                self.navigationController?.pushViewController(vc, animated: true)
            }else{
                let vc = stuPreviewTestView()
                vc.activityId = self.activityId
                vc.openClassId = self.openClassId
                vc.courseOpenId = self.courseOpenId
                vc.examId = json["Id"].stringValue

                vc.title = "测验分析"
                self.navigationController?.pushViewController(vc, animated: true)
            }
        } else {
            if(json["isAttend"].intValue>0 && json["ViewAnswer"].intValue == 2){
                ZKProgressHUD.showMessage("测验结束后方可查看结果!");
                return
            }
            let vc = stuTestingView()
            vc.examId = json["Id"].stringValue
            vc.activityId = self.activityId
            vc.openClassId = self.openClassId
            vc.courseOpenId = self.courseOpenId
            vc.creatorId = json["CreatorId"].stringValue

            vc.reloadClosure = {() in
                self.refreshItemData(isRefresh: true)
            }
            self.navigationController?.pushViewController(vc, animated: true)

        }
    }
    
    //小组PK
    func pushGroupPK(json:JSON){

        let vc = groupPKTableView()
        vc.groupPKId = json["Id"].stringValue
        vc.openClassId = self.openClassId
        vc.title = json["Title"].stringValue
        self.navigationController?.pushViewController(vc, animated: true)
    }
    //学生投票
    func pushVote(json:JSON){
        if(json["State"].intValue == 3){
            let vc = stuPreviewVoteResultView()
            vc.voteId = json["Id"].stringValue

            self.navigationController?.pushViewController(vc, animated: true)
        }else{
            if(json["isAttend"].intValue>0){
                let vc = stuPreviewVoteResultView()
                vc.voteId = json["Id"].stringValue

                self.navigationController?.pushViewController(vc, animated: true)
            }else{
                let vc = voteIngView()
                vc.openClassId = self.openClassId
                vc.voteId = json["Id"].stringValue

                vc.title = json["Title"].stringValue
                vc.reload = {() in
                    self.refreshItemData(isRefresh: false)
                }
                self.navigationController?.pushViewController(vc, animated: true)
            }
        }
        
    }
    //学生抢答
    func pushAskQuestion(json:JSON){
        if(json["State"].intValue == 2){
            if(json["AskType"].intValue == 1 || json["AskType"].intValue == 2){
                let vc = stu_respondQuestionView()
                vc.quizId = json["Id"].stringValue
                vc.title = json["Title"].stringValue
                self.navigationController?.pushViewController(vc, animated: true)
            }else{
                let vc = stu_respondingView()
                vc.quizId = json["Id"].stringValue
                vc.activityId = self.activityId
                vc.openClassId = self.openClassId
                vc.courseOpenId = self.courseOpenId
                vc.creatorId = json["CreatorId"].stringValue
                vc.title = json["Title"].stringValue
                self.navigationController?.pushViewController(vc, animated: true)
            }
        }else if(json["State"].intValue == 3){
            let vc  = stu_respondOverView()
            vc.activityId = self.activityId
            vc.courseOpenId = self.courseOpenId
            vc.quizId = json["Id"].stringValue
            vc.openClassIds = self.openClassId
            vc.title = json["Title"].stringValue
            vc.askType =  json["AskType"].intValue
            vc.state = 3
            self.navigationController?.pushViewController(vc, animated: true);
        }
    }
    //讨论
    func pushStudiscuss(json:JSON){
        let vc = stuDisscussView()
        vc.discussId = json["Id"].stringValue
        vc.courseOpenId = self.courseOpenId
        vc.openClassId = self.openClassId
        vc.creatorId = json["CreatorId"].stringValue
        vc.status = json["status"].stringValue
        vc.type = json["State"].intValue
        self.navigationController?.pushViewController(vc, animated: true)
    }
    //头脑风暴
    func pushStubrainstorm(json:JSON){
        if(json["State"].intValue == 3){

            let vc = stu_brainstromEndView()
            vc.brainStormId = json["Id"].stringValue
            vc.courseOpenId = self.openClassId
             vc.activityId = self.activityId
            vc.openClassId = self.openClassId

            self.navigationController?.pushViewController(vc, animated: true)
        }else {

            let vc = stuSubmitBrainstromView()
            vc.brainStromingId = json["Id"].stringValue
            vc.courseOpenId = self.openClassId
            vc.creatorId = json["CreatorId"].stringValue
            vc.openClassId = self.openClassId
            vc.reloadactivityListClosure = { () in
                self.refreshItemData(isRefresh:false)
            }
            vc.activityId = self.activityId
            vc.title = json["Title"].stringValue
           self.navigationController?.pushViewController(vc, animated: true)}
    }
    
    //总结
    func pushconclusion(json:JSON){
        let vc = conclusionView()
        vc.openClassId = self.openClassId
        vc.activityId = self.activityId

        vc.reloadsummary = {(int) in
            if(int == 1){
                self.refreshItemData( isRefresh:true)
            }
        }
        self.navigationController?.pushViewController(vc, animated: true)
    }
    //课堂表现
    func classroomperformance(json:JSON)
    {
        let vc = classperformanceView()

        vc.openClassId = self.openClassId
        vc.courseOpenId = self.courseOpenId
        vc.activityId = self.activityId
        self.navigationController?.pushViewController(vc, animated: true)
    }
    //面授评价
    func faceEvaluation(json:JSON)
    {
        if(self.classState == 3){
            let vc = faceEvaluationView()
            vc.openClassId = self.openClassId
            vc.courseOpenId = self.courseOpenId
            vc.activityId = self.activityId

            vc.reloadsummary = {(int) in
                if(int == 1){
                    self.refreshItemData( isRefresh:true)
                }
            }
          self.navigationController?.pushViewController(vc, animated: true)

    }
  }
    
    
    
//课堂教学课件跳转
    //判断文件是否被下载过
    func  isfileDownload(cell:JSON){
        let cx = SQLiteManagerCache()
        let path = cx.readOneData(_userId: Account.defaultAccount.id!, docId: cell["Id"].stringValue)
        if path.docPath.isEmpty {
            self.getUrl(cell:cell)
        }else {
            switch cell["categoryName"].stringValue {

            case "音频":
                let vc = audioViewController()
                vc.cellId = cell["Id"].stringValue
                vc.courseOpenId = self.courseOpenId
                vc.openClassId = self.openClassId
                vc.moduleId = cell["moduleId"].stringValue
                vc.isNet = false
                vc.audiourl = path.docPath
                vc.isAllowDownLoad = true
                vc.title = cell["Title"].stringValue
                vc.isStu = true
                vc.isKJ = true
                vc.hidesBottomBarWhenPushed = true
                
                self.navigationController?.pushViewController(vc, animated: true)
            default:
                self.getUrl(cell:cell)
            }
        }
    }
    //获取课件信息
    func getUrl(cell:JSON) {
        let dict = ["cellId":cell["Id"].stringValue,
                    "stuId":Account.defaultAccount.id!,
                    "openClassId":self.openClassId,
                    "sourceType":3] as [String : Any]
        
        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.AssistTeacher_getCellInfoByCellId, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                
                if json["code"] == 1{
                    self.token = json["cellInfo"]["token"].description;
                    let resourceUrl =  json["cellInfo"]["resourceUrl"].description;
                    self.linkstr = json["cellInfo"]["externalLinkUrl"].description;
                    self.resourcesUrl = JSON.init(parseJSON: resourceUrl);
                    self.previewUrl = JSON.init(parseJSON: resourceUrl)["urls"]["preview"].stringValue
                    self.pushstuCourseWareVC(cell: cell, isAllowDownLoad: json["cellInfo"]["isAllowDownLoad"].boolValue)
                    self.cellLogId = json["cellInfo"]["cellLogId"].description;
                    self.stuCellPicCount = json["cellInfo"]["stuCellPicCount"].intValue;
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                XLBallLoading.hide(in: self.view)
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }
    }
    
    //观看跳转页面
    func pushstuCourseWareVC(cell:JSON,isAllowDownLoad:Bool){
        
         switch cell["categoryName"].stringValue {
        case "视频"://暂未记录日志
            let vc = zjyVideoPlayView()
            vc.isStu = true
            vc.courseOpenId = self.courseOpenId
            vc.docId = cell["Id"].stringValue
            vc.openClassId = self.openClassId
            vc.moduleId = cell["moduleId"].stringValue
            vc.cellLogId = self.cellLogId
            vc.videotittle = cell["Title"].stringValue
            vc.stuCellPicCount = self.stuCellPicCount
            //拼接URL
            for (key, value) in self.resourcesUrl["args"]{
                if self.resourcesUrl["urls"]["preview_oss_gen"].stringValue.isEmpty{
                    if value.boolValue{
                        let videoUrl = "\(self.resourcesUrl["urls"]["preview"].stringValue)/\(key).mp4"
                        vc.videourls.append(videoUrl)
                    }
                }else{
                    if value.boolValue{
                        let videoUrl = "\(self.resourcesUrl["urls"]["preview_oss_gen"].stringValue)/\(key).mp4"
                        vc.videourls.append(videoUrl)
                    }
                }
                
            }
            vc.hidesBottomBarWhenPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        case "图片","文档":
            if(self.resourcesUrl["isH5"] != 1){
                let vc = stuImage_ppt_wordPreviewVC()
                if cell["categoryName"].stringValue == "图片"{
                    vc.isZjyFromImg = true
                }
                vc.cellId = cell["Id"].stringValue
                vc.courseOpenId = self.courseOpenId
                vc.openClassId = self.openClassId
                vc.moduleId = cell["moduleId"].stringValue
                vc.isStu = true
                vc.isKJ = true
                vc.token = self.token
                vc.cellLogId = self.cellLogId
                vc.isAllowDownLoad = isAllowDownLoad.description
                vc.stuCellPicCount = self.stuCellPicCount
                vc.resourceUrl = self.resourcesUrl.description
                vc.resourcesUrl = self.resourcesUrl
                vc.title = cell["Title"].stringValue
                vc.doctype = cell["categoryName"].stringValue
                vc.hidesBottomBarWhenPushed = true
                self.navigationController?.pushViewController(vc, animated: true)
            }
        case "图文":
            let vc = courseware_tuWenView()
            vc.courseOpenId = self.courseOpenId
            vc.openClassId = self.openClassId
            vc.cellId = cell["Id"].stringValue
            vc.isStu = true
            vc.cellLogId = self.cellLogId
            vc.stuCellPicCount = self.stuCellPicCount
            vc.moduleId = cell["moduleId"].stringValue
            vc.token = self.token
            vc.title = cell["Title"].stringValue
            vc.hidesBottomBarWhenPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        case "音频":  //暂未记录日志
            let vc = audioViewController()
            vc.cellId = cell["Id"].stringValue
            vc.courseOpenId = self.courseOpenId
            vc.openClassId = self.openClassId
            vc.moduleId = cell["moduleId"].stringValue
            vc.isNet = true
            vc.isAllowDownLoad = isAllowDownLoad
            vc.isStu = true
            vc.isKJ = true
            vc.cellLogId = self.cellLogId
            vc.stuCellPicCount = self.stuCellPicCount
            vc.title = cell["Title"].stringValue
            if self.resourcesUrl["urls"]["preview_oss_gen"].stringValue.isEmpty{
                vc.audiourl = self.resourcesUrl["urls"]["preview"].stringValue
            }else{
                vc.audiourl = self.resourcesUrl["urls"]["preview_oss_gen"].stringValue
            }
            vc.hidesBottomBarWhenPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        case "ppt":
            if(self.resourcesUrl["isH5"] != 1){
                let vc = stuImage_ppt_wordPreviewVC()
                vc.cellId = cell["Id"].stringValue
                vc.courseOpenId = self.courseOpenId
                vc.openClassId = self.openClassId
                vc.moduleId = cell["moduleId"].stringValue
                vc.isStu = true
                vc.isKJ = true
                vc.token = self.token
                vc.cellLogId = self.cellLogId
                vc.stuCellPicCount = self.stuCellPicCount
                vc.resourceUrl = self.resourcesUrl.description
                vc.title = cell["Title"].stringValue
                vc.isAllowDownLoad = isAllowDownLoad.description
                vc.resourcesUrl = self.resourcesUrl
                vc.doctype = cell["categoryName"].stringValue
                vc.hidesBottomBarWhenPushed = true
                self.navigationController?.pushViewController(vc, animated: true)
            }else{
                let vc = PPT_Animation_PreviewView()
                vc.cellId = cell["Id"].stringValue
                vc.courseOpenId = self.courseOpenId
                vc.openClassId = self.openClassId
                vc.moduleId = cell["moduleId"].stringValue
                vc.isStu = true
                vc.isKJ = true
                vc.token = self.token
                vc.cellLogId = self.cellLogId
                vc.stuCellPicCount = self.stuCellPicCount
                vc.linkStr = self.resourcesUrl["h5PreviewUrl"].stringValue
                vc.title = cell["Title"].stringValue
                vc.isAllowDownLoad = isAllowDownLoad.description
                vc.resourcesUrl = self.resourcesUrl
                vc.doctype = cell["categoryName"].stringValue
                vc.hidesBottomBarWhenPushed = true
                self.navigationController?.pushViewController(vc, animated: true)
            }
        case "链接":
            let vc = LinkView()
            vc.linkStr = self.linkstr
            vc.courseOpenId = self.courseOpenId
            vc.openClassId = self.openClassId
            vc.cellId = cell["Id"].stringValue
            vc.isStu = true
            vc.isKJ = true
            vc.token = self.token
            vc.cellLogId = self.cellLogId
            vc.stuCellPicCount = self.stuCellPicCount
            vc.title = cell["Title"].stringValue
            vc.hidesBottomBarWhenPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        default:
            SCLAlertView().showInfo("温馨提示！", subTitle: "该课件暂不支持打开",closeButtonTitle: "确定")
        }
    }
}


