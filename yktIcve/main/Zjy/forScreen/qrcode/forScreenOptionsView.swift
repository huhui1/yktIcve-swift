//
//  forScreenOptionsView.swift
//  云课堂2
//
//  Created by 尤增强 on 2018/7/9.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import Alamofire
import SwiftyJSON

class forScreenOptionsView: UIViewController {

    @IBOutlet var bgview: UIView!
    @IBOutlet var bgview1: UIView!
    @IBOutlet var bgview2: UIView!
    @IBOutlet var bgview3: UIView!
    @IBOutlet var bgview4: UIView!
    @IBOutlet var bgview5: UIView!
    @IBOutlet var bgview6: UIView!
    @IBOutlet weak var btn_scanning: UIButton!

    @IBOutlet weak var lab_courseware: UILabel!
    @IBOutlet weak var btn_courseware: UIButton!

    @IBOutlet weak var lab_faceTeaching: UILabel!
    @IBOutlet weak var btn_faceTaeaching: UIButton!

    @IBOutlet weak var lab_whiteboard: UILabel!
    @IBOutlet weak var btn_whiteboard: UIButton!
    
    @IBOutlet weak var lab_phone: UILabel!
    @IBOutlet var btn_photo: UIButton!
    
    @IBOutlet weak var lab_TakingPictures: UILabel!
    @IBOutlet var btn_TakingPictures: UIButton!
    
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.title = "投屏演示"
        let item = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = item
     
        // Do any additional setup after loading the view.
    }

    init() {
        super.init(nibName: "forScreenOptionsView", bundle: nil)
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    @IBAction func action_whiteboard(_ sender: UIButton) {

        if #available(iOS 9.0, *){
            let vc = whiteboardView()
            vc.modalTransitionStyle = .crossDissolve
            NavigatorService.modelToPage(vc, animated: true, completion: {})
        }  else{
            let vc = whiteboardViewPrepareView()
            vc.modalTransitionStyle = .crossDissolve
            NavigatorService.modelToPage(vc, animated: true, completion: {})
        }



    }
    @IBAction func action_scanning(_ sender: UIButton) {
        if ZQSocketManager.isConnected {
            let vc = pcQrcodeConfirmLoginView()
            NavigatorService.navigateToPage(vc, animated: true)
        }else{
            let vc = pcQrcodeViewController()
            NavigatorService.navigateToPage(vc, animated: true)
        }

    }
    
    @IBAction func action_faceTaeaching(_ sender: UIButton) {
        if isStu{
            print("拍摄")
            if( self.uploadUrl.isEmpty){
                common.share.getUploadUrl();
            }
            self.funcChooseFromCamera()
        }else{
            //课堂教学
            let vc = TodayClassView()
            self.navigationController?.pushViewController(vc, animated: true)
        }
    }

    @IBAction func action_courseware(_ sender: UIButton) {
        if isStu{
            print("照片")
            if( self.uploadUrl.isEmpty){
                common.share.getUploadUrl();
            }
            self.funcChooseFromPhotoAlbum()
        }else{
            let vc = coursewareInterpretationView()
            vc.title = "课件讲解"
            self.navigationController?.pushViewController(vc, animated: true)
        }
    }


  
    @IBAction func acction_photo(_ sender: UIButton) {
        print("照片")
        if( self.uploadUrl.isEmpty){
            common.share.getUploadUrl();
        }
        self.funcChooseFromPhotoAlbum()
        
    }
    @IBAction func action_takingPicture(_ sender: UIButton) {
        print("拍摄")
        if( self.uploadUrl.isEmpty){
            common.share.getUploadUrl();
        }
        self.funcChooseFromCamera()
    }
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    
    override func viewWillLayoutSubviews() {
        self.bgview.layer.borderColor  = UIColor.colorWithHex(hexColor: 0xFFE0E0E0).cgColor
        self.bgview.layer.borderWidth = 1
        
        self.bgview1.layer.borderColor  = UIColor.colorWithHex(hexColor: 0xFFE0E0E0).cgColor
        self.bgview1.layer.borderWidth = 0.5
        self.bgview2.layer.borderColor  = UIColor.colorWithHex(hexColor: 0xFFE0E0E0).cgColor
        self.bgview2.layer.borderWidth = 0.5
        self.bgview3.layer.borderColor  = UIColor.colorWithHex(hexColor: 0xFFE0E0E0).cgColor
        self.bgview3.layer.borderWidth = 0.5
        self.bgview4.layer.borderColor  = UIColor.colorWithHex(hexColor: 0xFFE0E0E0).cgColor
        self.bgview4.layer.borderWidth = 0.5
        self.bgview5.layer.borderColor  = UIColor.colorWithHex(hexColor: 0xFFE0E0E0).cgColor
        self.bgview5.layer.borderWidth = 0.5
        self.bgview6.layer.borderColor  = UIColor.colorWithHex(hexColor: 0xFFE0E0E0).cgColor
        self.bgview6.layer.borderWidth = 0.5
        
        self.btn_scanning.titleLabel?.font = UIFont.init(name: "iconfont", size:80)
        self.btn_scanning.setTitle("\u{e734}", for: .normal)
        
        if isStu{
            self.bgview4.isHidden = true
            self.bgview5.isHidden = true
            self.bgview6.isHidden = true
            self.lab_courseware.text = "照片"
            self.btn_courseware.setTitle("\u{e7e4}", for: .normal)
            self.btn_courseware.titleLabel?.font = UIFont.init(name: "iconfont", size: 40)
            self.btn_courseware.setTitleColor(UIColor.colorWithHex(hexColor: 0x14A31D), for: .normal)
            
            self.lab_faceTeaching.text = "拍照"
            self.btn_faceTaeaching.setTitle("\u{e73e}", for: .normal)
            self.btn_faceTaeaching.titleLabel?.font = UIFont.init(name: "iconfont", size: 40)
            self.btn_faceTaeaching.setTitleColor(UIColor.colorWithHex(hexColor: 0x053DAB), for: .normal)
            
            self.btn_whiteboard.titleLabel?.font = UIFont.init(name: "iconfont", size:40)
            self.btn_whiteboard.setTitle("\u{e749}", for: .normal)
        }else{
            self.btn_courseware.titleLabel?.font = UIFont.init(name: "iconfont", size: 40)
            self.btn_faceTaeaching.titleLabel?.font = UIFont.init(name: "iconfont", size: 40)
            self.btn_whiteboard.titleLabel?.font = UIFont.init(name: "iconfont", size:40)
            self.btn_photo.titleLabel?.font = UIFont.init(name: "iconfont", size: 40)
            self.btn_TakingPictures.titleLabel?.font = UIFont.init(name: "iconfont", size:40)
            
            self.btn_courseware.setTitle("\u{e740}", for: .normal)
            self.btn_faceTaeaching.setTitle("\u{e72f}", for: .normal)
            self.btn_whiteboard.setTitle("\u{e749}", for: .normal)
            self.btn_photo.setTitle("\u{e7e4}", for: .normal)
            self.btn_TakingPictures.setTitle("\u{e73e}", for: .normal)
        }
    }
   
    
 
    var isStu = false
    lazy var uploadUrl : String = {
        return ""
    }()
}

extension forScreenOptionsView:UIImagePickerControllerDelegate,UINavigationControllerDelegate{
    //拍照
    func funcChooseFromCamera() -> Void{
        if UIImagePickerController.isSourceTypeAvailable(UIImagePickerControllerSourceType.camera) {
            let imagePicker = UIImagePickerController()
            
            //设置代理
            imagePicker.delegate = self
            //允许编辑
            imagePicker.isEditing = false;
            //设置图片源
            imagePicker.sourceType = UIImagePickerControllerSourceType.camera
            //模态弹出IamgePickerView
            
            self.present(imagePicker, animated: true, completion: nil)
            
        }else{
            print("模拟器不支持拍照功能")
        }
    }
    //从相册选择照片
    func funcChooseFromPhotoAlbum() -> Void{
        
        
        let masterVC = HsuAlbumMasterTableViewController()
        let navi = UINavigationController(rootViewController: masterVC)
        masterVC.title = "图片"
        let gridVC = HsuAssetGridViewController()
        gridVC.title = "所有图片"
        let leftBarBtn = UIBarButtonItem(title: "", style: .plain, target: self,
                                         action:nil)
        gridVC.navigationItem.leftBarButtonItem = leftBarBtn
        navi.pushViewController(gridVC, animated: false)
        
        UIDevice.current.setValue(UIInterfaceOrientation.landscapeLeft.rawValue, forKey: "orientation")
        present(navi, animated: true)
        
        HandleSelectionPhotosManager.share.getSelectedPhotos(with: 1) { (assets, images) in
            
            
            self.getImgOne(img: images[0])
        }
    }
    
    //处理获取到的图片
    func getImgOne(img: UIImage) {
        self.uploadUrl = appAPI.uploadUrl;
        let fileManager = FileManager.default
        let rootPath = NSSearchPathForDirectoriesInDomains(.documentDirectory,
                                                           .userDomainMask, true)[0] as String
        let date = NSDate(),
        timeInterval = date.timeIntervalSince1970 * 1000
        
        let filePath = "\(rootPath)/" + String(timeInterval) + ".jpg"
        
       let  imageData =  common.share.resetImgSize(sourceImage: img, maxImageLenght: 0, maxSizeKB: 200)
        
        fileManager.createFile(atPath: filePath, contents: imageData, attributes: nil)
        let imageNSURL = URL.init(fileURLWithPath: filePath)
        
        ZKProgressHUD.show("0 %")
        Alamofire.upload(multipartFormData: { multipartFormData in
            multipartFormData.append(imageNSURL, withName: "file1")
        },to: self.uploadUrl,encodingCompletion: { encodingResult in
            switch encodingResult {
            case .success(let upload, _, _):
                upload.responseJSON { response in
                    let result = JSON(response.result.value ?? "");
                    ZKProgressHUD.hide(delay: 0)
                    let vc = whiteboardView()
                    vc.file = result["ossOriUrl"].stringValue
                    self.present(vc, animated: true, completion:nil)
                    }.uploadProgress { progress in // main queue by default
                        
                        ZKProgressHUD.show("\(String(format: "%.1f", progress.fractionCompleted * 100)) %")
                }
            case .failure(let encodingError):
                ZKProgressHUD.hide(delay: 0)
                ZKProgressHUD.showMessage("上传失败")
            }
        })
    }
    func imagePickerControllerDidCancel(_ picker: UIImagePickerController){
        picker.dismiss(animated: true, completion: nil)
    }
    
    func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [String : Any]) {
        //获取照片的原图
        let image = (info as NSDictionary).object(forKey: UIImagePickerControllerOriginalImage)as!UIImage
        //获得编辑后的图片
        //let image = (info as NSDictionary).object(forKey: UIImagePickerControllerEditedImage)as!UIImage
        
        
        self.getImgOne(img: image);
        
        picker.dismiss(animated: true, completion: nil)
    }
}
