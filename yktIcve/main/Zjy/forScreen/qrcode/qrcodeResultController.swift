//
//  qrcodeResultController.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2018/2/7.
//  Copyright © 2018年 zqy. All rights reserved.
//

import UIKit
import SwiftyJSON
import SCLAlertView
import Alamofire

extension qrcodeViewController {



    //解析二维码信息
    func analysisQrcodeResult(stringValue:String){

        let result = JSON.init(parseJSON: stringValue)

        //暂停定时器
//        self.codeTimer?.suspend()
        if (result["type"] == 2) {
            ZKProgressHUD.showError("此二维码失效!")
            return;
        }
        //
        if(self.isRegister){
            if(result["flag"].stringValue != "ssykt"||(result["type"].intValue != 4 && result["type"].intValue  != 3)){
                 showOtherMsg(stringValue:"无法识别此二维码!")
            }else{
                self.userRegister(data: result)
            }
        }else{
            if(result["flag"].stringValue != "ssykt"){
                  showOtherMsg(stringValue:"无法识别此二维码!")
            }else if (result["type"].intValue == 1){
                  self.joinClass(data: result)
            }else{
                //这是登录之后扫码建立关系
                //  self.buildRelationships(data:result)
                showOtherMsg(stringValue:"请使用班级二维码扫描!")
            }
        }


    }

    //非我方二维码信息
    func showOtherMsg(stringValue:String){

        //自定义提示框样式
        let appearance = SCLAlertView.SCLAppearance(
            showCloseButton: false //不显示关闭按钮
        )

        //使用自定义样式的提示框
        let alert = SCLAlertView(appearance: appearance)

        alert.addButton("确定") {
            if((self.session) != nil){
                self.session.startRunning()
            }

            //重启定时器
//           self.codeTimer?.resume()
        }
        //显示提示框
        alert.showInfo("二维码", subTitle: stringValue)

    }


    //扫码与需求不统一 即扫错了我方二维码
    func showerrorMsg(isRegister:Bool){
        //自定义提示框样式
        let appearance = SCLAlertView.SCLAppearance(
            showCloseButton: false //不显示关闭按钮
        )
        var strmsg =  "此二维码为注册二维码请确认后重新扫描" ;

        if(isRegister){
            strmsg =  "此二维码为加入班级二维码请确认后重新扫描" ;
        }
        //使用自定义样式的提示框
        let alert = SCLAlertView(appearance: appearance)

        alert.addButton("确定") {
            self.session.startRunning()
            //重启定时器
//            self.codeTimer?.resume()
        }

        alert.showWarning("提示", subTitle: strmsg,
                                closeButtonTitle: "确定")
    }



    //二维码扫描时间过长 处理
    func setTime(){

        // 定义需要计时的时间
        var timeCount = 1
        // 在global线程里创建一个时间源
        codeTimer = DispatchSource.makeTimerSource(queue:  DispatchQueue.global())
        // 设定这个时间源是每秒循环一次，立即开始
        codeTimer?.schedule(deadline: .now(), repeating: .seconds(1))
        // 设定时间源的触发事件

        codeTimer?.setEventHandler(handler: {
                // 每秒计时一次
                timeCount = timeCount + 1
                // 返回主线程处理一些事件，更新UI等等
                DispatchQueue.main.async {
                    if( timeCount % 10 == 0  ){
                        ZKProgressHUD.showMessage("请将整个二维码包含在扫描框内或尝试将手机设备后移")

                    }
                }

        })
        // 启动时间源
        codeTimer?.resume()

    }

    //加入班级
    func joinClass(data:JSON){

        let dict = ["openClassId":data["openClassId"],
                    "sourceType":3,
                    "stuId":Account.defaultAccount.id!] as [String : Any] ;
        Alamofire.request(appAPI.Student_stuJoinOpenClassByScan, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in

            if let value = response.result.value {
                let json = JSON(value)
                //首次添加
                if(json["code"] == 1){
                    ZKProgressHUD.showMessage(json["msg"].stringValue)
                    self.reloadList!()
                    self.navigationController?.popViewController(animated: true)
                }else{
                    ZKProgressHUD.showMessage(json["msg"].stringValue)
                    self.navigationController?.popViewController(animated: true)
                }
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }

    }
    //扫码建立关系
    func buildRelationships(data:JSON){
        let dict = ["inviteType":2,
                    "dataType":2,
                    "schoolId":data["schoolId"],
                    "teacherId":data["teacherId"],
                    "userNum":Account.defaultAccount.number!,
                    "sourceType":3] as [String : Any] ;
        Alamofire.request(appAPI.MobileLogin_inviteRegister, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if(json["code"] == 1){
                    ZKProgressHUD.showMessage("建立关系成功")
                    self.navigationController?.popViewController(animated: true)
                }else{
                    ZKProgressHUD.showMessage(json["msg"].stringValue)
                }
           
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
            }
        }
    }
    //账号注册
    func userRegister(data:JSON){
        let vc = registerView()
            vc.data = data
            vc.inviteType = data["type"].intValue == 4 ? 1 : 2
        self.present(vc, animated: true, completion: nil)

    }
    
}
