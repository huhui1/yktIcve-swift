//
//  cacheViewController.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2017/8/24.
//  Copyright © 2017年 zqy. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire
class cacheViewController: UIViewController,UIDocumentInteractionControllerDelegate {
    var isStu = false
    var openClassId = "";
    var courseOpenId = "";
    var cellId = "";
    var moduleId = ""
    var documentController:UIDocumentInteractionController!
    var cacheDuration: Float64 = 10 //单曲的总时长
    var isPushed = false
    var docId = "";
    var docUrl = "";
    var docType = 0;
    var docTitle = "";
    var isStart = false;
    var slideMenu:SlideMenu?
    lazy var CBId :String = {
        let str: String = String();
        return str;
    }()
    var ht = 0
    var hasNavigation = false
   // var vclink:linkSwiftController!
   
    lazy var user :String = {
        let str: String = String();
        return str;
    }()
    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.white;
        self.title = "我的下载";
        self.automaticallyAdjustsScrollViewInsets = false
        //监听跳转
        let NotifyEventListenercache = NSNotification.Name("cache")
        NotificationCenter.default.addObserver(self, selector: #selector(self.cachePushVC), name: NotifyEventListenercache, object: nil)
        let item = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = item
        if self.hasNavigation{
            let Item = UIBarButtonItem(title: "\u{e6f7} 返回", style: .plain, target: self, action: #selector(self.backBtnClick))
            self.navigationItem.leftBarButtonItem = Item
            common.share.setBackButtonItem(item: Item)
        }
        if(self.navigationController == nil){
            if(common.share.isX()){
                ht = 15
            }
            let headUI = headBackUI()
            headUI.backgroundColor = UIColor.bg
            headUI.frame = CGRect.init(x: 0, y: 0, width: UIScreen.main.bounds.width, height: 60 + CGFloat(ht))
            self.view.addSubview(headUI)
            headUI.btn_back.addTarget(self, action: #selector(self.headUIBack), for: .touchUpInside)
        }
         self.setMenu();
        // Do any additional setup after loading the view.
    }
    //返回按钮
    @objc func backBtnClick() {
        self.presentingViewController?.dismiss(animated: true, completion: nil)
    }

    @objc func headUIBack(){

        self.dismiss(animated: true, completion: nil)
    }
    func pushvc(){
        ZKProgressHUD.showError("qwsqwsq");

    }
    
    @objc func cachePushVC(cache:NSNotification){
        
        let dict = cache.object as! Dictionary<String ,String>
        let cellType = dict["docType"]!

        switch cellType {
        case "1":
            let vc = generalVideoPlayView()
            vc.videourls.removeAll()
            vc.localurl = "\(NSHomeDirectory())/Documents/\(dict["docPath"]!)"
            vc.isNet = true
            vc.videoName = dict["docTitle"]!
            self.isPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        case "2":
            let  vc = audioViewController();
            vc.audiourl = dict["docPath"]!
            vc.title = "播放音频"
            vc.tittlelab.text = dict["docTitle"]!
            vc.isNet = false;
            self.isPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        case "3":
            let vc = cachePreviewImgView()
            let fullPath = dict["file"]!
            vc.file =  fullPath
            self.isPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        case "4","5":
            self.isPushed = true
            self.openOffice(filePath: dict["file"]!)
        default:
            print("asxa")
        }
    }
    
    
    func openOffice(filePath:String){
        let sandboxFilePath = filePath
        let docUrl = URL(fileURLWithPath: sandboxFilePath);
        documentController = UIDocumentInteractionController(url:docUrl)
        documentController.delegate = self;
        //当前APP打开  需实现协议方法才可以完成预览功能
        //修改导航栏背景色
        UINavigationBar.appearance().tintColor = UIColor.bg//字体颜色

        documentController.presentPreview(animated: true);
    }
    func documentInteractionControllerViewControllerForPreview(_ controller: UIDocumentInteractionController) -> UIViewController
    {

        //这个地方需要返回给一个控制器用于展现documentController在其上面，所以我们就返回当前控制器self
        
        return self
    }



    func deleteFile(path:String){
        let manager = FileManager.default
        do{
            try manager.removeItem(atPath: path)
        }catch{
            
        }
    }
    func setMenu(){
        let titles = ["正在下载","已缓存",]
        var arr:Array<UIViewController> = [];
        let vc1 = doclistViewController();
        let vc2 = cachelistViewController();
        vc2.docId = self.docId;
        vc2.docUrl = self.docUrl;
        vc2.docType = self.docType;
        vc2.docTitle = self.docTitle;
        vc2.isStart = self.isStart;
        arr.append(vc2);
        arr.append(vc1);
        var sheight = 0;
        if(self.navigationController == nil){
            sheight = 60;
        }
        slideMenu = SlideMenu(frame: CGRect(x:CGFloat(0),y:CGFloat(sheight) + CGFloat(ht),width:view.frame.width,height:40), titles:titles, childControllers:arr)
        
        slideMenu?.bodyFrame = CGRect.init(x:CGFloat( 0), y:CGFloat(sheight + 40), width: view.frame.width, height: view.frame.height - 110 - CGFloat(sheight))
        
        slideMenu?.selectedColor = UIColor(red: 6/255, green: 163/255, blue: 121/255, alpha: 1);

        slideMenu?.isFixed = true;
        slideMenu?.indicatorStyle = .followText;
        slideMenu?.titleStyle = .transfrom;
        slideMenu?.line.isHidden = false;
        slideMenu?.scrollToIndex(0)
        view.addSubview(slideMenu!)

    }
    
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        if(!self.isPushed){

            NotificationCenter.default.removeObserver(self)
        }
        self.isPushed = false
    }


    override func viewWillAppear(_ animated: Bool) {
        UINavigationBar.appearance().tintColor = UIColor.white//字体颜色
    }
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    /*
    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        // Get the new view controller using segue.destinationViewController.
        // Pass the selected object to the new view controller.
    }
    */

}
