//
//  cachelistViewController.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2017/11/16.
//  Copyright © 2017年 zqy. All rights reserved.
//

import UIKit
import Alamofire
import SnapKit
import SwiftyJSON


//import RealmSwift
class cachelistViewController: UIViewController {
    var ht = 0
    var docId = "";
    var docUrl = "";
    var docType = 0;
    var docTitle = "";
    var isStart = false;
    var padth = "";
    var progress: UIProgressView!
    let progresslab = UILabel();
    let width = UIScreen.main.bounds.width
    let height = UIScreen.main.bounds.height;
    let docTypes = ["\u{e68b}","\u{e6ec}","\u{e698}","\u{e6ae}","\u{e689}","\u{e691}","\u{e702}"];
    let docTypeColor = [0xe18d39,0xfdbc53,0x8284dc,0xe18d39,0xfdbc53,0x8284dc,0x8284dc];
    //下载文件的保存路径
    var destination:DownloadRequest.DownloadFileDestination!
    //用于停止下载时，保存已下载的部分
    var cancelledData: Data?

    //下载请求对象
    var downloadRequest: DownloadRequest!

    override func viewDidLoad() {
        super.viewDidLoad()

        if(isStart){
            self.setUI();
            self.setCache();
        }
        // Do any additional setup after loading the view.
    }

    func setUI(){
        if(common.share.isX()){
            ht = 15
        }
        let titlelab = UILabel();
        let doctypelab = UILabel();
        self.view.addSubview(titlelab);
        self.view.addSubview(doctypelab);
        doctypelab.snp.makeConstraints { (make) in
            make.width.equalTo(20);
            make.height.equalTo(20);
            make.leftMargin.equalTo(2);
        }
        titlelab.snp.makeConstraints { (make) in
                make.width.equalTo(width - 80);
                make.height.equalTo(20);
                make.left.equalTo(doctypelab.snp.right)
        }
        doctypelab.text = "\(docTypes[docType])";
        doctypelab.font = UIFont.init(name: "iconfont", size: 20);
        doctypelab.textColor = UIColor.colorWithHex(hexColor: Int64(self.docTypeColor[docType]))
        self.view.addSubview(self.progresslab);
        titlelab.text = "\(docTitle)";
        titlelab.font = UIFont.init(name: "iconfont", size: 14);
        titlelab.textColor = UIColor.gray;
        self.progress = UIProgressView(progressViewStyle: .default);
        self.progress.progressTintColor = UIColor.bg;  //已有进度颜色
        self.progress.trackTintColor = UIColor.colorWithHex(hexColor: 0xf2f2f2);//剩余进度颜色（即进度槽颜色）
        self.progress.layer.cornerRadius = 5;
        self.progress.layer.masksToBounds = true;
        self.view.addSubview(self.progress);
        progress.snp.makeConstraints { (make) in
            make.top.equalTo(titlelab.snp.bottom).offset(8)
            make.width.equalTo(width - 80);
            make.height.equalTo(10)
            make.leftMargin.equalTo(2);
        }
        progresslab.snp.makeConstraints { (make) in
            make.width.equalTo(80)
            make.height.equalTo(progress.snp.height)
            make.leftMargin.equalTo(progress.snp.right).offset(8)
            make.bottom.equalTo(progress.snp.bottom);
        }
        progresslab.text = " 0.0%";
        progresslab.textColor = UIColor.colorWithHex(hexColor: 0xe6e6e6);
        progresslab.font = UIFont.boldSystemFont(ofSize: 12);
    }
    func  setCache(){
        //设置下载路径。保存到用户文档目录，文件名不变，如果有同名文件则会覆盖
        self.destination = { _, response in
            let documentsURL = FileManager.default.urls(for: .documentDirectory,
                                                        in: .userDomainMask)[0]
            let fileURL = documentsURL.appendingPathComponent(response.suggestedFilename!);

            let arr = String(describing: fileURL).components(separatedBy: "/")

            if let laststr = arr.last {
                self.padth = laststr;
            }else{
                self.padth = "未知位置";
            }
            //两个参数表示如果有同名文件则会覆盖，如果路径中文件夹不存在则会自动创建
            return (fileURL, [.removePreviousFile, .createIntermediateDirectories]);
        }

        //页面加载完毕就自动开始下载
        self.downloadRequest =  Alamofire.download(self.docUrl, to: destination)
        self.downloadRequest.downloadProgress(queue: DispatchQueue.main,
                                              closure: downloadProgress) //下载进度
        self.downloadRequest.responseData(completionHandler: downloadResponse) //下载停止响应
    }

    //下载过程中改变进度条

    func downloadProgress(progress: Progress) {
        //进度条更新
        self.progress.setProgress(Float(progress.fractionCompleted), animated:true)
       // print("当前进度：\(progress.fractionCompleted*100)%")
        self.progresslab.text =  "\(String(format: "%.1f", progress.fractionCompleted*100))%";

    }

    //下载停止响应（不管成功或者失败）
    func downloadResponse(response: DownloadResponse<Data>) {
        switch response.result {
        case .success(let data):
            //self.image = UIImage(data: data)
            let size = common.share.formatFileSize(bytes:Float64(Int64(data.count)));
            self.progresslab.text = "\(size)";
            print("文件下载完毕: \(response)")
            self.saveData(size:Int64(data.count));
            //下载完成后移除下载控件
            let chilrenviews = self.view.subviews
            for chilren in chilrenviews {
                chilren.removeFromSuperview()
            }
        case .failure:
            self.cancelledData = response.resumeData //意外终止的话，把已下载的数据储存起来
        }
    }

 //存储数据信息
    func saveData(size:Int64){
 //创建实例,下载
//        let CacheDoc = CacheDocmedel()
//        CacheDoc.id = self.docId
//        CacheDoc.docSize = size
//        CacheDoc.docTitle = self.docTitle
//        CacheDoc.docType = Int16(self.docType)
//        CacheDoc.docPath = self.padth
//        CacheDoc.userId = self.userInfo.id
//        let realm = try! Realm()
//        // 数据持久化操作
//        try! realm.write {
//            realm.add(CacheDoc)
//        }
        let sqliteContext = SQLiteManagerCache() //如果没有,默认创建数据库及表格
        //插入数据
        sqliteContext.insertData(_id: self.docId, _userId: Account.defaultAccount.id!, _docPath: self.padth, _docTitle: self.docTitle, _docSize: size, _docType:self.docType)
    }
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }



    /*
    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        // Get the new view controller using segue.destinationViewController.
        // Pass the selected object to the new view controller.
    }
    */

}
