//
//  ZykCourseKjModel.swift
//  云课堂-智慧职教
//
//  Created by 志辉教育 on 2018/8/14.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import Alamofire
import SwiftyJSON
class ZykCourseKjModel: NSObject {
    @objc dynamic  var cellRefresh:String?
                   var sectionId:String?
                   var isPushZykCourseWare:Bool = true //用于判断是跳转到ZykCourseeWare/SmallclassCourse
    //监听的变量
    var cellType = ZykcellType()
    override init() {
        super.init()
        //对变量进行监听
        cellType.addObserver(self, forKeyPath: "type", options: [.old, .new], context: nil)
    }
    //监听跳转课件
    @objc func courseKJ(newValue:Int){
    
        switch newValue {
        //（1.视频2.随堂检测3.讨论4.文档5.富文本6.知识点），
        case 4:
            switch cellType.cellName {
            case "audio"?:
                self.getZykaudioResources(id: cellType.cellId!, cellTittle: cellType.celltitle!, isPushVC: true)
            case "flash"?:
                ZKProgressHUD.showMessage("该资源暂不支持手机查看，请从网页下载查看")
            default:
                let vc = ZykPPT_Img_WordPreview()
                vc.docId = cellType.cellId!
                vc.courseId = cellType.courseOpenId!
                vc.isFromZykKj = true
                vc.ZykCourseKjModel = self
                self.isPushZykCourseWare = true
                NavigatorService.navigateToPage(vc, animated: true)
            }
        case 1:
            let vc = videoPlayView()
            vc.docId =  cellType.cellId!
            vc.courseOpenId = cellType.courseOpenId!
            vc.IsFromZyk = true
            vc.videotittle = cellType.celltitle!
            vc.ZykCourseKjModel = self
            self.isPushZykCourseWare = true
            NavigatorService.navigateToPage(vc, animated: true)
        default:
            ZKProgressHUD.showMessage("该资源暂不支持手机查看，请从网页下载查看")
        }
        
    }
    @objc func SmallClasscourseKJ(newValue:Int){
       
        switch newValue {
        //（1.视频2.随堂检测3.讨论4.文档5.富文本6.知识点），
        case 4:
            switch cellType.cellName{
            case "audio"?:
                self.getZykaudioResources(id: cellType.cellId!, cellTittle: cellType.celltitle!, isPushVC: false)
         
            case "flash"?:
                ZKProgressHUD.showMessage("该资源暂不支持手机查看，请从网页下载查看")
            default:
                let vc = ZykPPT_Img_WordPreview()
                vc.docId = cellType.cellId!
                vc.courseId = cellType.courseOpenId!
                vc.isFromZykKj = true
                vc.ZykCourseKjModel = self
                self.isPushZykCourseWare = false
                NavigatorService.navigateToPage(vc, animated: true)
            }
        case 1:
            let vc = videoPlayView()
            vc.docId = cellType.cellId!
            vc.courseOpenId = cellType.courseOpenId!
            vc.IsFromZyk = true
            vc.videotittle = cellType.celltitle!
            vc.ZykCourseKjModel = self
            self.isPushZykCourseWare = false
            NavigatorService.navigateToPage(vc, animated: true)
            
        default:
            ZKProgressHUD.showMessage("请前往网页下载查看")
        }
    }
    
    func getZykaudioResources(id:String,cellTittle:String,isPushVC:Bool){
       
        let dict = ["id": id,
                    "courseId": cellType.courseOpenId!,
                    "type":1,
                    "token":Account.defaultAccount.token!] as [String : Any]
        Alamofire.request(ZYKAPI.course_getVideo, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
               // XLBallLoading.hide(in: self.view)
                let json = JSON(value)
                if json["code"] == 1{
                    let vc = audioViewController()
                    vc.audiourl = JSON.init(parseJSON: json["list"][0]["url"].stringValue)["urls"]["_360p"].stringValue
                    vc.isNet = true
                    vc.title = self.cellType.celltitle!
                    vc.isAllowDownLoad = false
                    vc.ZykCourseKjModel = self
                    vc.isFromZyk = true
                    vc.courseOpenId = self.cellType.courseOpenId!
                    if isPushVC{
                       self.isPushZykCourseWare = true
                    }else{
                       self.isPushZykCourseWare = false
                    }
                    self.sectionId = json["list"][0]["sectionId"].stringValue
                    NavigatorService.navigateToPage(vc, animated: true)
           
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
        }
            }else{

                ZKProgressHUD.showMessage("网络环境异常请稍后再试！")
            }
        }
        
    }
    deinit {
        cellType.removeObserver(self, forKeyPath: "type")
    }
    
}

extension ZykCourseKjModel {
    override func observeValue(forKeyPath keyPath: String?, of object: Any?, change: [NSKeyValueChangeKey : Any]?, context: UnsafeMutableRawPointer?) {
        let newValue = change?[NSKeyValueChangeKey.newKey]
        if keyPath == "type" {
            if self.cellType.isSmallclass{
               self.SmallClasscourseKJ(newValue: newValue as! Int)
            }else{
               self.courseKJ(newValue: newValue as! Int)
            }
        }else{
            print("暂无")
        }
    }
}
