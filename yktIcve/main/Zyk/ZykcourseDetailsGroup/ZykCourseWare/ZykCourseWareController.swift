//
//  ZykCourseWareController.swift
//  云课堂2
//
//  Created by 志辉教育 on 2018/7/3.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import Alamofire
import SwiftyJSON

extension ZykCourseWareView{
    //  模块列表
    func makeData(){
        for i in self.sentionTitles {
            let m = ZykcourseModule.init(data: i, _isUnfold: false)
            self.moduleList.append(m)
        }
        
        //self.tableview.reloadData()
    }
    
    //获取单元列表
    func getTopicList(moduleId:String,section:Int){
        if( self.moduleList[section].topic.count > 0){
            self.tableview.reloadSections(IndexSet.init(integer: section), with: UITableViewRowAnimation.automatic)
            
        }else {
            let dict = ["courseId":self.courseOpenId,
                        "sectionId":moduleId,
                        "type":1,
                        "token":Account.defaultAccount.token!] as [String : Any]
            XLBallLoading.show(in: self.view)
            Alamofire.request(ZYKAPI.course_courseInfo, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
                if let value = response.result.value {
                    let json = JSON(value)
                    if json["code"] == 1{
                        self.jsonlist = json["list"]
                        self.setTopicList(section: section, data: json["list"])
                        if json["list"][0]["chapter"].count == 0{
                            ZKProgressHUD.showMessage("该章节下暂无资源")
                        }
                    }else{
                        ZKProgressHUD.showMessage("网络异常请稍后再试！");
                    }
                    XLBallLoading.hide(in: self.view)
                }else{
                    ZKProgressHUD.showMessage("网络异常请稍后再试！");
                    XLBallLoading.hide(in: self.view)
                }
            }
        }
    }
    
    
    //填充数据
    func setTopicList(section:Int,data:JSON){
        var j = 0
        for i in data{
            let t =  ZykcourseTopic.init(_title:  i.1["chapter"]["Title"].stringValue, _isUnfold: false, _id: i.1["chapter"]["SectionId"].stringValue, _level: 2, _cellType: 0, _topicIndex: j, _isStudyFinish: false, _categoryName: "",_childNodeListId:"",_childNodeListresId:"", _ishaddentype: true)
            j += 1
            self.moduleList[section].topic.append(t)
        }
        self.tableview.reloadSections(IndexSet.init(integer: section), with: UITableViewRowAnimation.automatic)
    }
    
    
    //获取获得课程下的单元
    func getCellList(indexPath:IndexPath,topic:ZykcourseTopic){

        let dict = ["courseId":self.courseOpenId,
                    "sectionId":topic.id,
                    "type":1,
                    "token":Account.defaultAccount.token!] as [String : Any]
        XLBallLoading.show(in: self.view)
        Alamofire.request(ZYKAPI.course_courseInfo, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{

                    self.setCellInTopicList(indexPath: indexPath, data: json["list"], topic: topic)
                    if json["list"][topic.topicIndex]["sourselist"].count == 0{
                        if json["list"][topic.topicIndex]["list1"].isEmpty{
                            ZKProgressHUD.showMessage("该章节下暂无资源")
                        }
                        
                    }
                }else{
                    ZKProgressHUD.showMessage("网络异常请稍后再试！");
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showMessage("网络异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }

    }
    
    //set cell数据
    func setCellInTopicList(indexPath:IndexPath,data:JSON,topic:ZykcourseTopic){
        if  !data[topic.topicIndex]["sourselist"].isEmpty{
            for i in data[topic.topicIndex]["sourselist"]{
                let c = ZykcourseTopic.init(_title: i.1["Title"].stringValue, _isUnfold: true, _id:i.1["Id"].stringValue , _level: 3, _cellType: i.1["ResType"].intValue, _topicIndex: -99, _isStudyFinish: i.1["status"].boolValue, _categoryName: i.1["CellType"].stringValue,_childNodeListId: i.1["Id"].stringValue,_childNodeListresId:i.1["resId"].stringValue, _ishaddentype: false)
                topic.cell.append(c)
            }
        }else{
            for i in data[topic.topicIndex]["list1"]{
                let c = ZykcourseTopic.init(_title: i.1["knowledge"]["Title"].stringValue, _isUnfold: true, _id:i.1["knowledge"]["Id"].stringValue , _level: 3, _cellType: i.1["knowledge"]["ResType"].intValue, _topicIndex: -99, _isStudyFinish: i.1["status"].boolValue, _categoryName: i.1["categoryName"].stringValue,_childNodeListId: i.1["id"].stringValue,_childNodeListresId:i.1["resId"].stringValue,_ishaddentype: true)
                topic.cell.append(c)
                for k in i.1["knowSourselist"]{
                    let c1 = ZykcourseTopic.init(_title: k.1["Title"].stringValue, _isUnfold: true, _id:k.1["Id"].stringValue , _level: 3, _cellType: k.1["ResType"].intValue, _topicIndex: -99, _isStudyFinish: k.1["status"].boolValue, _categoryName: k.1["CellType"].stringValue,_childNodeListId: k.1["Id"].stringValue,_childNodeListresId:k.1["resId"].stringValue,_ishaddentype: false)
                topic.cell.append(c1)
                }
            }
        }
        self.tableview.reloadSections(IndexSet.init(integer: indexPath.section), with: .automatic)
    }
    
    //分区下标 与当前分区下所有topic
    func getshowList(model:ZykcourseModule,_section: Int) -> ZykcourseTopic{
        var courseTopicModelR = ZykcourseTopic.init(_title: "", _isUnfold: true, _id: "" , _level: 0, _cellType: 0, _topicIndex: -99, _isStudyFinish: false, _categoryName: "",_childNodeListId: "",_childNodeListresId:"",_ishaddentype: true)
        
        if model.isUnfold {
            var index = 0
            
            for i in 0..<model.topic.count{
                let courseTopicModel = model.topic[i]
                
                if(_section<index+1){
                    courseTopicModelR = courseTopicModel
                    courseTopicModelR.level = 2;
                    return courseTopicModelR;
                }
                index = index + 1 ;
                
                if (courseTopicModel.isUnfold){
                    if(_section<index+courseTopicModel.cell.count){
                      courseTopicModelR = courseTopicModel.cell[_section-index]
                        courseTopicModelR.level = 3;
                        return courseTopicModelR;
                    }
                    index = index + courseTopicModel.cell.count;

                }
                
            }
            return courseTopicModelR;
        }else{
            return courseTopicModelR
        }
        
    }
    
    func getCellNum(model:ZykcourseModule,_section: Int) -> Int{
        if model.isUnfold {
            var i = model.topic.count;
            
            for courseTopicModel in model.topic{
                //                for courseTopicModel in courseTopicModel.topic{
                //
                //                    if (courseTopicModel.isUnfold){
                //                        i = i + courseTopicModel.cell.count
                //                    }
                //                }
                if (courseTopicModel.isUnfold){
                    i = i + courseTopicModel.cell.count
                }
            }
            return i ;
        }else{
            return 0
        }
    }
    

    
    
}


