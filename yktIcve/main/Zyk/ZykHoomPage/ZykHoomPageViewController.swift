//
//  ZykHoomPageViewController.swift
//  云课堂2
//
//  Created by 尤增强 on 2018/7/2.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import Alamofire
import SwiftyJSON

extension ZykHoomPageView{

    func getIndex(){

        Alamofire.request(ZYKAPI.index_index, method: .get, parameters: nil, encoding: URLEncoding.default, headers: nil).responseJSON { (response) in
            if let value = response.result.value {
                let r = JSON(value)
                if r["code"] == 1{

                    self.setUIData(r:r)
                }else{
                    ZKProgressHUD.showMessage(r["msg"].string)
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showMessage("网络异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }

    func setUIData(r:JSON){
        self.myProfessionalView.reloadCollectionView(r: r["plist"])

        //   课程
        self.myCourseView.addSubview(self.CourseView)
        self.CourseView.snp.makeConstraints { (make) in
            make.bottom.top.left.right.width.equalTo(self.myCourseView)
        }
        self.CourseView.frame =   self.myCourseView.frame
        self.CourseView.setCourseData(d: r["list"])
        self.CourseView.MyCourseViewDategate = self

        //微课
        self.mySmallCourse.addSubview(self.SmallCourseView)
        self.SmallCourseView.snp.makeConstraints { (make) in
            make.bottom.top.left.right.width.equalTo(self.mySmallCourse)
        }
        self.SmallCourseView.frame =   self.myCourseView.frame
        self.SmallCourseView.setSmallCourseData(d: r["slist"])
        self.SmallCourseView.MyCourseViewDategate = self
    }
    //头部轮播
    func Imgshuffling(){
        self.PageControl.backgroundColor = UIColor.clear
        self.PageControl.pageIndicatorTintColor = UIColor.gray // 未选中的颜色
        self.PageControl.currentPageIndicatorTintColor = UIColor.bg//选中时的颜色
        self.ImgScrollView.bounces = true //可以拉长空白区域
        self.view.addSubview(self.PageControl)
        self.PageControl.snp.makeConstraints { (make) in
            make.height.equalTo(10)
            make.centerX.equalTo(self.view.snp.centerX)
            make.bottom.equalTo(self.ImgScrollView.snp.bottom).offset(-5)
            make.width.equalTo(50)
        
        }
        //设置图片
        let imageW:CGFloat = UIScreen.main.bounds.width;
        let imageH:CGFloat = self.ImgScrollView.frame.size.height
        var imageX:CGFloat = 0;
        for index in 0..<3{
            let imageView:UIImageView = UIImageView();
            if index == 0{
                imageX = 10
            }else{
                imageX = CGFloat(index) * imageW + 10;
            }
            imageView.frame = CGRect(x:imageX,y:0,width:UIScreen.main.bounds.width - 20,height:imageH)
            imageView.image = UIImage.init(named: "\(index + 1)-img")

            self.PageControl.numberOfPages = 3
            self.ImgScrollView.showsHorizontalScrollIndicator = false;
            self.ImgScrollView.addSubview(imageView);
            let contentW:CGFloat = imageW * CGFloat(3);
            self.ImgScrollView.contentSize = CGSize(width:contentW, height:imageH);
            self.ImgScrollView.isPagingEnabled = true;
         }
        //开启定时器
       starTime()
    }
    
    func scrollViewDidEndDecelerating(_ scrollView: UIScrollView) {
       
        let scrollviewW:CGFloat =  self.ImgScrollView.frame.size.width;
        if self.ImgScrollView.contentOffset.x == 0{
            if self.PageControl.currentPage == 0{
                //跳到最后一张
                self.ImgScrollView.contentOffset = CGPoint(x:scrollviewW * 2, y:0);
            }else{
                //跳到第一张
                self.ImgScrollView.contentOffset = CGPoint(x:0, y:0);
            }
        } else if ImgScrollView.contentOffset.x == 2 * self.ImgScrollView.frame.size.width{
            if self.PageControl.currentPage == 2{
                //跳到第一张
                self.ImgScrollView.contentOffset = CGPoint(x:0, y:0);
            }else{
                //跳到最后一张
                self.ImgScrollView.contentOffset = CGPoint(x:scrollviewW * 2, y:0);
            }
        }else{
            //跳到第第二张
            self.ImgScrollView.contentOffset = CGPoint(x:scrollviewW, y:0);
        }
        let x:CGFloat = self.ImgScrollView.contentOffset.x;
        let page:Int = (Int)((x + self.ImgScrollView.frame.size.width / 2) / scrollviewW);
        self.PageControl.currentPage = page;
    }
    //开启定时器
    func starTime(){
        // 启用计时器，控制每秒执行一次nextImage方法
        self.timer = Timer(timeInterval: 5, target: self, selector: #selector(self.nextImage), userInfo: nil, repeats: true)
        RunLoop.current.add(self.timer!, forMode: .defaultRunLoopMode)
    }
    //手动拖拽滚动开始
    func scrollViewWillBeginDragging(_ scrollView: UIScrollView) {
        //使自动滚动计时器失效（防止用户手动移动图片的时候这边也在自动滚动）
        self.timer?.invalidate()
    }
    
    //手动拖拽滚动结束
    func scrollViewDidEndDragging(_ scrollView: UIScrollView,
                                  willDecelerate decelerate: Bool) {
        //重新启动自动滚动计时器
        self.starTime()
        
    }
    @objc func nextImage(){
        if(Imgpage == self.PageControl.numberOfPages - 1){
            Imgpage = 0;
        }else{
            Imgpage = Imgpage + 1
        }
        let x:CGFloat = CGFloat(Imgpage) * self.ImgScrollView.frame.size.width;
        self.ImgScrollView.contentOffset = CGPoint(x:x, y:0);
        self.PageControl.currentPage = Imgpage;
    }
    
}
