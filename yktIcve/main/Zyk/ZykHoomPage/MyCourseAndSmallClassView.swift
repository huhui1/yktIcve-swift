//
//  MyCourseAndSmallClassView.swift
//  云课堂2
//
//  Created by 志辉教育 on 2018/7/2.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
@objc protocol MyCourseAndSmallClassViewDelegate{
    @objc optional func action_myCourse(type:Int) -> ()

}
class MyCourseAndSmallClassView: UIView {

    @IBInspectable var cornerRadius: CGFloat = 0.6

    @IBInspectable var shadowOffsetWidth: Int = 1
    @IBInspectable var shadowOffsetHeight: Int = 1
    @IBInspectable var shadowColor: UIColor? = UIColor.black
    @IBInspectable var shadowOpacity: Float = 0.11
    @IBOutlet weak var mySmallCourse: UIImageView!
    @IBOutlet weak var myCourse: UIImageView!
    var Delegate:MyCourseAndSmallClassViewDelegate!

    override init(frame: CGRect) {
        super.init(frame: frame)
        awakeFromNib()
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    

   
    override func awakeFromNib() {
        super.awakeFromNib()
        let subView : UIView = Bundle.main.loadNibNamed("MyCourseAndSmallClassView", owner: self, options: nil)?.first as! UIView
        subView.frame = self.frame
        self.addSubview(subView)
        self.setUI()
    }
    override func layoutSubviews(){
        let shadowPath = UIBezierPath(roundedRect: bounds, cornerRadius: cornerRadius)
        self.mySmallCourse.layer.masksToBounds = false
        self.mySmallCourse.layer.cornerRadius = 6
        self.mySmallCourse.layer.shadowColor = shadowColor?.cgColor
        self.mySmallCourse.layer.shadowOffset = CGSize.zero// CGSize(width: shadowOffsetWidth, height: shadowOffsetHeight);
        self.mySmallCourse.layer.shadowOpacity = shadowOpacity
        self.mySmallCourse.layer.shadowPath = shadowPath.cgPath
        self.mySmallCourse.layer.borderColor = UIColor.colorWithHex(hexColor: 0x32bd73).cgColor
        self.mySmallCourse.layer.borderWidth = 0.08
        self.mySmallCourse.layer.masksToBounds = true
        self.mySmallCourse.layer.cornerRadius = 6

        self.myCourse.layer.masksToBounds = false
        self.myCourse.layer.cornerRadius = 6
        self.myCourse.layer.shadowColor = shadowColor?.cgColor
        self.myCourse.layer.shadowOffset = CGSize.zero // CGSize(width: shadowOffsetWidth, height: shadowOffsetHeight);
        self.myCourse.layer.shadowOpacity = shadowOpacity
        self.myCourse.layer.shadowPath = shadowPath.cgPath
        self.myCourse.layer.borderColor = UIColor.colorWithHex(hexColor: 0x32bd73).cgColor
        self.myCourse.layer.borderWidth = 0.08
        self.myCourse.layer.masksToBounds = true
        self.myCourse.layer.cornerRadius = 6
    }
    func setUI(){
        self.myCourse.isUserInteractionEnabled = true
        let myCourseTapGesture = UITapGestureRecognizer.init(target: self, action: #selector(self.myCourseTouch_image(sender:)));
        self.myCourse.addGestureRecognizer(myCourseTapGesture);
        self.mySmallCourse.isUserInteractionEnabled = true
        let mySmallCourseTapGesture = UITapGestureRecognizer.init(target: self, action: #selector(self.mySmallCourseTouch_image(sender:)));
        self.mySmallCourse.addGestureRecognizer(mySmallCourseTapGesture);
        
    }
    @objc func myCourseTouch_image(sender: UITapGestureRecognizer){
        self.Delegate?.action_myCourse!(type: 1)
    }
    @objc func mySmallCourseTouch_image(sender: UITapGestureRecognizer){
        self.Delegate?.action_myCourse!(type: 2)
    }
    
    @IBAction func actionSmallClass(_ sender: UIButton) {
         self.Delegate?.action_myCourse!(type: 2)
    }

    @IBAction func actionMyCourse(_ sender: UIButton) {
       self.Delegate?.action_myCourse!(type: 1)
    }
    

}
