//
//  User.swift
//  云课堂2
//
//  Created by 尤增强 on 2018/6/13.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire
import SCLAlertView
class User: NSObject {

    @objc dynamic var id:String?
    @objc dynamic var ZHZJId:String?
 
    func updatePassword(schoolId:String,userName:String,displayName:String,oldPwd:String
        ,newPwd:String,mobile:String,smsCode:String){
        let dict = ["schoolId":schoolId,
                    "userName":userName,
                    "displayName":displayName,
                    "oldPwd":oldPwd,
                    "newPwd":newPwd,
                    "mobile":mobile,
                    "smsCode":smsCode]
        ZKProgressHUD.setAnimationStyle(.chrysanthemum);
        ZKProgressHUD.show()
        Alamofire.request(appAPI.MobileLogin_updatePassword, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let data = JSON(value)
                if data["code"] == 1{
                    //返回登录
                    let course : NSDictionary = ["type":"backAccountViewLogin"]
                NotificationCenter.default.post(name:NSNotification.Name("NotifyZjyLogin"), object: course);

                }else{
                    ZKProgressHUD.showMessage(data["msg"].stringValue)
                }
                ZKProgressHUD.hide()
            }else{
                ZKProgressHUD.showError("网络异常请稍后再试！");
                ZKProgressHUD.hide()
            }
        }
        
        
        
    }
    //新的登录
    func Login(userName:String,userPassword:String,isRememberpassword:Bool){
        if (userName == ""){
            ZKProgressHUD.showMessage("请输入账号!")
            return
        }else if (userPassword == ""){
            ZKProgressHUD.showMessage("请输入密码!")
            return
        }
        //取当前版本号
        let currentVersion = Bundle.main.infoDictionary!["CFBundleShortVersionString"] as! String
        let dict = ["userName":userName,
                    "userPwd":userPassword,
                    "clientId":GeTuiSdk.clientId(),
                    "sourceType":3,
                    "appVersion":currentVersion] as [String : Any]
        ZKProgressHUD.setAnimationStyle(.chrysanthemum);
        ZKProgressHUD.show()
        Alamofire.request(appAPI.MobileLogin_newLogin, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let data = JSON(value)
                if data["code"] == 1{
                    self.saveAccount(data: data, userPassword: userPassword,isRememberpassword: isRememberpassword)
                }else if data["code"] == 2{
                    self.alertController(data: data)
                }else{
                    ZKProgressHUD.showMessage(data["msg"].stringValue)
                }
                ZKProgressHUD.hide()
            }else{
                ZKProgressHUD.showError("网络异常请稍后再试！");
                ZKProgressHUD.hide()
            }
        }
        
    }
    func saveAccount(data:JSON,userPassword:String,isRememberpassword:Bool){
        var account = Account.defaultAccount
        account.displayName =  data["displayName"].stringValue
        account.avatar = data["url"].stringValue
        account.id =  data["userId"].stringValue
        account.number = data["userName"].stringValue
        switch data["userType"].stringValue{
        case "2","9","11","12","14","15":
            account.role = "2"
        default:
            account.role = "1"
        }//1为学生，2为老师
        account.schoolName = data["schoolName"].stringValue
        account.schoolId = data["schoolId"].stringValue
        account.token = data["token"].stringValue
        account.isValid = data["isValid"].intValue
        account.secondUserName = data["secondUserName"].stringValue
        account.password = userPassword
        account.isRememberThepassword = isRememberpassword
        
        if data["isNeedMergeUserName"] == 1 && data["isValid"] == 0{//存在两个用户名并且  需要认证手机  去选择用户名
             let course : NSDictionary = ["type":"selectUserNameViewLogin"]
         NotificationCenter.default.post(name:NSNotification.Name("NotifyZjyLogin"),object: course);
             self.selectUserNam(account: account)
        }else{
            if data["isValid"] == 0{
                //取认证手机
                let vc = bindingPhoneNumber()
                vc.account = account
                vc.userModel = self
                vc.modalTransitionStyle = .crossDissolve

                NavigatorService.modelToPage(vc, animated: true, completion:{})
            }else{
                //存在两个用户名
                if data["isNeedMergeUserName"] == 1{
                    let course : NSDictionary = ["type":"selectUserNameViewLogin"]

                NotificationCenter.default.post(name:NSNotification.Name("NotifyZjyLogin"),object: course);
                    self.selectUserNam(account: account)
                }else{//直接登录
                    Account.saveAccount(account)
                    self.ZHZJId = data["userId"].stringValue
                }
            }
        }
//        if data["isValid"] == 0{
//            //取认证手机
//            let vc = bindingPhoneNumber()
//            vc.account = account
//            vc.userModel = self
//            vc.modalTransitionStyle = .crossDissolve
//
//            NavigatorService.modelToPage(vc, animated: true, completion:{})
//        }else{
//            //存在两个用户名
//            if !data["secondUserName"].stringValue.isEmpty{
//                let course : NSDictionary = ["type":"selectUserNameViewLogin"]
//
//            NotificationCenter.default.post(name:NSNotification.Name("NotifyZjyLogin"),object: course);
//                self.selectUserNam(account: account)
//            }else{
//                Account.saveAccount(account)
//                self.ZHZJId = data["userId"].stringValue
//            }
//        }
    }
    //选取用户名
    func selectUserNam(account:Account){
        let vc = selectUserNameView()
        vc.account = account
        vc.userModel = self
        vc.view.backgroundColor = UIColor.init(red: 0, green: 0, blue: 0, alpha: 0.1)
        vc.modalPresentationStyle = .custom
        vc.modalTransitionStyle = .crossDissolve
        NavigatorService.modelToPage(vc, animated: true, completion: {})
    }
  

    
    @objc func firstButtonTapped() {
        print("第一个按钮点击")
    }
    
    func alertController(data:JSON){
        //提示框
        let alertController = UIAlertController(title: "温馨提示！",
                                                message:"尊敬的用户您好，经系统检测,发现存在与您账号，密码相同的用户,为了您的账号安全，请及时修改密码！", preferredStyle: .alert)
        let cancelAction = UIAlertAction(title: "取消", style: .cancel, handler: nil)
        
        let okAction = UIAlertAction(title: "确定", style: .destructive, handler: {
            action in
            //跳转验证
            let course : NSDictionary = ["type":"phoneLogin","UserName":data["userName"].stringValue,"oldPwd":data["oldPwd"].stringValue]
            NotificationCenter.default.post(name:NSNotification.Name("NotifyZjyLogin"), object: course);
            print("跳转验证")
        })
        alertController.addAction(cancelAction)
        alertController.addAction(okAction)
        NavigatorService.modelToPage(alertController, animated: true, completion:{})
    }
}
