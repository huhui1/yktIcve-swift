//
//  selectUserNameView.swift
//  云课堂-智慧职教
//
//  Created by 志辉教育 on 2018/8/13.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import Alamofire
import SwiftyJSON
class selectUserNameView: UIViewController,UITextFieldDelegate {
    @IBOutlet var viewSizeHt: NSLayoutConstraint!
    @IBOutlet var codeText: UITextField!
    @IBOutlet var codeBtn: UIButton!
    @IBOutlet var labText: UILabel!
    @IBOutlet var phoneText: UITextField!
    @IBOutlet var labiconfont: UILabel!
    @IBOutlet var firstName: UIButton!
    @IBOutlet var secondName: UIButton!
    var ht:CGFloat = 0
    var toolBar = UIToolbar();
    var userModel: User!
    var account = Account.defaultAccount
    private var countdownTimer: Timer?
    private var remainingSeconds: Int = 0 {
        willSet {
            codeBtn.setTitle("重新获取\(newValue)秒", for: .normal)
            
            if newValue <= 0 {
                codeBtn.setTitle("获取验证码", for: .normal)
                isCounting = false
            }
        }
    }
    var isCounting = false {
        willSet {
            if newValue {
                countdownTimer = Timer.scheduledTimer(timeInterval: 1, target: self, selector: #selector(self.updateTime), userInfo: nil, repeats: true)
                
                remainingSeconds = 60
                codeBtn.setTitleColor(UIColor.bg, for: .normal)
            } else {
                countdownTimer?.invalidate()
                countdownTimer = nil
                codeBtn.setTitleColor(UIColor.black, for: .normal)
            }
            
            codeBtn.isEnabled = !newValue
        }
    }
    override func viewDidLoad() {
        super.viewDidLoad()
        self.labiconfont.font = UIFont.init(name: "iconfont", size: 64);
        self.labiconfont.text = "\u{e753}"
        self.labiconfont.layer.masksToBounds = true
        self.labiconfont.layer.cornerRadius = 45
        self.labiconfont.textColor = UIColor.colorWithHex(hexColor: 0x93D0A7)
        self.labiconfont.backgroundColor = UIColor.white
       
        self.secondName.setTitleColor(UIColor.white, for: .selected)
        self.secondName.setTitleColor(UIColor.lightGray, for: .normal)
        self.secondName.layer.masksToBounds = true
        self.secondName.layer.cornerRadius = 20
        self.secondName.backgroundColor = UIColor.colorWithHex(hexColor: 0xEBEBEB)
        
        self.firstName.setTitleColor(UIColor.white, for: .selected)
        self.firstName.setTitleColor(UIColor.lightGray, for: .normal)
        self.firstName.backgroundColor = UIColor.colorWithHex(hexColor: 0x94D1A8)
        self.firstName.layer.masksToBounds = true
        self.firstName.layer.cornerRadius = 20
        self.firstName.setTitle(account.number, for: .normal)
        self.secondName.setTitle(account.secondUserName, for: .normal)
        self.phoneText.delegate = self
        self.codeText.delegate = self
        self.phoneText.clearButtonMode = .whileEditing
        self.codeText.clearButtonMode = .whileEditing
        self.labText.text = "选择保留的用户名将成为您登录智慧职教系统的唯一用户名\n您可使用该用户名及密码一站式访问智慧职教、职教云及mooc学院\n另一用户名将不能继续使用"
        if UIScreen.main.bounds.height < 600{//iphone6以上的手机高度不够
            self.viewSizeHt.constant = 50
        }
        self.codeBtn.layer.borderColor = UIColor.colorWithHex(hexColor: 0x84C999).cgColor
        self.codeBtn.layer.borderWidth = 1
        self.codeBtn.layer.cornerRadius = 5
        self.settoolBar()

        
        // Do any additional setup after loading the view.
    }
    func  textFieldShouldBeginEditing(_ textField: UITextField) -> Bool {
        textField.inputAccessoryView = toolBar
        return true
    }
  
    
    //键盘隐藏
    override func touchesEnded(_ touches: Set<UITouch>, with event: UIEvent?) {
         self.view.endEditing(true)
         self.view.frame = CGRect.init(x:0, y: 0, width:self.view.bounds.width, height: self.view.bounds.height);
    }
    func textFieldDidBeginEditing(_ textField: UITextField) {
        if UIScreen.main.bounds.height <= 600{
            ht = 65
        }
        if(UIDevice.current.model == "iPad"){
            ht = 30
        }
        if textField == self.phoneText{
            self.view.frame = CGRect.init(x:0, y: -50 - ht, width:self.view.bounds.width, height: self.view.bounds.height);
        }else if textField == self.codeText{
            self.view.frame = CGRect.init(x:0, y: -70 - ht, width:self.view.bounds.width, height: self.view.bounds.height);
        }else{
            self.view.frame = CGRect.init(x:0, y: 0, width:self.view.bounds.width, height: self.view.bounds.height);
        }
    }
    func settoolBar(){
        toolBar = common.share.AddToolKeyboardDoneBar()
        let doneButton = UIBarButtonItem(title: "确定", style: .plain, target: self, action: #selector(self.DoneClick));
        let spaceButton = UIBarButtonItem(barButtonSystemItem: .flexibleSpace, target: nil, action: nil)
        toolBar.setItems([spaceButton,doneButton], animated: false);
    }
    
    @objc func DoneClick(){
        self.view.endEditing(true)
        self.view.frame = CGRect.init(x:0, y: 0, width:self.view.bounds.width, height: self.view.bounds.height);
    }
    
    override func viewWillDisappear(_ animated: Bool) {
        NotificationCenter.default.removeObserver(self)
    }
    
    @objc private func updateTime() {
        remainingSeconds -= 1
    }
    @IBAction func getCode(_ sender: UIButton) {
        if self.phoneText.text == ""{
            ZKProgressHUD.showMessage("请输入手机号码")
            return
        }else{
            let Mobile = self.phoneText.text!
            let result = Mobile.substring(toIndex: 1)//从起始截取到索引的所有字符串
            let value = Int(result)!
            if(Mobile.description.count != 11  || value != 1){
                ZKProgressHUD.showMessage("请输入正确的手机号码")
                return
            }else{
                self.isCounting = true//开启倒计时
            }
        }
        let dict = ["userName":"",
                    "mobile":self.phoneText.text!,
                    "sourceType":3] as [String : Any]
        ZKProgressHUD.setAnimationStyle(.chrysanthemum);
        ZKProgressHUD.show()
        Alamofire.request(appAPI.MobileLogin_sendMessage, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let data = JSON(value)
                if data["code"] == 1{
                    //成功发送验证码
                }else{
                    ZKProgressHUD.showMessage(data["msg"].stringValue)
                }
                ZKProgressHUD.hide()
            }else{
                ZKProgressHUD.showError("网络异常请稍后再试！");
                ZKProgressHUD.hide()
            }
        }

        
    }
    init() {
        super.init(nibName: "selectUserNameView", bundle: nil)
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    
    @IBAction func selectName(_ sender: UIButton) {
        sender.isSelected = !sender.isSelected
        if sender.tag == 1{
            if sender.isSelected{
                self.secondName.isSelected = false
                self.secondName.backgroundColor = UIColor.colorWithHex(hexColor: 0xEBEBEB)
            }else{
                self.firstName.isSelected = true

            }
        }else{
            if sender.isSelected{
                self.firstName.isSelected = false
                self.firstName.backgroundColor = UIColor.colorWithHex(hexColor: 0xEBEBEB)
            }else{
                self.secondName.isSelected = true

            }
        }
        if sender.isSelected{
            sender.backgroundColor = UIColor.colorWithHex(hexColor: 0x94D1A8)
        }else{
            sender.backgroundColor = UIColor.colorWithHex(hexColor: 0xEBEBEB)
        }
    }
    @IBAction func confirm_Action(_ sender: UIButton) {
        let type = self.firstName.isSelected ? account.number! : account.secondUserName!
        if self.phoneText.text == ""{
            ZKProgressHUD.showMessage("请输入手机号码")
            return
        }else{
            let Mobile = self.phoneText.text!
            let result = Mobile.substring(toIndex: 1)//从起始截取到索引的所有字符串
            let value = Int(result)!
            if(Mobile.description.count != 11  || value != 1){
                ZKProgressHUD.showMessage("请输入正确的手机号码")
                return
            }else if self.codeText.text == ""{
                ZKProgressHUD.showMessage("请输入验证码")
                return
            }
        }
        let alertController = UIAlertController(title: "温馨提示！",
                                                message:"你选择的用户名为\(type),下次请用此用户名登录", preferredStyle: .alert)
        let cancelAction = UIAlertAction(title: "取消", style: .cancel, handler: nil)
        let okAction = UIAlertAction(title: "确定", style: .destructive, handler: {
            action in
            self.selectName(type: type as NSString)
        })
        alertController.addAction(cancelAction)
        alertController.addAction(okAction)
        self.present(alertController, animated: true, completion: nil)
    }
    func selectName(type:NSString){
        let dict = ["userId":account.id!,
                    "userName":account.number!,
                    "secondUserName":account.secondUserName!,
                    "selectUserName":type,
                    "pwd":account.password!,
                    "mobile":self.phoneText.text!,
                    "smsCode":self.codeText.text!] as [String : Any]
        ZKProgressHUD.setAnimationStyle(.chrysanthemum);
        ZKProgressHUD.show()
        Alamofire.request(appAPI.MobileLogin_saveSelectUserName, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let data = JSON(value)
                if data["code"] == 1{
                    //登录成功
                    self.account.number = type as String
                    Account.saveAccount(self.account)
                    self.userModel.ZHZJId = self.account.id
                }else{
                    ZKProgressHUD.showMessage(data["msg"].stringValue)
                }
                ZKProgressHUD.hide()
            }else{
                ZKProgressHUD.showError("网络异常请稍后再试！");
                ZKProgressHUD.hide()
            }
        }
    }
    /*
    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        // Get the new view controller using segue.destinationViewController.
        // Pass the selected object to the new view controller.
    }
    */

}
