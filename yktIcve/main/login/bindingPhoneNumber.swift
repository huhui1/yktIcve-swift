//
//  bindingPhoneNumber.swift
//  云课堂2
//
//  Created by 志辉教育 on 2018/8/3.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import Alamofire
import SwiftyJSON
class bindingPhoneNumber: UIViewController,UITextFieldDelegate{
    var isFromSetInfo = false
    var account = Account.defaultAccount
    var toolBar = UIToolbar();
    var userModel: User!
    var loginViewModel: loginViewModel!
    var reloadTel :((_ Tel:String) ->Void)?
    @IBOutlet var labText: UILabel!
    @IBOutlet var labText3: UILabel!
    @IBOutlet var labText2: UILabel!
    @IBOutlet var phoneText: UITextField!
    @IBOutlet var backBtn: UIButton!
    @IBOutlet var codeBtn: UIButton!
    @IBOutlet var codeText: UITextField!
    @IBOutlet var completeVerification: UIButton!
    private var countdownTimer: Timer?

    private var remainingSeconds: Int = 0 {
        willSet {
            codeBtn.setTitle("重新获取\(newValue)秒", for: .normal)
            
            if newValue <= 0 {
                codeBtn.setTitle("获取验证码", for: .normal)
                isCounting = false
            }
        }
    }

    var isCounting = false {
        willSet {
            if newValue {
                countdownTimer = Timer.scheduledTimer(timeInterval: 1, target: self, selector: #selector(self.updateTime), userInfo: nil, repeats: true)
                
                remainingSeconds = 60
            } else {
                countdownTimer?.invalidate()
                countdownTimer = nil
            }
            codeBtn.isEnabled = !newValue
        }
    }

    override func viewDidLoad() {
        super.viewDidLoad()
        self.backBtn.titleLabel?.font = UIFont(name: "iconfont", size: 16);
        self.backBtn.setTitle("\u{e6f7}返回", for:.normal);
        self.phoneText.keyboardType = .numberPad
        self.codeText.keyboardType = .numberPad
        self.phoneText.delegate = self
        self.codeText.delegate = self
        self.phoneText.clearButtonMode = .whileEditing
        self.codeText.clearButtonMode = .whileEditing
        self.settoolBar()
        self.setshadow()
        if self.isFromSetInfo{
            self.labText.text = "请输入验证码更换手机号码"
            self.labText2.text = "一个手机号只能绑定一个账号"
            self.labText3.text = "更换手机号"
        }else{
            self.labText.text = "系统检测您尚未认证"
            self.labText2.text = "请输入验证码完成修改"
            self.labText3.text = "绑定手机号"
        }

    }
    override func viewDidDisappear(_ animated: Bool) {
        //移除所有监听
        NotificationCenter.default.removeObserver(self)
    }
    init() {
        super.init(nibName: "bindingPhoneNumber", bundle: nil)
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    func setshadow(){
        self.codeBtn.layer.borderColor = UIColor.colorWithHex(hexColor: 0x84C999).cgColor
        self.codeBtn.layer.borderWidth = 1
        self.codeBtn.layer.cornerRadius = 5
        let shadowPath = UIBezierPath(roundedRect: self.completeVerification.bounds, cornerRadius: 0.6)
        self.completeVerification.layer.masksToBounds = true
        self.completeVerification.layer.cornerRadius = 9
        self.completeVerification.layer.shadowColor = UIColor.colorWithHex(hexColor: 0x58B373).cgColor
        self.completeVerification.layer.shadowOffset = CGSize(width: 0.1, height: 0.1);
        self.completeVerification.layer.shadowOpacity = 0.5
        self.completeVerification.layer.shadowPath = shadowPath.cgPath
    }
   
    @objc private func updateTime() {
        remainingSeconds -= 1
    }
    //键盘隐藏
    override func touchesEnded(_ touches: Set<UITouch>, with event: UIEvent?) {
        self.view.endEditing(true)
        self.view.frame = CGRect.init(x:0, y: 0, width:self.view.bounds.width, height: self.view.bounds.height);
    }
    //点击return 收回键盘
    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        textField.resignFirstResponder()
        return true
    }
  
    func textFieldDidBeginEditing(_ textField: UITextField) {
        
        if UIScreen.main.bounds.height <= 600{
            if textField == self.phoneText{
                self.view.frame = CGRect.init(x:0, y: -50 , width:self.view.bounds.width, height: self.view.bounds.height);
            }else if textField == self.codeText{
                self.view.frame = CGRect.init(x:0, y: -80 , width:self.view.bounds.width, height: self.view.bounds.height);
            }else{
                self.view.frame = CGRect.init(x:0, y: 0, width:self.view.bounds.width, height: self.view.bounds.height);
            }
        }
    }
  
    
    func settoolBar(){
        toolBar = common.share.AddToolKeyboardDoneBar()
        let doneButton = UIBarButtonItem(title: "确定", style: .plain, target: self, action: #selector(self.DoneClick));
        let spaceButton = UIBarButtonItem(barButtonSystemItem: .flexibleSpace, target: nil, action: nil)
        toolBar.setItems([spaceButton,doneButton], animated: false);
    }
    @objc func DoneClick(){
        self.view.endEditing(true)
        self.view.frame = CGRect.init(x:0, y: 0, width:self.view.bounds.width, height: self.view.bounds.height);
    }
    
    func  textFieldShouldBeginEditing(_ textField: UITextField) -> Bool {
        textField.inputAccessoryView = toolBar
        return true
    }
    @IBAction func getCode(_ sender: UIButton) {
        if self.phoneText.text == ""{
            ZKProgressHUD.showMessage("请输入手机号码")
            return
        }else{
            let Mobile = self.phoneText.text!
            let result = Mobile.substring(toIndex: 1)//从起始截取到索引的所有字符串
            let value = Int(result)!
            if(Mobile.description.count != 11  || value != 1){
                ZKProgressHUD.showMessage("请输入正确的手机号码")
                return
            }else{
                self.isCounting = true//开启倒计时
            }
        }
        let dict = ["userName":account.number!,
                    "mobile":self.phoneText.text!,
                    "sourceType":3] as [String : Any]
        ZKProgressHUD.setAnimationStyle(.chrysanthemum);
        ZKProgressHUD.show()
        Alamofire.request(appAPI.MobileLogin_sendMessage, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            ZKProgressHUD.hide()
            if let value = response.result.value {
                let data = JSON(value)
                if data["code"] == 1{
                    //成功发送验证码
                }else{
                    ZKProgressHUD.showMessage(data["msg"].stringValue)
                }
            }else{
                ZKProgressHUD.showError("网络异常请稍后再试！");
            }
        }
    }
    @IBAction func backAction(_ sender: UIButton) {
        self.dismiss(animated: true, completion: nil)
    }
    
    /*
    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        // Get the new view controller using segue.destinationViewController.
        // Pass the selected object to the new view controller.
    }
    */
    //完成认证
    @IBAction func completeVerificationAction(_ sender: UIButton) {
     
        if self.phoneText.text == ""{
            ZKProgressHUD.showMessage("请输入手机号码")
            return
        }else{
            let Mobile = self.phoneText.text!
            let result = Mobile.substring(toIndex: 1)//从起始截取到索引的所有字符串
            let value = Int(result)!
            if(Mobile.description.count != 11  || value != 1){
                ZKProgressHUD.showMessage("请输入正确的手机号码")
                return
            }
        }
        if self.codeText.text == nil{
            ZKProgressHUD.showMessage("请输入验证码")
            return
        }
        
        let dict = ["userId":account.id!,
                    "mobile":self.phoneText.text!,
                    "smsCode":self.codeText.text!] as [String : Any]
        ZKProgressHUD.setAnimationStyle(.chrysanthemum);
        ZKProgressHUD.show()
        Alamofire.request(appAPI.MobileLogin_updateMobile, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let data = JSON(value)
                if data["code"] == 1{
                    
                    if self.isFromSetInfo{
                        self.reloadTel!(self.phoneText.text!)
                        self.dismiss(animated: true, completion: nil)
                    }else{
                        self.dismiss(animated: true, completion: nil)
                        //验证成功
                        Account.saveAccount(self.account)
                        self.userModel.ZHZJId = self.account.id!
                    }
                }else{
                    ZKProgressHUD.showMessage(data["msg"].stringValue)
                }
                ZKProgressHUD.hide()
            }else{
                ZKProgressHUD.showMessage("网络异常请稍后再试！");
                ZKProgressHUD.hide()
            }
        }
    }
    
    
}
