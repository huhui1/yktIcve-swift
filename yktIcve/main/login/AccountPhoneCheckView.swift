//
//  AccountPhoneCheckView.swift
//  云课堂2
//
//  Created by 志辉教育 on 2018/7/28.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import Alamofire
import SwiftyJSON
class AccountPhoneCheckView: UIView,UITextFieldDelegate {
    var toolBar = UIToolbar();
    var UserName:String = ""
    private var countdownTimer: Timer?
    @IBOutlet var SchoolName: UIButton!
    @IBOutlet var BackBtn: UIButton!
    @IBOutlet var phone: UITextField!
    @IBOutlet var codeBtn: UIButton!
    @IBOutlet var verificationCode: UITextField!
    @IBOutlet var subCode: UIButton!
    @IBOutlet var ConfirmPassword: UITextField!
    @IBOutlet var NewPassword: UITextField!
    @IBOutlet var NameText: UITextField!
    var ht:CGFloat = 0
    var oldPwd:String = ""
    var loginViewModel: loginViewModel!
    private var myContext = 0
    private var remainingSeconds: Int = 0 {
        willSet {
            codeBtn.setTitle("重新获取\(newValue)秒", for: .normal)
            
            if newValue <= 0 {
                codeBtn.setTitle("获取验证码", for: .normal)
                isCounting = false
            }
        }
    }
    var isCounting = false {
        willSet {
            if newValue {
                countdownTimer = Timer.scheduledTimer(timeInterval: 1, target: self, selector: #selector(self.updateTime), userInfo: nil, repeats: true)
                
                remainingSeconds = 60
                codeBtn.setTitleColor(UIColor.bg, for: .normal)
            } else {
                countdownTimer?.invalidate()
                countdownTimer = nil
                codeBtn.setTitleColor(UIColor.black, for: .normal)
            }
            
            codeBtn.isEnabled = !newValue
        }
    }
    init(frame: CGRect,viewModel: loginViewModel) {
        super.init(frame: frame)
        awakeFromNib(viewModel:viewModel)
    }
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    func awakeFromNib(viewModel: loginViewModel) {
        super.awakeFromNib()
        let subView : UIView = Bundle.main.loadNibNamed("AccountPhoneCheckView", owner: self, options: nil)?.first as! UIView
        subView.frame = self.frame
        self.addSubview(subView)
        loginViewModel = viewModel
        self.settoolBar()
        //绑定ViewModel， 使用 通知 or KVO
        bindingViewModel()
        self.phone.delegate = self
        self.verificationCode.delegate = self
        self.NameText.delegate = self
        self.NewPassword.delegate = self
        self.ConfirmPassword.delegate = self
        //手机号码设置数字键盘
        self.phone.keyboardType = .numberPad
        self.verificationCode.keyboardType = .numberPad

    }
    

    //键盘隐藏
    override func touchesEnded(_ touches: Set<UITouch>, with event: UIEvent?) {
        self.endEditing(true)
        self.frame = CGRect.init(x:0, y: 0, width:self.bounds.width, height: self.bounds.height);
    }
 
   
    @objc private func updateTime() {
        remainingSeconds -= 1
    }
    override func layoutSubviews() {
        self.subCode.layer.borderColor = UIColor.colorWithHex(hexColor: 0x32bd73).cgColor
        self.subCode.layer.borderWidth = 1
        self.BackBtn.titleLabel?.font = UIFont.init(name: "iconfont", size: 18)
        self.BackBtn.setTitle("\u{e703}返回", for: .normal)
    }
    func settoolBar(){
        toolBar = common.share.AddToolKeyboardDoneBar()
        let doneButton = UIBarButtonItem(title: "确定", style: .plain, target: self, action: #selector(self.DoneClick));
        let spaceButton = UIBarButtonItem(barButtonSystemItem: .flexibleSpace, target: nil, action: nil)
        toolBar.setItems([spaceButton,doneButton], animated: false);
    }
    @objc func bindingViewModel() {
        //使用KVO，监听name属性的变化
        loginViewModel.addObserver(self, forKeyPath: "schoolName", options: [.new, .old], context: &myContext)
    }
    deinit {
        loginViewModel.removeObserver(self, forKeyPath: "schoolName")
        
    }
    @objc func DoneClick(){
        self.endEditing(true)
        self.frame = CGRect.init(x:0, y: 0, width:self.bounds.width, height: self.bounds.height);
    }
    
    func  textFieldShouldBeginEditing(_ textField: UITextField) -> Bool {
        textField.inputAccessoryView = toolBar
        return true
    }
    func textFieldDidBeginEditing(_ textField: UITextField) {
        
        if UIScreen.main.bounds.height <= 600{
            ht = 65
        }
        if(UIDevice.current.model == "iPad"){
            ht = 40
        }
        if textField == self.phone{
             self.frame = CGRect.init(x:0, y: -50 - ht, width:self.bounds.width, height: self.bounds.height);
        }else if textField == self.verificationCode{
             self.frame = CGRect.init(x:0, y: -70 - ht, width:self.bounds.width, height: self.bounds.height);
        }else{
             self.frame = CGRect.init(x:0, y: 0, width:self.bounds.width, height: self.bounds.height);
        }
    }
    //获取验证码 MobileLogin_sendMessage
    @IBAction func getCode(_ sender: UIButton) {
        
        if self.phone.text == ""{
            ZKProgressHUD.showMessage("请输入手机号码")
            return
        }else{
            let Mobile = self.phone.text!
            let result = Mobile.substring(toIndex: 1)//从起始截取到索引的所有字符串
            let value = Int(result)!
            if(Mobile.description.count != 11  || value != 1){
                ZKProgressHUD.showMessage("请输入正确的手机号码")
                return
            }else{
                self.isCounting = true//开启倒计时
            }
        }
        let dict = ["userName":self.UserName,
                    "mobile":self.phone.text!,
                    "sourceType":3] as [String : Any]
        ZKProgressHUD.setAnimationStyle(.chrysanthemum);
        ZKProgressHUD.show()
        Alamofire.request(appAPI.MobileLogin_sendMessage, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let data = JSON(value)
                if data["code"] == 1{
                  //成功发送验证码
                }else{
                    ZKProgressHUD.showMessage(data["msg"].stringValue)
                }
                ZKProgressHUD.hide()
            }else{
                ZKProgressHUD.showError("网络异常请稍后再试！");
                ZKProgressHUD.hide()
            }
        }
    }
    
    //选择学校
    @IBAction func SelectSchoolList(_ sender: UIButton) {
        sender.isSelected = true
        print("------跳转学习列表------")
        
        loginViewModel.schoolList()
    }
    
    //提交验证码
    @IBAction func submitCode(_ sender: UIButton) {
        //验证判断
        if loginViewModel.schoolId == nil{
            ZKProgressHUD.showMessage("请选择学校!")
            return
        }else if self.NameText.text == ""{
            ZKProgressHUD.showMessage("请输入姓名!")
            return
        }else if self.NewPassword.text == ""{
            ZKProgressHUD.showMessage("请输入新密码!")
            return
        }else if self.ConfirmPassword.text == ""{
            ZKProgressHUD.showMessage("请确认密码!")
            return
        }else if self.NewPassword.text != self.ConfirmPassword.text{
            ZKProgressHUD.showMessage("两次输入密码不相同，请从新输入!")
            return
        }else if self.phone.text == ""{
            ZKProgressHUD.showMessage("请输入手机号码!")
            return
        }else if self.ConfirmPassword.text == ""{
            ZKProgressHUD.showMessage("请输入验证吗")
            return
        }
        loginViewModel.updatePassword(schoolId: loginViewModel.schoolId!, userName: self.UserName, displayName: self.NameText.text!, oldPwd: self.oldPwd, newPwd: self.NewPassword.text!, mobile: self.phone.text!, smsCode: self.verificationCode.text!)
    }
    @IBAction func BackBtn(_ sender: UIButton) {
        let course : NSDictionary = ["type":"backAccountViewLogin"]
        NotificationCenter.default.post(name:NSNotification.Name("NotifyZjyLogin"), object: course);
    }
}
extension AccountPhoneCheckView {
    override func observeValue(forKeyPath keyPath: String?, of object: Any?, change: [NSKeyValueChangeKey : Any]?, context: UnsafeMutableRawPointer?) {
        if keyPath == "schoolName" {
            if let newValue = change?[NSKeyValueChangeKey.newKey] as? String {
                self.SchoolName.setTitle(newValue, for: .selected)
                self.SchoolName.setTitleColor(UIColor.black, for: .selected)
            }
        }else{
            print("------------------")
        }
    }
}
