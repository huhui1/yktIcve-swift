//
//  ResetPasswordView.swift
//  云课堂2
//
//  Created by cc on 2018/6/19.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire

class ResetPasswordView: UIViewController,UITextFieldDelegate {
    

    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.bg
        self.title = "重置密码"
        self.setHeadUI()
        self.setUI()
        // Do any additional setup after loading the view.
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    //头部
    func setHeadUI(){
        self.view.addSubview(self.btn_back)
        self.view.addSubview(self.lab_title)
        self.btn_back.snp.makeConstraints { (make) in
            make.width.equalTo(60)
            make.height.equalTo(25)
            make.left.equalTo(20)
            make.top.equalTo(30)
        }
        self.lab_title.snp.makeConstraints { (make) in
            make.width.equalTo(80)
            make.height.equalTo(25)
            make.centerX.equalTo(self.view.snp.centerX)
            make.top.equalTo(40)
        }
    }
    
    func setUI(){
        toolBar = common.share.AddToolKeyboardDoneBar()
        let doneButton = UIBarButtonItem(title: "确定", style: .plain, target: self, action: #selector(self.DoneClick));
        let spaceButton = UIBarButtonItem(barButtonSystemItem: .flexibleSpace, target: nil, action: nil)
        toolBar.setItems([spaceButton,doneButton], animated: false);
        
        self.view.addSubview(self.school)
        self.view.addSubview(self.account)
        self.view.addSubview(self.phoneNumber)
        self.view.addSubview(self.code)
        self.view.addSubview(self.schoolIcon)
        self.view.addSubview(self.btn_reset)
        self.account.delegate = self
        self.phoneNumber.delegate = self
        self.code.delegate = self
        
        self.account.snp.makeConstraints { (make) in
            make.width.equalTo(width / 3 * 2)
            make.height.equalTo(40)
            make.centerX.equalTo(self.view.snp.centerX)
            make.top.equalTo(170)
        }
        let accounticon =  UILabel(frame:CGRect(x:0,y:0,width:40,height:40));
        accounticon.backgroundColor = UIColor.colorWithHex(hexColor: 0xd9f5ee)
        accounticon.textAlignment = .center
        accounticon.font = UIFont.init(name: "iconfont", size: 27)
        accounticon.text = "\u{e60c}"
        accounticon.textColor = UIColor.bg
        self.account.leftView = accounticon
        self.account.leftViewMode = UITextFieldViewMode.always
        
        self.school.snp.makeConstraints { (make) in
            make.width.equalTo(width / 3 * 2 - 40)
            make.height.equalTo(40)
            make.bottom.equalTo(self.account.snp.top).offset(-15)
            make.right.equalTo(self.account.snp.right)
        }
        
        let tap = UITapGestureRecognizer.init(target: self, action: #selector(self.schoolList(sender:)))
        self.school.addGestureRecognizer(tap)
        self.school.isUserInteractionEnabled = true
        self.schoolIcon.snp.makeConstraints { (make) in
            make.height.width.equalTo(40)
            make.centerY.equalTo(self.school.snp.centerY)
            make.right.equalTo(self.school.snp.left)
        }
        
        self.phoneNumber.snp.makeConstraints { (make) in
            make.width.equalTo(width / 3 * 2)
            make.height.equalTo(40)
            make.top.equalTo(self.account.snp.bottom).offset(15)
            make.centerX.equalTo(self.view.snp.centerX)
        }
        
        let phoneicon =  UILabel(frame:CGRect(x:0,y:0,width:40,height:40));
        phoneicon.backgroundColor = UIColor.colorWithHex(hexColor: 0xd9f5ee)
        phoneicon.textAlignment = .center
        phoneicon.font = UIFont.init(name: "iconfont", size: 27)
        phoneicon.text = "\u{e737}"
        phoneicon.textColor = UIColor.bg
        self.phoneNumber.leftView = phoneicon
        self.phoneNumber.leftViewMode = UITextFieldViewMode.always
        
        
        self.code.snp.makeConstraints { (make) in
            make.width.equalTo(width / 3 * 2)
            make.height.equalTo(40)
            make.top.equalTo(self.phoneNumber.snp.bottom).offset(15)
            make.centerX.equalTo(self.view.snp.centerX)
        }
        
        let codeicon =  UILabel(frame:CGRect(x:0,y:0,width:40,height:40));
        codeicon.backgroundColor = UIColor.colorWithHex(hexColor: 0xd9f5ee)
        codeicon.textAlignment = .center
        codeicon.font = UIFont.init(name: "iconfont", size: 27)
        codeicon.text = "\u{e651}"
        codeicon.textColor = UIColor.bg
        self.code.leftView = codeicon
        self.code.leftViewMode = UITextFieldViewMode.always
        
        let codeBtn = UIButton(frame:CGRect(x: 0,y:0,width:90,height:40))
        codeBtn.backgroundColor = UIColor.colorWithHex(hexColor: 0xa4fae2)
        codeBtn.titleLabel?.textAlignment = .center
        codeBtn.titleLabel?.font = UIFont.init(name: "iconfont", size: 15)
        codeBtn.setTitleColor(UIColor.gray, for: .normal)
        codeBtn.setTitle("获取验证码", for: .normal)
        self.code.rightView = codeBtn
        self.code.rightViewMode = UITextFieldViewMode.always
        
        codeBtn.addTarget(self, action: #selector(self.getCode), for: .touchUpInside)
        
        self.btn_reset.snp.makeConstraints { (make) in
            make.width.equalTo(self.account.snp.width)
            make.height.equalTo(35)
            make.top.equalTo(self.code.snp.bottom).offset(40)
            make.centerX.equalTo(self.view.snp.centerX)
        }
        self.btn_reset.layer.masksToBounds = true
        self.btn_reset.layer.cornerRadius = 15
    }
    //返回
    @objc func Back(){
         self.presentingViewController?.dismiss(animated: true, completion: nil);
    }
    //学校列表
    @objc func schoolList(sender: UITapGestureRecognizer){
        let viewCon = selectSchoolListView()
        viewCon.reloadSchoolClosure = {(SchoolId,SchoolName) in
            self.school.text = SchoolName
            self.school.textColor = UIColor.black
            self.schoolId = SchoolId
        }
        self.present(viewCon, animated: true, completion: nil)
    }
    //收回键盘
    @objc func DoneClick(){
        self.view.endEditing(true)
    }
    func  textFieldShouldBeginEditing(_ textField: UITextField) -> Bool {
        textField.inputAccessoryView = toolBar
        return true
    }
    
    let width = UIScreen.main.bounds.width
    let height = UIScreen.main.bounds.height
    lazy var schoolId : String = {return ""}()
    lazy var userId : String = {return ""}()
    lazy var MD5 : String = {return ""}()
    lazy var notificationId : String = {return ""}()
    
    
    var toolBar = UIToolbar();
    lazy var schoolIcon : UILabel = {
        let lab = UILabel()
        lab.text = "\u{e64c}"
        lab.backgroundColor = UIColor.colorWithHex(hexColor: 0xd9f5ee)
        lab.font = UIFont.init(name: "iconfont", size: 27)
        lab.textAlignment = .center
        lab.textColor = UIColor.bg
        return lab
    }()
    lazy var school : UILabel = {
        let text = UILabel()
        text.backgroundColor = UIColor.white
        text.font = UIFont.italicSystemFont(ofSize: 16)
        text.text = "请选择学校"
        text.textColor = UIColor.colorWithHex(hexColor: 0xc7c7cd)
        return text
    }()
    lazy var account : UITextField = {
        let text = UITextField()
        text.backgroundColor = UIColor.white
        text.font = UIFont.init(name: "ZapfDingbatsITC", size: 17)
        text.placeholder = "请输入账号"
        text.clearButtonMode = .whileEditing
        return text
    }()
    lazy var phoneNumber : UITextField = {
        let text = UITextField()
        text.backgroundColor = UIColor.white
        text.font = UIFont.init(name: "ZapfDingbatsITC",size:17)
        text.placeholder = "请输入手机号"
        text.clearButtonMode = .whileEditing
        return text
    }()
    lazy var code : UITextField = {
        let text = UITextField()
        text.backgroundColor = UIColor.white
        text.font = UIFont.init(name: "ZapfDingbatsITC",size:17)
        text.placeholder = "请输入验证码"
        return text
    }()
    lazy var btn_reset : UIButton = {
        let btn = UIButton()
        btn.setTitle("重置密码", for: .normal)
        btn.setTitleColor(UIColor.bg, for: .normal)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 17)
        btn.backgroundColor = UIColor.white
        btn.titleLabel?.textAlignment = .center
        btn.addTarget(self, action: #selector(self.Reset), for: .touchUpInside)
        return btn
    }()
    
    lazy var btn_back : UIButton = {
        let btn = UIButton()
        btn.setTitle("\n\u{e6f7}返回", for:.normal)
        btn.setTitleColor(UIColor.white, for: .normal)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 17)
        btn.backgroundColor = UIColor.bg
        btn.addTarget(self, action: #selector(self.Back), for: .touchUpInside)
        btn.titleLabel?.numberOfLines = 2
        return btn
    }()
    
    lazy var lab_title : UILabel = {
        let lab = UILabel()
        lab.backgroundColor = UIColor.bg
        lab.textColor = UIColor.white
        lab.text = "重置密码"
        lab.font = UIFont.init(name: "iconfont", size: 18)
        lab.textAlignment = .center
        return lab
    }()

}

extension ResetPasswordView{
    //获取验证码
    @objc func getCode(){
        if self.schoolId == ""{
            ZKProgressHUD.showMessage("请选择学校!")
            return
        }
        if account.text == ""{
            ZKProgressHUD.showMessage("请输入账号!")
            return
        }
        if phoneNumber.text == ""{
            ZKProgressHUD.showMessage("请输入手机号!")
            return
        }
        
        let dict = ["schoolId":self.schoolId,
                    "userName":account.text!,
                    "mobile":phoneNumber.text!,
                    "sourceType":3,] as [String : Any]
        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.MobileLogin_validateUserInfo, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    ZKProgressHUD.showMessage(json["msg"].stringValue)
                    self.userId = json["userId"].stringValue
                    self.MD5 = json["verificationCodeMd5"].stringValue
                    self.notificationId = json["notificationId"].stringValue
                }else{
                    ZKProgressHUD.showMessage(json["msg"].stringValue)
                }
                XLBallLoading.hide(in: self.view)
            }else{
                XLBallLoading.hide(in: self.view)
                ZKProgressHUD.showMessage("网络环境异常请稍后再试！");
            }
        }
    }
    //重置密码
    @objc func Reset(){
        if self.schoolId == ""{
            ZKProgressHUD.showMessage("请选择学校!")
            return
        }
        if account.text == ""{
            ZKProgressHUD.showMessage("请输入账号!")
            return
        }
        if phoneNumber.text == ""{
            ZKProgressHUD.showMessage("请输入手机号!")
            return
        }
        if code.text == ""{
            ZKProgressHUD.showMessage("请输入验证码!")
            return
        }
        let dict = ["userId":self.userId,
                    "fillCode":code.text!,
                    "notificationId":self.notificationId,
                    "verificationCodeMd5":self.MD5] as [String : Any]
        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.MobileLogin_resetPassword, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    ZKProgressHUD.showMessage(json["msg"].stringValue)
                    self.presentingViewController?.dismiss(animated: true, completion: nil);
                }else{
                    ZKProgressHUD.showMessage(json["msg"].stringValue)
                }
                XLBallLoading.hide(in: self.view)
            }else{
                XLBallLoading.hide(in: self.view)
                ZKProgressHUD.showMessage("网络环境异常请稍后再试！");
            }
        }
    }
}
