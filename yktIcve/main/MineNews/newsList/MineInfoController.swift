//
//  MineInfoController.swift
//  云课堂2
//
//  Created by cc on 2018/7/18.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire

extension MineInfoView{
//    //获取消息列表
//    func getNewsData(isRefresh:Bool){
//
//        if  Account.defaultAccount.role! == "1"{
//            self.userType = Account.defaultAccount.role!
//        }else{
//            self.userType = "2"
//        }
//
//        let dict = ["userId":Account.defaultAccount.id!,
//                    "userType":self.userType,
//                    "pageNum":self.page] as [String : Any]
//        XLBallLoading.show(in: self.view)
//        Alamofire.request(appAPI.News_getUserNewsList, method: .post, parameters: dict).responseJSON { response in
//            if let value = response.result.value {
//                let json = JSON(value)
//                if(json["code"] == 1){
//                    self.allNews(isRefresh: isRefresh, json: json["newList"])
//                    self.NewsListCount = json["newList"].count
//                    if(!isRefresh){
//                        //结束刷新
//                        self.tableView!.mj_header.endRefreshing();
//                    }
//                }else{
//                    ZKProgressHUD.showMessage(json["msg"].stringValue)
//                }
//                XLBallLoading.hide(in: self.view)
//            }else{
//                ZKProgressHUD.showMessage("网络开小差了")
//                XLBallLoading.hide(in: self.view)
//            }
//        }
//    }
//
//    func allNews(isRefresh:Bool,json:JSON){
//
//        for i in json {
//            let allInfo = NewsModel.init(data: i.1)
//            self.list.append(allInfo)
//        }
//        self.tableView.mj_footer.endRefreshing()
//        common.share.setTableFootView_noData(self.tableView, list: self.list as NSArray)
//        self.tableView.reloadData()
//    }
    //全部设为已读
   @objc func allIsRead(){
        let alertController = UIAlertController(title: "提示",
                                                message:"是否全部设为已读?", preferredStyle: .alert)
        let cancelAction = UIAlertAction(title: "取消", style: .cancel, handler: nil)
    
        let okAction = UIAlertAction(title: "确定", style: .destructive, handler: {
            action in
                let dict = ["userId":Account.defaultAccount.id!]
                XLBallLoading.show(in: self.view)
                Alamofire.request(appAPI.News_setAllNewsIsRead, method: .post, parameters: dict).responseJSON { response in
                    if let value = response.result.value {
                        let json = JSON(value)
                        if(json["code"] == -1){
                            self.myNews?.isRead = true
                            self.list = []
//                            self.getNewsData(isRefresh: false)
                        }else{
                            ZKProgressHUD.showMessage(json["msg"].stringValue)
                        }
                        XLBallLoading.hide(in: self.view)
                    }else{
                        ZKProgressHUD.showMessage("网络开小差了")
                        XLBallLoading.hide(in: self.view)
                    }
                }
        })
        alertController.addAction(cancelAction)
        alertController.addAction(okAction)
        self.present(alertController, animated: true, completion: nil)
    }
    func lookNews(Id:String,Newsmodel:NewsModel){
        let dict = ["Id":Id]
        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.News_setNewsIsReadById, method: .post, parameters: dict).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if(json["code"] == 1){
                 
                    self.myNews?.isRead = true
                    self.tableView.reloadData()
                }else{
                    ZKProgressHUD.showMessage(json["msg"].stringValue)
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showMessage("网络开小差了")
                XLBallLoading.hide(in: self.view)
            }
        }
    }
}
