//
//  MineInfoView.swift
//  云课堂2
//
//  Created by cc on 2018/6/20.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import RxSwift
import RxCocoa
import SCLAlertView

class MineInfoView: UIViewController {
    let disposeBag = DisposeBag()
    var myNews : myNewsModel?
    override func viewDidLoad() {
        super.viewDidLoad()
       
        self.title = "我的消息"
        self.setTableView()

        self.navigationItem.rightBarButtonItem = Item
        common.share.setdeleteButtonItem(item: Item)
        let item = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = item
       
        // Do any additional setup after loading the view.
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }




    let width = UIScreen.main.bounds.width
    let height = UIScreen.main.bounds.height

    var tableView:UITableView!

    var  Item :UIBarButtonItem = {
        let item =
        UIBarButtonItem.init(title: "\u{e74a}", style: UIBarButtonItemStyle.plain, target: self, action: nil);
        return item
    }()
    var page = 1
   
}

extension MineInfoView:UITableViewDelegate{

    func setTableView(){
        self.tableView = UITableView.init(frame:  CGRect(x:0, y:0, width:width, height:height - 60))

        self.tableView.register(MineInfoTableViewCell.self, forCellReuseIdentifier: "SwiftCell")

        self.view.addSubview(tableView)
        tableView.separatorInset = UIEdgeInsets.zero;
        tableView.layoutMargins = UIEdgeInsets.zero;
        //去除cell线
        self.tableView.separatorStyle = UITableViewCellSeparatorStyle.none
        self.tableView.backgroundColor = UIColor.colorWithHex(hexColor: 0xf9f9f9)
        //设置头部刷新控件
        self.tableView.mj_header = MJRefreshNormalHeader()
        //设置尾部刷新控件
        self.tableView.mj_footer = MJRefreshBackNormalFooter()
        //ipad
        if #available(iOS 9.0, *) {
            tableView.cellLayoutMarginsFollowReadableWidth = false
        } else {

        }

        let parmes = ["userId":Account.defaultAccount.id!,
                      "userType":Account.defaultAccount.role!,
                      "pageNum":self.page] as [String : Any]
        //初始化ViewModel
        let viewModel = newsListViewModel(
            input: (
                headerRefresh: self.tableView.mj_header.rx.refreshing.asDriver() ,
                footerRefresh: self.tableView.mj_footer.rx.refreshing.asDriver()),
            dependency: (
                disposeBag: self.disposeBag,
                networkService: NetworkService()),
                parmes: parmes )

        //单元格数据的绑定
        viewModel.tableData
            .bind(to: tableView.rx.items) { (tableView, row, element) in
                let indexPath = IndexPath(row: row, section: 0)
                let cell:MineInfoTableViewCell = tableView.dequeueReusableCell(withIdentifier: "SwiftCell", for: indexPath) as! MineInfoTableViewCell
                cell.setData(Info: element)
                return cell
            }
            .disposed(by: disposeBag)

        Observable.zip(tableView.rx.itemSelected, tableView.rx.modelSelected(NewsModel.self))
            .bind { [weak self] indexPath, item in
                let alert = SCLAlertView()
                alert.addButton("确定") {
                    viewModel.popupWindow(data: item)
                }
                alert.showTitle(item.HwOrExamTitle!, subTitle: item.Content!,timeout: nil, completeText: "取消", style: .info,colorStyle: 0xffae3e, colorTextButton:0xFFFFFF,circleIconImage: UIImage(named: "news.png"),animationStyle: .topToBottom)
                if(item.IsRead! != 1){
                      viewModel.setNewsIsReadById(M: item, _index:  indexPath.row)
                }

            }
            .disposed(by: disposeBag)


        //下拉刷新状态结束的绑定
        viewModel.endHeaderRefreshing
            .drive(self.tableView.mj_header.rx.endRefreshing)
            .disposed(by: disposeBag)

        //上拉刷新状态结束的绑定
        viewModel.endFooterRefreshing
            .drive(self.tableView.mj_footer.rx.endRefreshing)
            .disposed(by: disposeBag)

        //设置代理
        tableView.rx.setDelegate(self)
            .disposed(by: disposeBag)

        Item.rx.tap
            .bind { [weak self] in
                viewModel.allIsRead()
            }
            .disposed(by: disposeBag)

    }

    //设置单元格高度
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath)
        -> CGFloat {

            return 80
    }

}


