//
//  courseDiscussController.swift
//  云课堂2
//
//  Created by cc on 2018/6/4.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire

extension courseDiscussView:courseDiscussTableViewCellDelegate {
   
    
    
    func DeleteReply(_ btn:UIButton) {
        let alertController = UIAlertController(title: "提示！",
                                                message:"是否删除讨论回复", preferredStyle: .alert)
        let cancelAction = UIAlertAction(title: "取消", style: .cancel, handler: nil)
        let okAction = UIAlertAction(title: "确定", style: .destructive, handler: {
            action in
        
            let cell = self.superUITableViewCell(of: btn)
            if  let indexPath = self.tableView.indexPath(for: cell!){
                
                let json = self.discussInfo[btn.tag]
                let dict = ["replyId":json.id,
                            "userId":Account.defaultAccount.id!]
                XLBallLoading.show(in: self.view)
                Alamofire.request(MOOCAPI.coursestudy_deleteReply, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
                    if let value = response.result.value {
                        let json = JSON(value)
                        if json["code"] == 1{
                            ZKProgressHUD.showMessage(json["msg"].stringValue)
                            self.discussInfo.remove(at: indexPath.row)
                            self.htmls.remove(at: indexPath.row)
                            self.tableView.reloadData()
                            common.share.setTableFootView_noData(self.tableView, list: self.discussInfo as NSArray)
                        }else{
                            ZKProgressHUD.showMessage(json["msg"].stringValue)
                        }
                            XLBallLoading.hide(in: self.view)
                    }else{
                        ZKProgressHUD.showMessage("网络异常请稍后再试！")
                        XLBallLoading.hide(in: self.view)
                    }
                }
            }
        })
        alertController.addAction(cancelAction)
        alertController.addAction(okAction)
        
        self.present(alertController, animated: true, completion: nil)
    }
    
    //返回button所在的UITableViewCell
    func superUITableViewCell(of: UIButton) -> courseDiscussTableViewCell? {
        for view in sequence(first: of.superview, next: { $0?.superview }) {
            if let cell = view as? courseDiscussTableViewCell {
                return cell
            }
        }
        return nil
    }
    
    func getDiscuss(){
        let dict = ["page":page,
                    "topicId":self.topicId,
                    "userId":Account.defaultAccount.id!] as [String : Any]
        XLBallLoading.show(in: self.view)
        Alamofire.request(MOOCAPI.coursestudy_getDiscussReply, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    self.alldiscuss(json:json["list"])
                    self.discussListcount = json["list"].count
                    
                    self.thumbnail = json["topicThumbnail"].stringValue
                    self.dateCreated = json["topicInfo"]["topicDateCreated"].stringValue
                    self.creatortitle = json["topicInfo"]["title"].stringValue
                    self.displayName = json["topicInfo"]["topicDisplayName"].stringValue
                    self.content = json["topicInfo"]["topicContent"].stringValue
                    self.setHead()
                    
                    if  self.tableView.mj_header != nil{
                        //结束刷新
                        self.tableView.mj_header.endRefreshing();
                    }

                    if  self.tableView.mj_footer != nil{
                        if json["list"].count < json["pagination"]["pageSize"].intValue{
                             self.tableView.mj_footer.endRefreshingWithNoMoreData()
                        }else{
                             self.tableView.mj_footer.endRefreshing()
                        }
                    }

                }else{
                    ZKProgressHUD.showError("网络异常请稍后再试！");
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }
    
    func alldiscuss(json:JSON){
        
        for data in json {

            let alldiscussInfo = courseDiscusscell.init(data: data.1)
            self.htmls.append(HtmlRecord.init(content: alldiscussInfo.replyContent))
            self.discussInfo.append(alldiscussInfo)
        }
        common.share.setTableFootView_noData(self.tableView, list: self.discussInfo as NSArray)
        self.tableView.reloadData()
    }
    
    //添加讨论回复
    @objc func adddiscussDetails(){
        //回复框
        if common.share.isX(){
            ht = 60
        }
        self.sizeHight = 40
        self.view.endEditing(true)
        UIView.animate(withDuration: 0.1, animations: {
            var frame = self.footView.frame
            frame.origin.y = UIScreen.main.bounds.height  - 110 - CGFloat(self.ht)
            self.footView.frame = frame
        })
        UITextView.animate(withDuration: 0.1, animations: {
            var frame = self.textView.frame
            frame.size.height = 40
            self.textView.frame = frame
        })
        
        let dict = ["courseOpenId":self.courseOpenId,
                    "topicId":self.topicId,
                    "content":self.textView.text,
                    "replyId":self.replyId,
                    "userId":Account.defaultAccount.id!] as [String : Any]
        XLBallLoading.show(in: self.view)
        Alamofire.request(MOOCAPI.coursestudy_addTopicReply, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    self.textView.text = ""
                    ZKProgressHUD.showMessage(json["msg"].stringValue)
                    self.discussInfo.removeAll()
                    self.htmls.removeAll()
                    self.page = 1
                    self.getDiscuss()
                }else{
                    ZKProgressHUD.showMessage(json["msg"].stringValue)
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showMessage("网络异常请稍后再试！")
                XLBallLoading.hide(in: self.view)
            }
        }
        
    }
    //记录日志
    func savestudentlog(){
        let dict = ["courseOpenId":self.courseOpenId,
                    "cellId":self.cellId,
                    "auvideoLength":"0",
                    "videoTimeTotalLong":"0",
                    "userId":Account.defaultAccount.id!] as [String : Any]
        Alamofire.request(MOOCAPI.coursestudy_statStuProcessCellLogAndTimeLong, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    if json["isStudy"].boolValue{
                        //已学习
                        self.MOOCCourseKJModel?.cellRefresh = "cellRefresh"
                    }
                }else{
                    //ZKProgressHUD.showError(json["msg"].stringValue);
                }
            }else{
                ZKProgressHUD.showMessage("网络环境异常请稍后再试！")
            }
        }
    }
    //点赞
    @objc func praiseVotes(_ btn:UIButton){
        
        let discuss = self.discussInfo[btn.tag]
        let isVotes =  discuss.isVotes ? -1:1
        let dict = ["topicId":self.topicId,
                    "replyId":discuss.id,
                    "userId":Account.defaultAccount.id!,
                    "votestype":isVotes] as [String : Any]
        Alamofire.request(MOOCAPI.coursestudy_addAndCancelVotes, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    discuss.isVotes = !discuss.isVotes
                    discuss.votesCount += isVotes
                    self.tableView.reloadData()
                    ZKProgressHUD.showMessage(json["msg"].stringValue)
                }else{
                    ZKProgressHUD.showMessage(json["msg"].stringValue)
                }
            }else{
                ZKProgressHUD.showMessage("网络异常请稍后再试！")
            }
        }
    }
    

}

