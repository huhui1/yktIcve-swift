//
//  courseDetailsViewController.swift
//  云课堂2
//
//  Created by 尤增强 on 2018/6/5.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import Alamofire
import SwiftyJSON
extension courseDetailsView{
    func getData(){
        let dict = ["courseOpenId":self.courseOpenId,
                    "courseId":self.courseId,
                    "userId":Account.defaultAccount.id!]
      
        Alamofire.request(MOOCAPI.coursedetail_getMoocCourseDetail, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    common.share.setSDImg(str: json["courseCoverUrl"].stringValue, imgview: self.img_cover)
                    self.lab_courseName.text = json["courseName"].stringValue
                    self.vc1.request = json["certificateRequire"].stringValue
                    self.vc1.rule = json["gradingStandard"].stringValue
                    self.vc1.ready =  json["preparatoryKnowledge"].stringValue
                    //注意：这个是有属性监听 这里位置要在最后
                    self.vc1.reference = json["referenceMaterial"].stringValue
                    self.vc2.sentionTitles = json["courseOutline"].arrayValue
                    self.isMyMoocCourse = json["isMyMoocCourse"].boolValue
                    self.vc2.isMyMoocCourse = self.isMyMoocCourse
                    self.vc2.isEnd = self.isEnd
                    self.vc2.isTeacher = self.isTeacher
                    if(self.isMyMoocCourse == true){
                        if self.ising{
                            self.btn_join.setTitle("即将开始", for: .normal)
                            self.btn_join.isEnabled = false
                            self.btn_join.backgroundColor = UIColor.lightGray
                        }else{
                            self.btn_join.setTitle("继续学习", for: .normal)
                        }
                       
                    }else{
                        if self.isEnd{
                            self.btn_join.isHidden = true
                        }else if self.ising{
                            self.btn_join.setTitle("预报名", for: .normal)
                        }else{
                            self.btn_join.setTitle("加入学习", for: .normal)
                        }
                    }

                }else{
                    ZKProgressHUD.showMessage(json["msg"].stringValue);
                }

            }else{
                ZKProgressHUD.showMessage("网络异常请稍后再试！");

            }
        }
    }

    //加入学习
    @objc func joinCourse(){
        if (self.isMyMoocCourse == true){
            let vc = TeachCourseCenterView()
            vc.courseOpenId = self.courseOpenId
          
            self.navigationController?.pushViewController(vc, animated: true)
        }else{
            let dict = ["courseOpenId":self.courseOpenId,
                        "userId":Account.defaultAccount.id!] as [String : Any]
            XLBallLoading.show(in: self.view)
            Alamofire.request(MOOCAPI.coursedetail_addCourseStudy, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
                if let value = response.result.value {
                    let json = JSON(value)
                    if json["code"] == 1{
                        if self.btn_join.titleLabel?.text == "预报名"{
                            self.btn_join.setTitle("即将开始", for: .normal)
                            ZKProgressHUD.showMessage("预报名成功！")
                            self.btn_join.isEnabled = false
                        }else{
                            self.btn_join.setTitle("继续学习", for: .normal)
                            ZKProgressHUD.showMessage("加入学习成功！")
                            let vc = TeachCourseCenterView()
                            vc.courseOpenId = self.courseOpenId
                            self.navigationController?.pushViewController(vc, animated: true)
                        }
                    }else{
                        ZKProgressHUD.showError(json["mag"].stringValue);
                    }
                    XLBallLoading.hide(in: self.view)
                }else{
                    ZKProgressHUD.showError("网络异常请稍后再试！");
                    XLBallLoading.hide(in: self.view)
                }
            }
        }
    }

    @objc func backBtnClick() {
        self.navigationController?.popViewController(animated: true)
    }
}
