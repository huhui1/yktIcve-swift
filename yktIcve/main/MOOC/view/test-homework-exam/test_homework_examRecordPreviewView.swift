//
//  test_homework_examRecordPreviewView.swift
//  云课堂2
//  测验-作业-考试作答结果查看页面
//  Created by 尤增强 on 2018/6/15.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import WebKit
class test_homework_examRecordPreviewView: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()
        self.setWebUI()
        // Do any additional setup after loading the view.
    }


    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    func setWebUI() {
        let item = UIBarButtonItem(title: "\u{e6f7}返回", style: .plain, target: self, action: #selector(self.backBtnClick))
        self.navigationItem.leftBarButtonItem = item
        common.share.setBackButtonItem(item:item)
        
        let path = Bundle.main.path(forResource: "assignmenthandle-record", ofType: ".html",
                                    inDirectory: "HTML5/src/MOOC");
        let url = URL(fileURLWithPath:path!);
        //let request = URLRequest(url:url);

        //创建供js调用的接口
        let theConfiguration = WKWebViewConfiguration()
        theConfiguration.userContentController.add(self, name: "interOp")

        //将浏览器视图全屏(在内容区域全屏,不占用顶端时间条)
        let frame = CGRect(x:0, y:0, width:UIScreen.main.bounds.width,
                           height:UIScreen.main.bounds.height-60 + CGFloat(HX))
        theWebView = WKWebView(frame:frame, configuration: theConfiguration)
        theWebView.scrollView.bounces = false;
        //加载页面
        if #available(iOS 9.0, *) {
            
            theWebView.loadFileURL(url, allowingReadAccessTo: url)
        } else {
            
            do{
                
                let url1 = try common.share.fileURLForBuggyWKWebView8(fileURL:url as NSURL)
                let request = URLRequest(url:url1 as URL);
                theWebView.load(request)
                
            }catch{}
        }
       // theWebView.load(request)
        theWebView.navigationDelegate = self
        self.view.addSubview(theWebView);
    }

    @objc func backBtnClick(){
         theWebView.configuration.userContentController.removeScriptMessageHandler(forName: "interOp")
         self.navigationController?.popViewController(animated: true)
    }
    

    lazy var theWebView :WKWebView = {
        let wk = WKWebView()
        return wk
    }()

    let HX = common.share.returnSafeAreaLineHeight()

    lazy  var courseOpenId:String = {
        return ""
    }()
    lazy  var workExamId:String = {
        return ""
    }()

    lazy  var workExamType:Int = {
        return 1
    }()
    lazy  var studentWorkId:String = {
        return ""
    }()

}

extension  test_homework_examRecordPreviewView:WKScriptMessageHandler,WKNavigationDelegate{

    func userContentController(_ userContentController: WKUserContentController, didReceive message: WKScriptMessage) {
        let sentData = message.body as! Dictionary<String,String>
        if(sentData["method"] == "showMsg"){
            ZKProgressHUD.showMessage(sentData["msg"]!)
        }else if(sentData["method"] == "previewImg"){
            let vc = PicturePreviewView()
            vc.imgurl = sentData["url"]!
            self.navigationController?.pushViewController(vc, animated: true)
        }else if(sentData["method"] == "getDocByUrl"){
           self.getDocByUrl(url: sentData["url"]!)
        }
    }


    func webView(_ webView: WKWebView, didFinish navigation: WKNavigation!) {
        self.getHomeWorkAndTestCorrect()
    }

    func webView(_ webView: WKWebView, decidePolicyFor navigationAction: WKNavigationAction, decisionHandler: @escaping (WKNavigationActionPolicy) -> Void) {
        let url = navigationAction.request.mainDocumentURL
        if((url?.scheme?.contains("http"))! || (url?.scheme?.contains("https"))!){
            //
            print("拒绝")
            let vc = linkjumpView()
            vc.linkStr = (navigationAction.request.mainDocumentURL?.absoluteString)!
        
            self.navigationController?.pushViewController(vc, animated: true)
            //            UIApplication.shared.openURL(url! as URL)
            decisionHandler(.cancel);
        }else{
            decisionHandler(.allow);
        }

    }

}
