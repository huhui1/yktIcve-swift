//
//  test_homework_examRecordPreviewViewController.swift
//  云课堂2
//
//  Created by 尤增强 on 2018/6/15.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import Alamofire
import SwiftyJSON

extension test_homework_examRecordPreviewView{
    
    //获取作业/测验题目正确率及答题详情
    //    courseOpenId 开课Id
    //    workExamId 作业、测验 考试Id
    //    studentWorkId 学生作业Id
    //    workExamType 类型 0-作业 1-测验 2-考试
    //    userId 用户Id
    func getHomeWorkAndTestCorrect(){
        
        let dict = ["courseOpenId":self.courseOpenId,
                    "workExamId":self.workExamId,
                    "studentWorkId":self.studentWorkId,
                    "workExamType":self.workExamType,
                    "userId":Account.defaultAccount.id!] as [String : Any]
        XLBallLoading.show(in: self.view)
        Alamofire.request(MOOCAPI.workexam_getHomeWorkAndTestCorrect, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let r = JSON(value)
                if r["code"] == 1{
                    self.theWebView.evaluateJavaScript("assignmenthandleRecord.get(\(r))",
                        completionHandler: nil)
                }else{
                    ZKProgressHUD.showMessage(r["msg"].string)
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showMessage("网络异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }
    
    //文件跳转
    func getDocByUrl(url:String){
        let dict = ["url":url]
        
        Alamofire.request(MOOCAPI.workexam_getDocByUrl, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let r = JSON(value)
                if r["code"] == 1{
                    self.previewVC(r: r)
                }else{
                    ZKProgressHUD.showMessage(r["msg"].string)
                }
                
            }else{
                ZKProgressHUD.showMessage("网络异常请稍后再试！");
                
            }
        }
    }
    
    
    //文件跳转
    fileprivate func previewVC(r:JSON){
        var images = [String]()
        let data = JSON.init(parseJSON: r["docUrl"].stringValue)
        switch data["category"] {
        case "img":
            print("===")
            let vc = PicturePreviewView()
            vc.imgurl = data["urls"]["preview_oss_ori"].stringValue
            if(data["urls"]["preview_oss_ori"].stringValue.isEmpty){
                vc.imgurl = data["urls"]["preview"].stringValue
            }
            self.navigationController?.pushViewController(vc, animated: true)
        case "office","ppt":
            if(data["urls"]["isH5"].boolValue){
                let vc = PPT_Animation_PreviewView()
                vc.isTeaching = false
                vc.isKJ = false
                vc.linkStr = data["urls"]["h5PreviewUrl"].stringValue
                self.navigationController?.pushViewController(vc, animated: true)
            }else{
                var page_count = data["args"]["page_count"].intValue
                if(page_count == 0){
                    page_count = 1
                }
                
                var prefix = data["urls"]["preview_oss_gen"].stringValue
                
                if(prefix.isEmpty){
                    prefix = data["urls"]["preview"].stringValue
                }
                for i in 1...page_count{
                    let imgUrl = "\(prefix)/\(i).png"
                    images.append(imgUrl)
                }
                let vc = ImagePreviewVC()
                vc.images = images
                vc.docId = prefix
                self.navigationController?.pushViewController(vc, animated: true)
            }
            print("office")
        case "video":
            var prefix = data["urls"]["preview_oss_gen"].stringValue
            if(prefix.isEmpty){
                prefix = data["urls"]["preview"].stringValue
            }
            let vc = generalVideoPlayView()
            for (key, value) in data["args"]{
                
                if value.boolValue{
                    let videoUrl = "\(prefix)/\(key).mp4"
                    vc.videourls.append(videoUrl)
                }
            }
            self.navigationController?.pushViewController(vc, animated: true)
        case "audio","mp3":
            let vc = audioViewController()
            if !data["urls"]["preview_oss_gen"].stringValue.isEmpty{
                vc.audiourl = data["urls"]["preview_oss_gen"].stringValue
            }else {
                vc.audiourl = data["urls"]["preview"].stringValue
            }
            vc.isNet = true
            self.navigationController?.pushViewController(vc, animated: true)
        default:
           ZKProgressHUD.showMessage("该类型的文件前往网页端查看")
        }
    }
}

