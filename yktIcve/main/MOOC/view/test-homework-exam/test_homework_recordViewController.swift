//
//  test_homework_recordViewController.swift
//  云课堂2
//
//  Created by 尤增强 on 2018/6/11.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire

extension test_homework_recordView{



    fileprivate func  setHeadviewUIData(data:JSON){
        self.label_title.text = data["workExam"]["title"].stringValue
        self.lab_end.text = data["homeStartEndTime"]["EndTime"].stringValue
        self.lab_start.text = data["homeStartEndTime"]["StartTime"].stringValue
     
        self.lab_remark.text = data["workExam"]["remark"].stringValue.isEmpty ?"无":data["workExam"]["remark"].stringValue
        if data["workExam"]["paperType"].intValue == 2{
            self.lab_answerNum.isHidden = true
            self.lab_answer.isHidden = true
            self.lab_answerHt.constant = 0
        }else{
            self.lab_answerNum.text = data["workExam"]["stuWorkCount"].stringValue + "/" + (data["workExam"]["replyCount"].stringValue == "-1" ? "不限":data["workExam"]["replyCount"].stringValue)
        }
        
        if isMineClass{
            self.btn_done.setTitle("查看", for: .normal)
        }else{
            if(!data["isButton"].boolValue){
                self.btn_done.setTitle("查看", for: .normal)
            }else if(!data["workExam"]["isLook"].boolValue || data["isReturn"].boolValue){
                self.btn_done.setTitle("作答", for: .normal)
            }else{
                self.btn_done.isHidden = true
            }
        }
    }


    //获取作答纪录
    func getTest_homeworkRecordList(){


        let dict = ["courseOpenId":self.courseOpenId,
                    "workExamId":self.workExamId,
                    "workExamType":self.workExamType,
                    "userId":Account.defaultAccount.id!,
                    "page":self.page] as [String : Any]
        XLBallLoading.show(in: self.myTableView)
        Alamofire.request(MOOCAPI.workexam_detail, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    if(self.page == 1){
                         self.recordlList = json["list"].arrayValue
                    }else{
                        self.recordlList += json["list"].arrayValue
                    }

                    self.setMOOCEndRefreshing(json:json)
                    self.setHeadviewUIData(data: json)
                    self.myTableView.reloadData()
                    common.share.setTableFootView_noData(self.myTableView, list: self.recordlList as NSArray )
                }else{
                    ZKProgressHUD.showMessage(json["msg"].stringValue)
                }
                XLBallLoading.hide(in: self.myTableView)
            }else{
                ZKProgressHUD.showError("网络异常请稍后再试！");
                XLBallLoading.hide(in: self.myTableView)
            }
        }
    }


    func  setMOOCEndRefreshing (json: JSON){



        if(self.page > 1){
            self.myTableView.mj_footer.endRefreshing()
            return
        }

        let pageCount = Int(ceil(json["pagination"]["totalCount"].double! / json["pagination"]["pageSize"].double!))

        self.page = json["pagination"]["pageIndex"].intValue
        if(json["pagination"]["pageIndex"].intValue < pageCount){
            //上拉加载
            self.myTableView.mj_footer = MJRefreshBackNormalFooter(refreshingBlock: {
                self.page += 1
                self.getTest_homeworkRecordList()
            })
        }

    }

    //初始化学生作答记录
    func addStudentWorkExamRecord(){

        let dict = ["courseOpenId":self.courseOpenId,
                    "userId": Account.defaultAccount.id!,
                    "workExamId":self.workExamId,
                    "workExamType":self.workExamType] as [String : Any]
        XLBallLoading.show(in: self.view)
        Alamofire.request(MOOCAPI.workexam_addStudentWorkExamRecord, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{

                    self.pushVC(data: json)
                }else{
                    ZKProgressHUD.showError("网络异常请稍后再试！");
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }

   

    //跳转到作答页面

  fileprivate  func  pushVC(data:JSON){
//        if isMineClass{
//            let vc = test_homework_examRecordPreviewView()
//            vc.courseOpenId = self.courseOpenId
//            vc.workExamId = self.workExamId
//            vc.workExamType = self.workExamType
//            self.navigationController?.pushViewController(vc, animated: true)
//        }else{
            let vc = test_homework_examHandleView()
            vc.courseOpenId = self.courseOpenId
            vc.workExamId = self.workExamId
            vc.MOOCCourseKJModel = self.MOOCCourseKJModel
            vc.workExamType = self.workExamType
            vc.uniqueId = data["uniqueId"].stringValue
            vc.paperStuIdString = data["paperStuIdString"].stringValue
            self.navigationController?.pushViewController(vc, animated: true)
        }

//    }
}
