//
//  MycourseView.swift
//  云课堂2
//  
//  Created by cc on 2018/5/30.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import Alamofire
import SwiftyJSON

class MycourseView: UIViewController {
    //隐藏状态栏
    override var prefersStatusBarHidden: Bool {
        return true
    }
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
//        if !common.share.isX(){
             self.navigationController?.setNavigationBarHidden(true, animated: false)
//        }


    }


    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.colorWithHex(hexColor: 0xf1f1f1)
        

        self.setUI()
        self.setSlideMenu()
        self.getData()
        let NotifyEventListener = NSNotification.Name("notice")
        NotificationCenter.default.addObserver(self, selector: #selector(self.noticeDetails), name: NotifyEventListener, object: nil)
        
        let NotifyEventListenercourseKJ = NSNotification.Name("courseKJ")
        NotificationCenter.default.addObserver(self, selector: #selector(self.courseKJ), name: NotifyEventListenercourseKJ, object: nil)
        
        // Do any additional setup after loading the view.
    }
    
    func setUI(){
        
        self.view.addSubview(self.img_cover)
        self.img_cover.isUserInteractionEnabled = true;
        
        let bg_view:UIView = UIView()
        bg_view.frame = CGRect(x:0,y:0,width:UIScreen.main.bounds.width,height:180)
        bg_view.backgroundColor = UIColor.init(red: 0, green: 0, blue: 0, alpha: 0.15)
        self.img_cover.addSubview(bg_view)
        bg_view.addSubview(self.lab_courseName)
        bg_view.addSubview(self.btn_back)
        self.btn_back.snp.makeConstraints { (make) in
            make.width.equalTo(40)
            make.height.equalTo(40)
            make.top.equalTo(20)
            make.left.equalTo(10)
        }
        self.btn_back.layer.masksToBounds = true
        self.btn_back.layer.cornerRadius = 20
        self.btn_back.addTarget(self, action: #selector(self.backBtnClick), for: .touchUpInside)
        self.img_cover.snp.makeConstraints { (make) in
            make.width.equalTo(UIScreen.main.bounds.width)
            make.height.equalTo(180)
            make.top.equalTo(0)
            make.left.equalTo(0)
        }
        self.lab_courseName.snp.makeConstraints { (make) in
            make.width.equalTo(UIScreen.main.bounds.width)
            make.height.equalTo(40)
            make.bottom.equalTo(self.img_cover.snp.bottom)
            make.left.equalTo(10)
        }
        
    }
    
    func setSlideMenu(){
        let titles = ["公告","课件"]
        var arr:Array<UIViewController> = [];
        let vc1 = courseNoticeView()
        vc1.courseOpenId = self.courseOpenId
        vc2.courseOpenId = self.courseOpenId
      
        arr.append(vc1)
        arr.append(vc2)
        
        slideMenu = SlideMenu(frame: CGRect(x:0,y:185,width:view.frame.width,height:40), titles:titles, childControllers:arr)
        slideMenu?.bodyFrame = CGRect.init(x: 0, y: 225, width: view.frame.width, height: view.frame.height - 225)
        slideMenu?.selectedColor = UIColor(red: 6/255, green: 163/255, blue: 121/255, alpha: 1);
        
        slideMenu?.isFixed = true;
        slideMenu?.indicatorStyle = .followText;
        slideMenu?.titleStyle = .transfrom;
        slideMenu?.line.isHidden = false;
        slideMenu?.scrollToIndex(1)
        view.addSubview(slideMenu!)
    }
    //获取数据
    func getData(){
        let dict = ["courseOpenId":self.courseOpenId,
                    "userId":Account.defaultAccount.id!] as [String : Any]
        XLBallLoading.show(in: self.view)
        Alamofire.request(MOOCAPI.coursedetail_getProcessList, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    common.share.setSDImg(str: json["courseCoverUrl"].stringValue, imgview: self.img_cover)
                    self.moduleList = json["proces"]["moduleList"].arrayValue
                    self.lab_courseName.text = json["courseName"].stringValue
                    self.vc2.sentionTitles = self.moduleList 
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
            self.navigationController?.setNavigationBarHidden(false, animated:false)
  
        if(!self.isPushed){
            NotificationCenter.default.removeObserver(self)
        }
        self.isPushed = false
    }
    

    func xsetnavigationBar(){
        if common.share.isX(){
            self.navigationController?.navigationBar.setBackgroundImage(self.img_cover.image, for: UIBarPosition.any, barMetrics: UIBarMetrics.default);
        }
    }
    //返回
    @objc func backBtnClick() {
        self.navigationController?.popViewController(animated: true)
    }
    //监听跳转课件
    @objc func courseKJ(course:NSNotification){
        let dict = course.object as! Dictionary<String ,String>
        let cellType = dict["cellType"]!
        switch cellType {
        case "ppt":
            let vc = ImagePreviewVC()
            vc.docId = dict["Id"]!
            vc.courseOpenId = dict["courseOpenId"]!

            self.isPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
            
//            let vc = PPT_Animation_PreviewView()
//            vc.cellId = JSON(dict as Any)["cellId"].stringValue
//            vc.courseOpenId = JSON(dict as Any)["courseOpenId"].stringValue
//            vc.userId = self.userId
//            self.isPushed = true
//            self.navigationController?.pushViewController(vc, animated: true)
        case "视频":
            let vc = videoPlayView()
            vc.docId = dict["Id"]!
            vc.courseOpenId = dict["courseOpenId"]!
            self.isPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        case "文档":
            let vc = ImagePreviewVC()
            vc.docId = dict["Id"]!
            vc.courseOpenId = dict["courseOpenId"]!
            vc.isFromKj = true
            self.isPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        case "图片":
            let vc = ImagePreviewVC()
            vc.docId = dict["Id"]!
            vc.courseOpenId = dict["courseOpenId"]!
            vc.isFromKj = true
            self.isPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        case "讨论":
            let vc = courseDiscussView()
            vc.cellId = dict["Id"]!
            vc.topicId = dict["resId"]!
            vc.courseOpenId = dict["courseOpenId"]!
          
            self.isPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        case "测验":
            let vc = test_homework_recordView()

            vc.workExamId = dict["resId"]!
            vc.courseOpenId = dict["courseOpenId"]!
            vc.workExamType = 1
            self.isPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        case "作业":
            let vc = test_homework_recordView()

            vc.workExamId = dict["resId"]!
            vc.courseOpenId = dict["courseOpenId"]!
            vc.workExamType = 0
            self.isPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        case "考试":
            let vc = test_homework_recordView()
            vc.workExamId = dict["resId"]!
            vc.courseOpenId = dict["courseOpenId"]!
            vc.workExamType = 2
            self.isPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
//        case "图文":
//            print("图文")
        default:
            ZKProgressHUD.showMessage("请前往网页下载查看")
        }

    }
    //监听跳转公告详情
    @objc func noticeDetails(notice:NSNotification){
        let dict = notice.object as? Dictionary<String ,String>
        let vc = noticeDetailsView()
        vc.Id = dict!["noticeId"]!
        self.isPushed = true
        self.navigationController?.pushViewController(vc, animated: true)
    }
    lazy var Id : String = {return ""}()
    lazy var courseOpenId : String = {return ""}()

    let vc2 = MOOCCourseWareView()
    var moduleList = [JSON]()
    
     var isPushed = false
    var slideMenu:SlideMenu?
    lazy var img_cover : UIImageView = {
        let img = UIImageView()
        img.backgroundColor = UIColor.white
        return img
    }()
    lazy var btn_back : UIButton = {
        let btn = UIButton()
        btn.setTitle("\u{e6f7}", for:.normal)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 13)
        btn.setTitleColor(UIColor.white, for:.normal)
        btn.backgroundColor = UIColor.init(red: 0, green: 0, blue: 0, alpha: 0.2)
        return btn
    }()
    lazy var lab_courseName : UILabel = {
        let lab = UILabel()
        lab.font = UIFont.italicSystemFont(ofSize: 18)
        lab.textColor = UIColor.white
        lab.numberOfLines = 2
        return lab
    }()
}
