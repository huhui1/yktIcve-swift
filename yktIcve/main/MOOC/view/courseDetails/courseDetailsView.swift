//
//  courseDetailsViewController.swift
//  云课堂2
//
//  Created by cc on 2018/5/29.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SnapKit
import SwiftyJSON

class courseDetailsView: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.colorWithHex(hexColor: 0xf1f1f1)


        self.setUI()
        self.setSlideMenu()
        self.getData()

        // Do any additional setup after loading the view.
    }

    override var prefersStatusBarHidden: Bool {
        return true
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        self.navigationController?.setNavigationBarHidden(true, animated: false)
        
    }
    override func viewWillDisappear(_ animated: Bool){
        super.viewWillDisappear(animated)
        self.navigationController?.setNavigationBarHidden(false, animated:false)
    }


    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    func setUI(){
        self.view.addSubview(self.img_cover)
        self.img_cover.isUserInteractionEnabled = true;
        let bg_view:UIView = UIView()
        bg_view.frame = CGRect(x:0,y:0,width:UIScreen.main.bounds.width,height:180)
        bg_view.backgroundColor = UIColor.init(red: 0, green: 0, blue: 0, alpha: 0.15)
        self.img_cover.addSubview(bg_view)
        bg_view.addSubview(self.btn_join)
        bg_view.addSubview(self.btn_back)
        bg_view.addSubview(self.lab_courseName)
        self.btn_back.snp.makeConstraints { (make) in
            make.width.equalTo(40)
            make.height.equalTo(40)
            make.top.equalTo(20)
            make.left.equalTo(10)
        }
        self.btn_back.layer.masksToBounds = true
        self.btn_back.layer.cornerRadius = 20
        self.btn_back.addTarget(self, action: #selector(self.backBtnClick), for: .touchUpInside)
        self.img_cover.snp.makeConstraints { (make) in
            make.width.equalTo(UIScreen.main.bounds.width)
            make.height.equalTo(180)
            make.top.equalTo(0)
            make.left.equalTo(0)
        }
        self.lab_courseName.snp.makeConstraints { (make) in
            make.width.equalTo(UIScreen.main.bounds.width - 20)
            make.height.equalTo(40)
            make.bottom.equalTo(self.img_cover.snp.bottom)
            make.left.equalTo(10)
        }
        self.btn_join.snp.makeConstraints { (make) in
            make.width.equalTo(80)
            make.height.equalTo(30)
            make.bottom.equalTo(-42)
            make.right.equalTo(-20)
        }
       
        self.btn_join.addTarget(self, action: #selector(self.joinCourse), for: .touchUpInside)
        
    }
    
    func setSlideMenu(){
        let titles = ["课程介绍","课程大纲"]
        var arr:Array<UIViewController> = [];

        arr.append(vc1)
        arr.append(vc2)
        
        slideMenu = SlideMenu(frame: CGRect(x:0,y:185,width:view.frame.width,height:40), titles:titles, childControllers:arr)
        slideMenu?.bodyFrame = CGRect.init(x: 0, y: 225, width: view.frame.width, height: view.frame.height - 225)
        slideMenu?.selectedColor = UIColor(red: 6/255, green: 163/255, blue: 121/255, alpha: 1);
        
        slideMenu?.isFixed = true;
        slideMenu?.indicatorStyle = .followText;
        slideMenu?.titleStyle = .transfrom;
        slideMenu?.line.isHidden = false;
        slideMenu?.scrollToIndex(0)
        view.addSubview(slideMenu!)
    }
    
    

    
    var isEnd = false
    var slideMenu:SlideMenu?
    lazy var img_cover : UIImageView = {
        let img = UIImageView()
        img.backgroundColor = UIColor.white
        return img
    }()
    lazy var btn_join : UIButton = {
        let btn = UIButton()
        btn.backgroundColor = UIColor.init(red: 0, green: 0, blue: 0, alpha: 0.2)
        btn.setTitleColor(UIColor.white, for: .normal)
        
        btn.titleLabel?.font = UIFont.italicSystemFont(ofSize: 15)
        return btn
    }()
    lazy var btn_back : UIButton = {
        let btn = UIButton()
        btn.setTitle("\u{e6f7}", for:.normal)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 13)
        btn.setTitleColor(UIColor.white, for:.normal)
        btn.backgroundColor = UIColor.init(red: 0, green: 0, blue: 0, alpha: 0.2)
        return btn
    }()
    lazy var lab_courseName : UILabel = {
        let lab = UILabel()
        lab.font = UIFont.italicSystemFont(ofSize: 18)
        lab.textColor = UIColor.white
        lab.numberOfLines = 2
        return lab
    }()

    let vc1 = courseSummaryViewController()
    let vc2 = MOOCOutlineView()
    var isTeacher:Bool = false
    lazy var request : String = {return ""}()
    lazy var rule : String = {return ""}()
    lazy var ready : String = {return ""}()
    lazy var reference : String = {return ""}()
    lazy var courseOpenId : String = {return ""}()
    lazy var courseId : String = {return ""}()
    lazy var isMyMoocCourse : Bool = {return true}()
    lazy var ising : Bool = false
}


