//
//  MOOCCourseWareView.swift
//  云课堂2
// 课件
//  Created by 尤增强 on 2018/5/29.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire
class MOOCCourseWareView: UIViewController,UITableViewDataSource,UITableViewDelegate {

    @IBOutlet weak var tableview: UITableView!
    var resId = "";
//    var cellIndexId = ""
//    var topicId = ""
    var cellIndexPathRow:Int = -999
    var cellIndexPathSection:Int = -999
    lazy var courseOpenId = "";
    var MOOCCourseKJModel: MOOCCourseKJModel!
    var cellTitles = [courseCell]()
    let cellArray : NSMutableArray = NSMutableArray()
    var isMineClass = false

    //带属性监视器的普通属性
    var moduleList = [courseModule]()
    var isteacher :Bool = false
    var sentionTitles = [JSON](){
        willSet
        {

        }
        didSet
        {
            self.makeData()
        }
    }

    init() {
        super.init(nibName: "MOOCCourseWareView", bundle: nil)
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    deinit {
        MOOCCourseKJModel.removeObserver(self, forKeyPath: "cellRefresh")
    }
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view, typically from a nib.
        //        makeData()
        //对变量进行监听
        MOOCCourseKJModel.addObserver(self, forKeyPath: "cellRefresh", options: [.old, .new], context: nil)
        setUpTableview()
        self.automaticallyAdjustsScrollViewInsets = false

    }

    func setUpTableview(){
        tableview.delegate = self
        tableview.dataSource = self
        tableview.tableFooterView = UIView.init()
        tableview.separatorStyle = UITableViewCellSeparatorStyle.singleLine
        tableview.estimatedRowHeight = 200 //预设cell高度
        tableview.rowHeight = UITableViewAutomaticDimension
    }
    //MARK:-UITableViewDelegate
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        //  获取数据判断是topic 还是cell
        let courseModule = self.moduleList[indexPath.section]
        let t = self.getshowList(model:courseModule, _section: indexPath.row)
        //如果是topic 判断是否有cell 没有请求接口
        if(t.level == 2){
            t.isUnfold = !t.isUnfold
            if(t.cell.count < 1){
                self.getCellList(indexPath: indexPath, topic: t)
            }else{
                self.tableview.reloadSections(IndexSet.init(integer: indexPath.section), with: .automatic)
            }
        }else{
           //记录下当前点击的cell是那个分区,那一行
           self.cellIndexPathSection = indexPath.section
           self.cellIndexPathRow = indexPath.row
           
           self.MOOCCourseKJModel.cellType.isMineClass = self.isMineClass
           self.MOOCCourseKJModel.cellType.isTeacher = self.isteacher
           self.MOOCCourseKJModel.cellType.cellId = t.childNodeListId
           self.MOOCCourseKJModel.cellType.courseOpenId = self.courseOpenId
           self.MOOCCourseKJModel.cellType.resId = t.childNodeListresId
           self.MOOCCourseKJModel.cellType.isStudyFinish = t.isStudyFinish ? true : false
           self.MOOCCourseKJModel.cellType.categoryName = t.categoryName
          
//            let course : NSDictionary = ["cellType":t.categoryName,"Id":t.childNodeListId,"courseOpenId":self.courseOpenId,"resId":t.childNodeListresId,"isStudyFinish":t.isStudyFinish ? "true" : "false"]
//            NotificationCenter.default.post(name:NSNotification.Name("courseKJ"), object: course);
        }


    }
    //MARK:-UITableViewDataSource
    func numberOfSections(in tableView: UITableView) -> Int {
        return moduleList.count
    }
    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        return 52
    }
    func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {
        let view : HelpSectionHeader = HelpSectionHeader()
        let t = self.moduleList[section]
        view.spreadBtn.isSelected = self.moduleList[section].isUnfold
        view.spreadBlock = {  () -> Void in
            if(t.moduleType == 2){
//                let course : NSDictionary = ["cellType":"考试","courseOpenId":self.courseOpenId,"resId":t.resId]
//                NotificationCenter.default.post(name:NSNotification.Name("courseKJ"), object: course);
                self.MOOCCourseKJModel.cellType.isTeacher = self.isteacher
                self.MOOCCourseKJModel.cellType.cellId = t.resId
                self.MOOCCourseKJModel.cellType.courseOpenId = self.courseOpenId
                self.MOOCCourseKJModel.cellType.resId = t.resId
                self.MOOCCourseKJModel.cellType.isStudyFinish = false
                self.MOOCCourseKJModel.cellType.categoryName = "考试"
            }else{
                self.moduleList[section].isUnfold = !self.moduleList[section].isUnfold
                self.getTopicList(moduleId: self.moduleList[section].moduleId,section:section)
            }

        }
        view.titleLabel.text = self.moduleList[section].title
        return view
    }
    func tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {
        return 1
    }
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {

        return self.getCellNum(model:self.moduleList[section], _section: section)

    }
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 50
    }

    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {

        let courseModule = self.moduleList[indexPath.section]
        let courseTopicModule = self.getshowList(model:courseModule, _section: indexPath.row)

        let identifier = "cell\(courseTopicModule.id)"
        if ( courseTopicModule.level == 2){
            self.tableview.register(UINib.init(nibName: "courseWareViewTopic", bundle: Bundle.main), forCellReuseIdentifier: identifier)
            let cell : courseWareViewTopic = tableview.dequeueReusableCell(withIdentifier: identifier, for: indexPath) as! courseWareViewTopic
             cell.setModel(courseTopicModule: courseTopicModule)
            return cell
        }else{
            self.tableview.register(UINib.init(nibName: "courseWareViewCell", bundle: Bundle.main), forCellReuseIdentifier: identifier)
            let cell : courseWareViewCell = tableview.dequeueReusableCell(withIdentifier: identifier, for: indexPath) as! courseWareViewCell
            cell.setModel(model: courseTopicModule)
            return cell
        }
    }
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

}
extension MOOCCourseWareView {
    override func observeValue(forKeyPath keyPath: String?, of object: Any?, change: [NSKeyValueChangeKey : Any]?, context: UnsafeMutableRawPointer?) {
        //let newValue = change?[NSKeyValueChangeKey.newKey]
        if keyPath == "cellRefresh" {
            let courseModule = self.moduleList[self.cellIndexPathSection]
            let t = self.getshowList(model:courseModule, _section: self.cellIndexPathRow)
            //刷新当前cell
                t.isStudyFinish = true
                let indexPath = IndexPath.init(row: self.cellIndexPathRow, section: self.cellIndexPathSection)
                self.tableview.reloadRows(at: [indexPath], with: .automatic)
            //}
            print("=====")
        }else{
            print("暂无")
        }
    }

}
