//
//  courseDiscussTableViewCell.swift
//  云课堂2
//
//  Created by cc on 2018/6/4.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SwiftyJSON

@objc protocol courseDiscussTableViewCellDelegate:NSObjectProtocol  {
    
    func DeleteReply(_ btn:UIButton) -> ()
    func praiseVotes(_ btn:UIButton) -> ()
}

class courseDiscussTableViewCell: UITableViewCell {

    override func awakeFromNib() {
        super.awakeFromNib()
        // Initialization code
    }

    var delegate :courseDiscussTableViewCellDelegate!
    override func setSelected(_ selected: Bool, animated: Bool) {
        super.setSelected(selected, animated: animated)

        // Configure the view for the selected state
    }
    required init?(coder aDecoder:NSCoder) {
        super.init(coder: aDecoder)
    }
    override init(style:UITableViewCellStyle, reuseIdentifier:String?) {
        
        super.init(style: style, reuseIdentifier: reuseIdentifier);
        
        self.setUI();
    }
    func setUI(){
        
        
        self.addSubview(self.image_View)
        self.addSubview(self.lab_name)
        self.addSubview(self.lab_time)
        self.addSubview(self.lab_content)
        self.addSubview(self.lab_replyCount)
        self.addSubview(self.btn_praise)
        self.addSubview(self.btn_delete)
        self.lab_content.isUserInteractionEnabled = true
        self.image_View.snp.makeConstraints { (make) in
            make.width.height.equalTo(40)
            make.top.equalTo(10)
            make.left.equalTo(10)
        }
        self.image_View.layer.masksToBounds = true
        self.image_View.layer.cornerRadius = 20
        self.lab_name.snp.makeConstraints { (make) in
            make.width.equalTo(width - 80)
            make.height.equalTo(20)
            make.top.equalTo(10)
            make.left.equalTo(self.image_View.snp.right).offset(10)
        }
        self.lab_time.snp.makeConstraints { (make) in
            make.width.equalTo(width - 80)
            make.height.equalTo(20)
            make.top.equalTo(self.lab_name.snp.bottom).offset(5)
            make.left.equalTo(self.image_View.snp.right).offset(10)
        }
        self.lab_content.snp.makeConstraints { (make) in
            make.width.equalTo(width - 30)
            make.height.equalTo(42)
            make.top.equalTo(self.lab_time.snp.bottom)
            make.left.equalTo(20)
        }
        self.btn_praise.snp.makeConstraints { (make) in
            make.width.equalTo(50)
            make.height.equalTo(15)
            make.top.equalTo(self.lab_content.snp.bottom)
            make.right.equalTo(-10)
        }
        self.lab_replyCount.snp.makeConstraints { (make) in
            make.width.equalTo(50)
            make.height.equalTo(15)
            make.top.equalTo(self.lab_content.snp.bottom)
            make.right.equalTo(self.btn_praise.snp.left).offset(5)
        }
        
        self.btn_delete.snp.makeConstraints { (make) in
            make.width.equalTo(50)
            make.height.equalTo(15)
            make.right.equalTo(0)
            make.centerY.equalTo(self.lab_name.snp.centerY)
        }
        self.btn_delete.addTarget(self, action: #selector(self.deleteReply(_:)), for: .touchUpInside)
        self.btn_praise.addTarget(self, action: #selector(self.approveVotes(_:)), for: .touchUpInside)
    }
    //删除
    @objc func deleteReply(_ btn:UIButton){
        self.delegate?.DeleteReply(btn)
    }
    //点赞
     @objc func approveVotes(_ btn:UIButton){
        self.delegate?.praiseVotes(btn)
    }
    
    func setReply(model:courseDiscusscell){
        lab_name.text = model.replayDisplayName
        lab_time.text = model.replyDateCreated

      
        lab_content.lineBreakMode = .byTruncatingTail
        lab_content.font = UIFont.systemFont(ofSize: 15)
        lab_content.textColor = UIColor.gray
        

        lab_replyCount.text = "\u{e707} (\(model.replyCount))"

        btn_delete.isHidden = !model.isMine

        btn_praise.setTitle("\u{e70f} (\(model.votesCount))", for: .normal)

        btn_praise.isSelected = model.isVotes

        //头像
        common.share.setSDImg(str:model.thumbnail, imgview:image_View)

    }
    
    let width = UIScreen.main.bounds.width
    let height = UIScreen.main.bounds.height
    
    
    lazy var image_View : UIImageView = {
        let img = UIImageView()
        img.backgroundColor = UIColor.white
        return img
    }()
    lazy var lab_name : UILabel = {
        let lab = UILabel()
        lab.backgroundColor = UIColor.white
        lab.textColor = UIColor.black
        lab.font = UIFont.italicSystemFont(ofSize: 15)
        return lab
    }()
    lazy var lab_time : UILabel = {
        let lab = UILabel()
        lab.backgroundColor = UIColor.white
        lab.textColor = UIColor.gray
        lab.font = UIFont.italicSystemFont(ofSize: 11)
        return lab
    }()
    lazy var lab_content : UILabel = {
        let lab = UILabel()
        lab.backgroundColor = UIColor.white
        lab.textColor = UIColor.gray
        lab.numberOfLines = 2
        return lab
    }()
    lazy var lab_replyCount : UILabel = {
        let lab = UILabel()
        lab.textColor = UIColor.gray
        lab.backgroundColor = UIColor.white
        lab.font = UIFont.init(name: "iconfont", size: 13)
        lab.textAlignment = .center
        return lab
    }()
    lazy var btn_praise : UIButton = {
       let btn = UIButton()

        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 13)
        btn.setTitleColor(UIColor.gray, for: .normal)
        btn.setTitleColor(UIColor.bg, for: .selected)
        btn.backgroundColor = UIColor.white
        return btn
    }()
    lazy var btn_delete : UIButton = {
        let btn = UIButton()
        btn.titleLabel?.font = UIFont.init(name: "iconfont",size: 13)
        btn.setTitle("删除", for: .normal)
        btn.setTitleColor(UIColor.bg, for: .normal)
        btn.backgroundColor = UIColor.white
        btn.titleLabel?.textAlignment = .center
        
        return btn
    }()
    lazy var reply : NSArray = []
   
   
}
