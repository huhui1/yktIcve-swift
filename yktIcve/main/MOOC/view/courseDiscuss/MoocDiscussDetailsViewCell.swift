//
//  MoocDiscussDetailsViewCell.swift
//  云课堂-智慧职教
//
//  Created by 尤增强 on 2018/8/14.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SwiftyJSON

@objc protocol MoocDiscussDetailsViewCellDelegate:NSObjectProtocol  {

    func DeleteReply(btn:UIButton) -> ()
    func ReturnReplyDocUrl(_ url:String) -> ()
}
class MoocDiscussDetailsViewCell: UITableViewCell {

    @IBOutlet weak var labConBottomH: NSLayoutConstraint!
    override func awakeFromNib() {
        super.awakeFromNib()
        self.lab_date.textColor = UIColor.gray
        self.lab_name.textColor = UIColor.bg
        // Initialization code
    }
    var docURL = [String]()
     var delegate :MoocDiscussDetailsViewCellDelegate!
    @IBOutlet weak var lab_date: UILabel!
    @IBOutlet weak var lab_content: UILabel!
    @IBOutlet weak var lab_name: UILabel!
    @IBOutlet weak var btn_delete: UIButton!
    override func setSelected(_ selected: Bool, animated: Bool) {
        super.setSelected(selected, animated: animated)

        // Configure the view for the selected state
    }
    @IBAction func action_del(_ sender: UIButton) {
        self.delegate?.DeleteReply(btn:sender)
    }

    @objc func btnTouch(_ btn :UIButton){

        self.delegate.ReturnReplyDocUrl(self.docURL[btn.tag])
    }

    func setReply(reply:JSON){
        let strname = "\(reply["displayName"].stringValue) 回复 \(reply["replyToDisplayName"].stringValue)"

        lab_name.attributedText = common.share.changeTextChange(regex:.hf, text: strname, color: UIColor.black);

        lab_name.text = "\(reply["displayName"].stringValue) 回复 \(reply["replyToDisplayName"].stringValue)"

        lab_date.text = "\(reply["dateCreated"].stringValue)"
        if reply["isMine"] == true  {
            btn_delete.isHidden = false
            btn_delete.setTitleColor(UIColor.bg, for: .normal)
        }else{
            btn_delete.isHidden = true
        }
        self.labConBottomH.constant = CGFloat(20 * reply["urlList"].count) + 20
        for (i,v) in reply["urlList"].enumerated(){
            let btn = UIButton.init(type: .custom)
            btn.setTitle(v.1["Title"].stringValue, for: .normal)
            btn.titleLabel?.font = UIFont.init(name: "HelveticaNeue-Light", size: 12)
            btn.contentHorizontalAlignment = .left
            btn.setTitleColor(UIColor.bg, for: .normal)
            self.addSubview(btn)
            btn.snp.makeConstraints({ (make) in
                make.width.equalTo(UIScreen.main.bounds.width)
                make.left.equalTo(10)
                make.height.equalTo(12)
                make.top.equalTo(self.lab_content.snp.bottom).offset(i * 16)
            })
            btn.tag = i
            btn.addTarget(self, action: #selector(self.btnTouch(_:)), for:.touchUpInside)
            self.docURL.append(v.1["Url"].stringValue)
        }
    }

}
