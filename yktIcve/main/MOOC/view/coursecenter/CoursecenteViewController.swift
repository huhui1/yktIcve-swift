//
//  CoursecenterListController.swift
//  云课堂2
//  课程中心请求数据
//  Created by 志辉教育 on 2018/5/30.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire
extension  CoursecenteView {
    //获取我的学习 fwonav2ni7zexp7iavcvqq_66036
    //sourceType 用户来源 0.职教云 1.mooc 2.智慧职教
    func getmycoursecenterData(isFinished:Int){
        let dict = ["userId":Account.defaultAccount.id!,
                    "isFinished":isFinished,"page":page,"sourceType":self.sourceType] as [String : Any]
        XLBallLoading.show(in: self.view)
        Alamofire.request(MOOCAPI.Mooc_getMyCourseList, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                XLBallLoading.hide(in: self.view)
                if json["code"] == 1{


                    if self.tableview.mj_footer != nil {
                        if( json["list"].count < json["pagination"]["pageSize"].intValue  ){
                             self.tableview.mj_footer.endRefreshingWithNoMoreData()
                        }else{
                             self.tableview.mj_footer.endRefreshing()
                        }
                    }
                    self.mycourse(json:json)
                }else{
                      ZKProgressHUD.showMessage(json["msg"].stringValue)
                }
            }else{
                XLBallLoading.hide(in: self.view)
                ZKProgressHUD.showMessage("网络环境异常请稍后再试！")
            }
            if self.tableview.mj_header != nil{
                //结束刷新
                self.tableview.mj_header.endRefreshing()
            }
        }

    }
    //获取所有课程数据
    func getallcoursecenterData(q:NSString){
        let dict = ["q":q,
                    "page":page,
                    "userId":Account.defaultAccount.id!
                    ] as [String : Any]
        XLBallLoading.show(in: self.view)
        Alamofire.request(MOOCAPI.Mooc_getMoocCourseList, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                XLBallLoading.hide(in: self.view)
                let json = JSON(value)
                if json["code"] == 1{


                    if self.tableview.mj_footer != nil {
                        if( json["list"].count < json["pagination"]["pageSize"].intValue  ){
                            self.tableview.mj_footer.endRefreshingWithNoMoreData()
                        }else{
                            self.tableview.mj_footer.endRefreshing()
                        }
                    }
                    self.allcourse(json:json)
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
            }else{
                XLBallLoading.hide(in: self.view)
                ZKProgressHUD.showMessage("网络环境异常请稍后再试！")
            }
            if self.tableview.mj_header != nil{
                //结束刷新
                self.tableview.mj_header.endRefreshing()
            }
        }

    }
    //获取我的课程
    func getTeamycoursecenterData(isFinished:Int){
        let dict = ["userId":Account.defaultAccount.id!,
                    "isFinished":isFinished,"page":page] as [String : Any]
        XLBallLoading.show(in: self.view)
        Alamofire.request(MOOCAPI.Mooc_getMySetCourseList, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                XLBallLoading.hide(in: self.view)
                if json["code"] == 1{

                    if self.tableview.mj_footer != nil {
                        if( json["list"].count < json["pagination"]["pageSize"].intValue  ){
                            self.tableview.mj_footer.endRefreshingWithNoMoreData()
                        }else{
                            self.tableview.mj_footer.endRefreshing()
                        }
                    }
                    self.teamycourse(json:json)
                }else{
                    ZKProgressHUD.showMessage(json["msg"].stringValue)
                }
            }else{
                XLBallLoading.hide(in: self.view)
                ZKProgressHUD.showMessage("网络环境异常请稍后再试！")
            }
            if self.tableview.mj_header != nil{
                //结束刷新
                self.tableview.mj_header.endRefreshing()
            }
        }
    }
    
    //获取我最近学的课程
    func getMyRecentStudyList(){
        let dict = ["userId":Account.defaultAccount.id!]
        XLBallLoading.show(in: self.view)
        Alamofire.request(MOOCAPI.Mooc_getMyRecentStudyList, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                XLBallLoading.hide(in: self.view)
                if json["code"] == 1{
                   self.MyRecentStudyList = (json["list"].arrayValue as NSArray) as! [Any]
                     self.topRecentStudy()
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
            }else{
                XLBallLoading.hide(in: self.view)
                ZKProgressHUD.showMessage("网络环境异常请稍后再试！")
            }
        }
        
    }
    
    func RecentStudyList(){
        let dict = ["userId":Account.defaultAccount.id!]
        XLBallLoading.show(in: self.view)
        Alamofire.request(MOOCAPI.Mooc_getMyRecentStudyList, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                XLBallLoading.hide(in: self.view)
                if json["code"] == 1{
                    self.MyRecentStudyList.removeAll()
                    self.MyRecentStudyList = (json["list"].arrayValue as NSArray) as! [Any]
                    self.topRecentStudy()
                    self.previewVC()
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
            }else{
                XLBallLoading.hide(in: self.view)
                ZKProgressHUD.showMessage("网络环境异常请稍后再试！")
            }
        }
        
    }
    
    
    
    //最进学习
    func topRecentStudy(){
        if(UIDevice.current.model == "iPad"){
            self.ipadht = 30
        }
        //调用头部的图片轮播，判断是否添加继续学习
        let imageW:CGFloat = UIScreen.main.bounds.width;
        let imageH:CGFloat = CGFloat(150 + self.ipadht);
        let imageY:CGFloat = 0;
        if MyRecentStudyList.count == 0{
             let imageView:UIImageView = UIImageView();
             imageView.frame = CGRect(x:0,y:0,width:imageW,height:imageH)
             imageView.image = UIImage.init(named: "noCover-1")
             headview.scrollview.addSubview(imageView);
             headview.timer?.invalidate()
             headview.timer = nil
        }else{
            self.headview.scrollview.removeAllSubviews()
            for index in 0..<MyRecentStudyList.count{
                let imageView:UIImageView = UIImageView();
                let imageX:CGFloat = CGFloat(index) * imageW;
                imageView.frame = CGRect(x:imageX,y:imageY,width:imageW,height:imageH)
                imageView.isUserInteractionEnabled = true;
                common.share.setSDImg(str: JSON(MyRecentStudyList[index])["coverUrl"].stringValue, imgview: imageView)
                
                let bg_view:UIView = UIView()
                bg_view.frame = CGRect(x:0,y:imageY,width:imageW,height:imageH)
                bg_view.backgroundColor = UIColor.init(red: 0, green: 0, blue: 0, alpha: 0.2)
                imageView.addSubview(bg_view)
                let lab:UILabel = UILabel()
                lab.frame = CGRect(x:80,y:20,width:UIScreen.main.bounds.width,height:40)
                
                lab.text = "\(JSON(MyRecentStudyList[index])["courseName"].stringValue)-\(JSON(MyRecentStudyList[index])["courseOpenName"].stringValue)"
                lab.font = UIFont.systemFont(ofSize: 20)
                lab.font = UIFont.boldSystemFont(ofSize: 20)
                lab.textColor = UIColor.colorWithHex(hexColor: 0xf2f2f2)
                bg_view.addSubview(lab)
                
                if !JSON(MyRecentStudyList[index])["isOver"].boolValue{
                    let btn:UIButton = UIButton()
                    btn.frame = CGRect(x:10,y:110,width:80,height:30)
                    btn.setTitle("继续学习", for: .normal)
                    btn.setTitleColor(UIColor.white, for: .normal)
                    btn.backgroundColor = UIColor.bg
                    btn.layer.shadowColor = UIColor.colorWithHex(hexColor: 0x68696e).cgColor
                    btn.layer.shadowOpacity = 0.5
                    btn.layer.shadowOffset = CGSize.zero
                    btn.layer.shadowRadius = 3//阴影半径，默认3
                    btn.layer.masksToBounds = true
                    btn.layer.cornerRadius = 5
                    btn.addTarget(self, action: #selector(RecentStudy), for:.touchUpInside)
                    bg_view.addSubview(btn)
                }
                headview.PageControl.numberOfPages = MyRecentStudyList.count
                headview.scrollview.showsHorizontalScrollIndicator = false;
                headview.scrollview.addSubview(imageView);
                let contentW:CGFloat = imageW * CGFloat(MyRecentStudyList.count);
                headview.scrollview.contentSize = CGSize(width:contentW, height:0);
                headview.scrollview.isPagingEnabled = true;
                headview.scrollview.delegate = headview;
               
           }
        }
    }
    //点击头部图片跳转-继续学习
    func previewVC(){
        //page获取那张图片
        let page = headview.PageControl.currentPage
        print(page)
        if JSON(MyRecentStudyList[page])["lastStudy"].arrayValue.isEmpty{
            let vc = TeachCourseCenterView()
            vc.courseOpenId = JSON(MyRecentStudyList[page])["courseOpenId"].stringValue
            vc.hidesBottomBarWhenPushed = true
            self.navigationController?.pushViewController(vc, animated: true)
        }else{//跳转到相应课件继续学习
            //上次学习的单元类型 1代表课程资源,,3.图文,4.子节点 ,
            let cellType = JSON(MyRecentStudyList[page])["lastStudy"][0]["cellType"].intValue
            //课件下的资源
            let categoryName = JSON(MyRecentStudyList[page])["lastStudy"][0]["categoryName"].stringValue
            switch cellType {
            case 1:
                switch categoryName {
                case "ppt","文档":
                    let vc = ImagePreviewVC()
                    vc.docId = JSON(MyRecentStudyList[page])["lastStudy"][0]["cellId"].stringValue
                    vc.courseOpenId = JSON(MyRecentStudyList[page])["lastStudy"][0]["courseOpenId"].stringValue
                    vc.isFromKj = true
                    vc.hidesBottomBarWhenPushed = true
                    self.navigationController?.pushViewController(vc, animated: true)
                case "图片":
                    let vc = PicturePreviewView()
                    vc.docId = JSON(MyRecentStudyList[page])["lastStudy"][0]["cellId"].stringValue
                    vc.courseOpenId = JSON(MyRecentStudyList[page])["lastStudy"][0]["courseOpenId"].stringValue
                    vc.hidesBottomBarWhenPushed = true
                    self.navigationController?.pushViewController(vc, animated: true)
                case "视频":
                    let vc = videoPlayView()
                    vc.docId = JSON(MyRecentStudyList[page])["lastStudy"][0]["cellId"].stringValue
                    vc.courseOpenId = JSON(MyRecentStudyList[page])["lastStudy"][0]["courseOpenId"].stringValue
                    vc.hidesBottomBarWhenPushed = true
                    self.navigationController?.pushViewController(vc, animated: true)
                case "音频":
                    self.getAudioResources(cellid: JSON(MyRecentStudyList[page])["lastStudy"][0]["cellId"].stringValue, courseOpenId: JSON(MyRecentStudyList[page])["lastStudy"][0]["courseOpenId"].stringValue)
                default:
                    print("=")
                }
                
            case 3:
                let vc = MoocCourseware_tuWenView()
                vc.cellId = JSON(MyRecentStudyList[page])["lastStudy"][0]["cellId"].stringValue
                vc.courseOpenId = JSON(MyRecentStudyList[page])["lastStudy"][0]["courseOpenId"].stringValue
                vc.hidesBottomBarWhenPushed = true
                self.navigationController?.pushViewController(vc, animated: true)
            default:
                let vc = TeachCourseCenterView()
                vc.courseOpenId = JSON(MyRecentStudyList[page])["courseOpenId"].stringValue
                vc.hidesBottomBarWhenPushed = true
                self.navigationController?.pushViewController(vc, animated: true)
            }
        }
        
    }
    @objc func RecentStudy(){
        self.RecentStudyList()
    }
    //获取音频
    func getAudioResources(cellid:String,courseOpenId:String){
        let dict = ["courseOpenId":courseOpenId,
                    "cellId":cellid,
                    "userId":Account.defaultAccount.id!] as [String : Any]
        XLBallLoading.show(in: self.view)
        Alamofire.request(MOOCAPI.Mooc_coursestudy_viewDirectory, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                XLBallLoading.hide(in: self.view)
                if json["code"] == 1{
                    let data = JSON.init(parseJSON: json["resUrl"].stringValue)
                    print(data)
                    let vc = audioViewController()
                    vc.audiourl = data["urls"]["preview"].stringValue
                    vc.isNet = true
                    vc.title = json["title"].stringValue
                    if(Account.defaultAccount.role == "1"){
                        vc.isStu = true
                    }
                    vc.IsFromMooc = true
                    vc.courseOpenId = courseOpenId
                    vc.isAllowDownLoad = json["isDownLoad"].boolValue
                    vc.cellId = cellid
                    vc.hidesBottomBarWhenPushed = true
                    self.navigationController?.pushViewController(vc, animated: true)
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
            }else{
                XLBallLoading.hide(in: self.view)
                ZKProgressHUD.showMessage("网络环境异常请稍后再试！")
            }
        }
    }
    //教师我的课程
    func teamycourse(json:JSON){
        self.pagemyTeaListcount = json["pagination"]["totalCount"].intValue
        for data in json["list"] {
            
            let mycourseInfo = coursemycenterCell.init(_id: data.1["id"].stringValue, _courseName: data.1["courseName"].stringValue, _thumbnail: data.1["thumbnail"].stringValue, _courseOpenId: data.1["courseOpenId"].stringValue, _courseOpenName: data.1["courseOpenName"].stringValue, _process: data.1["process"].intValue, _studentCount: data.1["studentCount"].stringValue, _isFinished: data.1["isFinished"].stringValue, _stuId: data.1["stuId"].stringValue, _isTeacher: data.1["isTeacher"].boolValue, _status: data.1["isFinished"].intValue, _openClassTime: data.1["openClassTime"].stringValue, _openClassEndTime: data.1["openClassEndTime"].stringValue)
            self.teamycourseInfos.append(mycourseInfo)
        }
         self.tableview.reloadData()
        common.share.setTableFootView_noData(self.tableview, list: self.teamycourseInfos as NSArray)


        
    }
    //拼接数据我的学习
    func mycourse(json:JSON){
        self.pagemyListcount = json["pagination"]["totalCount"].intValue
        for data in json["list"] {

            let mycourseInfo = coursemycenterCell.init(_id: data.1["id"].stringValue, _courseName: data.1["courseName"].stringValue, _thumbnail: data.1["thumbnail"].stringValue, _courseOpenId: data.1["courseOpenId"].stringValue, _courseOpenName: data.1["courseOpenName"].stringValue, _process: data.1["process"].intValue, _studentCount: data.1["studentCount"].stringValue, _isFinished: data.1["isFinished"].stringValue, _stuId: data.1["stuId"].stringValue, _isTeacher: data.1["isTeacher"].boolValue, _status: data.1["isFinished"].intValue, _openClassTime: "", _openClassEndTime: "")
           self.reservedInfo.append(mycourseInfo)
        }
         self.tableview.reloadData()
        common.share.setTableFootView_noData(self.tableview, list: self.reservedInfo as NSArray)



    }

    func allcourse(json:JSON){
        self.pageallListcount = json["pagination"]["totalCount"].intValue
        for data in json["list"] {

            let allcourseInfo = courseallcenterCell.init(_status: data.1["status"].stringValue, _id: data.1["id"].stringValue, _courseName: data.1["courseName"].stringValue, _courseOpenId: data.1["courseOpenId"].stringValue, _courseOpenName: data.1["courseOpenName"].stringValue, _mainTeacherName: data.1["mainTeacherName"].stringValue, _studentCount: data.1["studentCount"].stringValue, _openClassTime: data.1["openClassTime"].stringValue, _openClassEndTime: data.1["openClassEndTime"].stringValue, _teachingWeek: data.1["teachingWeek"].intValue, _totalTeachingWeek: data.1["totalTeachingWeek"].intValue, _thumbnail: data.1["thumbnail"].stringValue, _isTeacher: data.1["isTeacher"].boolValue)
            self.reservedallcourseInfo.append(allcourseInfo)
            //self.selallcourseInfos.append(allcourseInfo)
            
        }
        self.tableview.reloadData()
        common.share.setTableFootView_noData(self.tableview, list: self.reservedallcourseInfo as NSArray)


    }

    
}
    
    
    

