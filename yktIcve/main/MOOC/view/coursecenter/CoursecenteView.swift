//
//  CoursecenterController.swift
//  云课堂2
//  课程中心
//  Created by 志辉教育 on 2018/5/29.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SwiftyJSON
class CoursecenteView: UIViewController,UITableViewDelegate, UITableViewDataSource,UIScrollViewDelegate,UISearchBarDelegate,ZQNavigationMenuViewDelegate {
    //隐藏状态栏
    override var prefersStatusBarHidden: Bool {
        return true
    }
    @IBOutlet weak var tableview: UITableView!

    init() {
        super.init(nibName: "CoursecenteView", bundle: nil)
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    override func viewDidLoad() {
        super.viewDidLoad()
    
        
        self.view.addSubview(self.setTopView())
        self.setUI()
        if Account.defaultAccount.role! == "1"{
           self.getmycoursecenterData(isFinished: 0)
        }else{
           headview.teacourse_btn.isSelected = true
           self.getTeamycoursecenterData(isFinished: 0)
        }
        self.getMyRecentStudyList()
        // Do any additional setup after loading the view.
        if(UIDevice.current.model == "iPad"){
            headview.frame = CGRect.init(x: 0, y: 0, width:width, height: 275)
        }else{
            headview.frame = CGRect.init(x: 0, y: 0, width:width, height: 235)
        }
        headview.mycourse_btn.addTarget(self, action: #selector(tapped(_:)), for:.touchUpInside)
        headview.allcourse_btn.addTarget(self, action: #selector(tapped(_:)), for:.touchUpInside)
        headview.teacourse_btn.addTarget(self, action: #selector(tapped(_:)), for:.touchUpInside)
        headview.sreachBar.delegate = self
        headview.ongoing_btn.addTarget(self, action: #selector(showMenu), for:.touchUpInside)

        self.tableview.tableHeaderView = headview
        self.tableview.delegate = self
        self.tableview.dataSource = self
        self.tableview.tableFooterView = UIView(frame:CGRect.zero)//除去多余的cell
        self.allcourse_btn.isHidden = true
        self.mycourse_btn.isHidden = true
        self.teacourse_btn.isHidden = true
        self.settoolBar()
        if #available(iOS 11.0, *) {
            self.tableview.contentInsetAdjustmentBehavior = .never
        } else {
            automaticallyAdjustsScrollViewInsets = false;
        };
        self.tableview.contentInset = UIEdgeInsetsMake(0, 0, 0, 0)
        self.tableview.scrollIndicatorInsets =  self.tableview.contentInset
        
        //下拉刷新相关设置,使用闭包Block
        self.tableview.mj_header = MJRefreshNormalHeader(refreshingBlock: {
            //重现生成数据
            if self.headview.allcourse_btn.isSelected || self.allcourse_btn.isSelected{
                self.reservedallcourseInfo = []
                self.page = 1
                self.getallcoursecenterData( q: "")
            }else if self.headview.mycourse_btn.isSelected || self.mycourse_btn.isSelected{
                self.reservedInfo = []
                self.page = 1
                self.getmycoursecenterData(isFinished: self.course_state)
            }else{
                self.teamycourseInfos = []
                self.page = 1
                self.getTeamycoursecenterData(isFinished: self.course_state)
            }
          
        })

        //上拉加载
        self.tableview.mj_footer = MJRefreshBackNormalFooter(refreshingBlock: {
            self.page += 1
            if self.headview.allcourse_btn.isSelected || self.allcourse_btn.isSelected{
                    self.getallcoursecenterData( q: "")

            }else if self.headview.mycourse_btn.isSelected || self.mycourse_btn.isSelected{

                    self.getmycoursecenterData(isFinished: self.course_state)

            }else{
                if self.teamycourseInfos.count >= self.pagemyTeaListcount {

                    self.getTeamycoursecenterData(isFinished: self.course_state)

                }
            }
        })
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        if headview.allcourse_btn.isSelected || self.allcourse_btn.isSelected {
            return self.reservedallcourseInfo.count
        }else if headview.mycourse_btn.isSelected || self.mycourse_btn.isSelected{
            return self.reservedInfo.count
        }else{
            return self.teamycourseInfos.count
        }
    }
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 120
    }
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {

        if headview.allcourse_btn.isSelected || self.allcourse_btn.isSelected{
            self.tableview.register(UINib(nibName:"allcourseTableViewCell", bundle:nil),
                                    forCellReuseIdentifier:"allcourse")

            let cell:allcourseTableViewCell = tableView.dequeueReusableCell(withIdentifier: "allcourse")
                as! allcourseTableViewCell
            let allItem = self.reservedallcourseInfo[indexPath.row]
            common.share.setSDImg(str: allItem.thumbnail, imgview: cell.allcourseImage)
            cell.lab_courseName.text = allItem.courseName
            cell.lab_teacherName.text = allItem.mainTeacherName
            cell.lab_stuNum.text = "\u{e6bc} \(allItem.studentCount)"
            cell.lab_whencourse.text = allItem.courseOpenName
            cell.lab_courseDate.text = "\u{e640}\(allItem.openClassTime)-\(allItem.openClassEndTime)"
            if allItem.status == "3"{
                cell.lab_been.text = "已结束"
            } else if (allItem.status == "2"){
                 cell.lab_been.text = "即将开始"
            }else{
                let str = "已进行\(allItem.teachingWeek)/\((allItem.totalTeachingWeek))周"
                cell.lab_been.attributedText = common.share.changeTextChange(regex:.dW, text: str, color: UIColor.bg);
            }
            cell.btn_courseDetails.tag = indexPath.row
            cell.btn_courseDetails.addTarget(self, action: #selector(self.allcourseDetails(_:)), for: .touchUpInside)
            return cell
        }else if headview.mycourse_btn.isSelected || self.mycourse_btn.isSelected{
            //创建一个重用的单元格
            self.tableview.register(UINib(nibName:"CoursecenterTableViewCell", bundle:nil),
                                    forCellReuseIdentifier:"CoursecenterTableViewCell")
            let cell:CoursecenterTableViewCell = tableView.dequeueReusableCell(withIdentifier: "CoursecenterTableViewCell")
                as! CoursecenterTableViewCell
            let item = self.reservedInfo[indexPath.row]
            cell.setMycoursecell(model: item)
            return cell
        }else{
            //创建一个重用的单元格
            self.tableview.register(UINib(nibName:"teacherCourseCell", bundle:nil),
                                    forCellReuseIdentifier:"teacherCourseCell")
            let cell:teacherCourseCell = tableView.dequeueReusableCell(withIdentifier: "teacherCourseCell")
                as! teacherCourseCell
            let item = self.teamycourseInfos[indexPath.row]
            cell.setMycoursecell(model: item)
            return cell
        }

    }

    //点击tabview跳转
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        self.tableview.deselectRow(at: indexPath, animated: true)
        if headview.allcourse_btn.isSelected || self.allcourse_btn.isSelected{
            let json = reservedallcourseInfo[indexPath.row]
            let vc = courseDetailsView()
            vc.courseId = json.id
            vc.courseOpenId = json.courseOpenId
            vc.isTeacher = json.isTeacher
            vc.isEnd = json.status == "3" ? true :false
            vc.ising = json.status == "2" ? true :false
            vc.hidesBottomBarWhenPushed = true
            self.navigationController?.pushViewController(vc, animated: false)
        }else if headview.mycourse_btn.isSelected || self.mycourse_btn.isSelected {
            let json = self.reservedInfo[indexPath.row]
            if json.status == 2{
                ZKProgressHUD.showMessage("该课程即将开始")
            }else{
                let vc = TeachCourseCenterView()
                vc.courseOpenId = json.courseOpenId
                vc.isTeacher = json.isTeacher
                vc.hidesBottomBarWhenPushed = true
                self.navigationController?.pushViewController(vc, animated: false)
            }
        }else{
            let json = self.teamycourseInfos[indexPath.row]
            let vc = TeachCourseCenterView()
            vc.courseOpenId = json.courseOpenId
            vc.isTeacher = json.isTeacher
            vc.isMineClass = true
            vc.hidesBottomBarWhenPushed = true
            self.navigationController?.pushViewController(vc, animated: false)
        }
    }
    //点击我的课程/所有课程
    @objc func tapped(_ button:UIButton){
        let tag = button.tag
        if self.reservedInfo.count < 3 || self.reservedallcourseInfo.count < 3 {
            self.allcourse_btn.isHidden = true
            self.mycourse_btn.isHidden = true
            self.topView.backgroundColor = UIColor(red: 43/255, green: 165/255, blue: 132/255, alpha:0);
        }
        switch tag {
        //我的学习
        case 5,3:
            headview.sreachBar.resignFirstResponder()
            self.mycourse_btn.isSelected = true
            self.allcourse_btn.isSelected = false
            self.teacourse_btn.isSelected = false
            headview.mycourse_btn.isSelected = true
            headview.allcourse_btn.isSelected = false
            headview.teacourse_btn.isSelected = false
            headview.allline_view.isHidden = true
            headview.myline_view.isHidden = false
            headview.teacourse_view.isHidden = true
            headview.sreachBar.isHidden = true
            if self.reservedInfo.count > 0{
               common.share.setTableFootView_noData(self.tableview, list: self.reservedInfo )
               self.tableview.reloadData()
            }else{
               self.getmycoursecenterData(isFinished: self.course_state)
            }
        //所有课程
        case 6,4:
            self.mycourse_btn.isSelected = false
            self.allcourse_btn.isSelected = true
            self.teacourse_btn.isSelected = false
            headview.mycourse_btn.isSelected = false
            headview.allcourse_btn.isSelected = true
            headview.teacourse_btn.isSelected = false
            headview.teacourse_view.isHidden = true
            headview.allline_view.isHidden = false
            headview.myline_view.isHidden = true
            headview.sreachBar.isHidden = false
            if self.reservedallcourseInfo.count > 0{
                common.share.setTableFootView_noData(self.tableview, list: self.reservedallcourseInfo)
                self.tableview.reloadData()
            }else{
                self.getallcoursecenterData( q: "")
            }
        //我的课程
        case 8,9:
            headview.sreachBar.resignFirstResponder()
            self.teacourse_btn.isSelected = true
            self.mycourse_btn.isSelected = false
            self.allcourse_btn.isSelected = false
            headview.mycourse_btn.isSelected = false
            headview.allcourse_btn.isSelected = false
            headview.allline_view.isHidden = true
            headview.myline_view.isHidden = true
            headview.teacourse_view.isHidden = false
            headview.sreachBar.isHidden = true
            headview.teacourse_btn.isSelected = true
            common.share.setTableFootView_noData(self.tableview, list: self.teamycourseInfos)
            self.tableview.reloadData()
        default:
            print("====")
        }

    }
    //视图滚动时触发
    func scrollViewDidScroll(_ scrollView: UIScrollView) {
        print("x:\(scrollView.contentOffset.x) y:\(scrollView.contentOffset.y)")

        self.scrollViewY = Int(scrollView.contentOffset.y)
        //当上滑时，滑过headView时
        if scrollViewY >= 180{
            self.topView.backgroundColor = UIColor.bg
            self.allcourse_btn.isHidden = false
            self.mycourse_btn.isHidden = false
            self.teacourse_btn.isHidden = false
            self.topView.alpha = 1
            if headview.allcourse_btn.isSelected {
                self.allcourse_btn.titleLabel?.textColor = UIColor.white
            }else{
                self.allcourse_btn.titleLabel?.textColor = UIColor.black
            }
            if headview.mycourse_btn.isSelected{
                self.mycourse_btn.titleLabel?.textColor = UIColor.white
            }else{
                self.mycourse_btn.titleLabel?.textColor = UIColor.black
            }
            if headview.teacourse_btn.isSelected{
                self.teacourse_btn.titleLabel?.textColor = UIColor.white
            }else{
                self.teacourse_btn.titleLabel?.textColor = UIColor.black
            }
            self.mycourse_btn.backgroundColor?.withAlphaComponent(1)
            self.allcourse_btn.backgroundColor?.withAlphaComponent(1)
            self.teacourse_btn.backgroundColor?.withAlphaComponent(1)
            headview.sreachBar.resignFirstResponder()
        }else{
            self.topView.backgroundColor = UIColor(red: 43/255, green: 165/255, blue: 132/255, alpha:0);
            self.allcourse_btn.isHidden = true
            self.mycourse_btn.isHidden = true
            self.teacourse_btn.isHidden = true
            
        }

    }
    func settoolBar(){
        toolBar = common.share.AddToolKeyboardDoneBar()
        let doneButton = UIBarButtonItem(title: "确定", style: .plain, target: self, action: #selector(self.DoneClick));
        let spaceButton = UIBarButtonItem(barButtonSystemItem: .flexibleSpace, target: nil, action: nil)
        toolBar.setItems([spaceButton,doneButton], animated: false);
        headview.sreachBar.inputAccessoryView = toolBar
    }
    @objc func DoneClick(){
        self.view.endEditing(true)
    }

    // 搜索代理UISearchBarDelegate方法，每次改变搜索内容时都会调用
    func searchBar(_ searchBar: UISearchBar, textDidChange searchText: String) {
        self.page = 1
        //去前后空格
        let searchText = searchText.trimmingCharacters(in: .whitespaces)
        print(searchText)
        // 没有搜索内容时显示全部组件
        if searchText == "" {
            self.reservedallcourseInfo.removeAll()
            self.getallcoursecenterData( q: "")
            self.tableview.reloadData()
        }
        else { // 匹配用户输入内容(不区分大小写)
            self.reservedallcourseInfo = []
            self.getallcoursecenterData( q: searchText as NSString)
        }

    }

    @objc func showMenu(){
        self.menu.isHidden = !self.menu.isHidden
    }
    //正在进行，进行中，结束切换
    func getIndex(_index: Int) {
        self.menu.isHidden = !self.menu.isHidden
        self.page = 1
        self.course_state = _index
        if Account.defaultAccount.role! == "1"{
           self.reservedInfo.removeAll()
           self.getmycoursecenterData(isFinished: _index)
        }else if headview.mycourse_btn.isSelected || self.mycourse_btn.isSelected{
           self.reservedInfo.removeAll()
           self.getmycoursecenterData(isFinished: _index)
        }else{
           self.teamycourseInfos.removeAll()
           self.getTeamycoursecenterData(isFinished: _index)
        }
        switch _index {
        case 0:
            headview.ongoing_btn.setTitle("正在进行", for: .normal)
        case 1:
            headview.ongoing_btn.setTitle("已结束", for: .normal)
        case 2:
            headview.ongoing_btn.setTitle("即将开始", for: .normal)
        default:
            print("default")
        }
    }
    //所有课程里面的课程详情
    @objc func allcourseDetails(_ button:UIButton){
        let tag = button.tag
        let json = reservedallcourseInfo[tag]
        let vc = courseDetailsView()
        vc.courseId = json.id
        vc.isEnd = json.status == "3" ? true :false
        vc.ising = json.status == "2" ? true :false
        vc.isTeacher = json.isTeacher
        vc.courseOpenId = json.courseOpenId
        self.navigationController?.pushViewController(vc, animated: false)
    }

    func setUI(){
        self.view.addSubview(line_view)
        self.line_view.snp.makeConstraints { (make) in
            make.width.equalTo(35)
            make.height.equalTo(5)
            make.top.equalTo(self.mycourse_btn.snp.bottom)
            make.centerX.equalTo(self.mycourse_btn.snp.centerX)
        }
        let items = ["正在进行","已结束","即将开始"]
        self.menu = ZQNavigationMenuView.init(frame: CGRect.init(x: UIScreen.main.bounds.width - 150, y: 80, width:148, height: 120), titles: items )
        menu.layer.cornerRadius = 5.0
        menu.layer.borderColor = UIColor.bg.cgColor
        menu.layer.borderWidth = 1.0
        menu.layer.masksToBounds = true
        self.menu.isHidden = true
        self.menu.delegate = self
        headview.addSubview(menu)
    }


    func setTopView() ->UIView{
        if common.share.isX(){
            self.topView = UIView(frame:CGRect(x:0,y:44,width:width,height:40));
        }else{
            self.topView = UIView(frame:CGRect(x:0,y:0,width:width,height:40));
        }
        self.topView.backgroundColor = UIColor(red: 43/255, green: 165/255, blue: 132/255, alpha: 0);
        self.mycourse_btn.titleLabel?.textColor = UIColor(red: 43/255, green: 165/255, blue: 132/255, alpha: 0);
        self.allcourse_btn.titleLabel?.textColor = UIColor(red: 43/255, green: 165/255, blue: 132/255, alpha: 0);
        
        
        
        self.allcourse_btn.addTarget(self, action: #selector(tapped(_:)), for:.touchUpInside)
        self.mycourse_btn.addTarget(self, action: #selector(tapped(_:)), for:.touchUpInside)
        self.teacourse_btn.addTarget(self, action: #selector(tapped(_:)), for:.touchUpInside)

        
        
        self.topView.addSubview(self.allcourse_btn)
        self.topView.addSubview(self.mycourse_btn)
        if Account.defaultAccount.role! == "1"{
                self.mycourse_btn.snp.makeConstraints { (make) in
                    make.height.equalTo(40)
                    make.centerY.equalTo(self.topView.snp.centerY)
                    make.left.equalTo(UIScreen.main.bounds.width/5)
                    make.width.equalTo(80)
                }

                self.allcourse_btn.snp.makeConstraints { (make) in
                    make.height.equalTo(40)
                    make.centerY.equalTo(self.topView.snp.centerY)
                    make.right.equalTo(self.topView.snp.right).offset(-UIScreen.main.bounds.width/5)
                    make.width.equalTo(80)
                }
        }else{
            self.topView.addSubview(self.teacourse_btn)
            self.teacourse_btn.snp.makeConstraints({ (make) in
                make.height.equalTo(40)
                make.centerY.equalTo(self.topView.snp.centerY)
                make.left.equalTo(UIScreen.main.bounds.width/8)
                make.width.equalTo(UIScreen.main.bounds.width/4)
            })
            self.mycourse_btn.snp.makeConstraints { (make) in
                make.height.equalTo(40)
                make.centerY.equalTo(self.topView.snp.centerY)
                make.left.equalTo(self.teacourse_btn.snp.right)
                make.width.equalTo(UIScreen.main.bounds.width/4)
            }
            self.allcourse_btn.snp.makeConstraints { (make) in
                make.height.equalTo(40)
                make.centerY.equalTo(self.topView.snp.centerY)
                make.right.equalTo(self.topView.snp.right).offset(-UIScreen.main.bounds.width/8)
                make.width.equalTo(UIScreen.main.bounds.width/4)
            }
            self.allcourse_btn.titleLabel?.textAlignment = .center
            self.mycourse_btn.titleLabel?.textAlignment = .center
            
        }
        return topView
    }

    //视图显示完成后执行
    override func viewDidAppear(_ animated: Bool) {
        print("viewDidAppear")

    }

    //页面离开关闭定时器 开启导航栏
    override func viewWillDisappear(_ animated: Bool) {
        headview.timer?.invalidate()
        headview.timer = nil

        super.viewWillDisappear(false)
        self.navigationController?.setNavigationBarHidden(false, animated:false)
    }

    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(false)
        self.navigationController?.setNavigationBarHidden(true, animated: false)

    }

  

  
    let width = UIScreen.main.bounds.width;
    let height = UIScreen.main.bounds.height;

    lazy var topView :UIView = {
        let view = UIView()
        return view
    }()
    lazy var mycourse_btn: UIButton = {
        let btn = UIButton()
        btn.setTitle("我的学习", for: .normal)
        btn.setTitleColor(UIColor.black, for: .normal)
        btn.setTitleColor(UIColor.white, for: .selected)
        btn.tag = 3
        return btn
    }()
    lazy var teacourse_btn: UIButton = {
        let btn = UIButton()
        btn.setTitle("我的授课", for: .normal)
        btn.setTitleColor(UIColor.black, for: .normal)
        btn.setTitleColor(UIColor.white, for: .selected)
        btn.tag = 9
        return btn
    }()
    lazy var allcourse_btn: UIButton = {
        let btn = UIButton()
        btn.setTitle("所有课程", for: .normal)
        btn.setTitleColor(UIColor.black, for: .normal)
        btn.setTitleColor(UIColor.white, for: .selected)
        btn.tag = 4
        return btn
    }()
    
    //添加headview
    lazy var  headview :CoursecenterHeadView = {
        let v = CoursecenterHeadView()
        return v
    }()

    lazy var scrollview :UIScrollView = {
        let view = UIScrollView()
        return view
    }()
    //继续学习
    lazy var Continuetolearn_btn:UIButton = {
        let btn = UIButton()
        btn.setTitle("继续学习", for: .normal)
        btn.setTitleColor(UIColor.white, for: .normal)
        btn.backgroundColor = UIColor.bg
        btn.layer.shadowColor = UIColor.colorWithHex(hexColor: 0x68696e).cgColor
        btn.layer.shadowOpacity = 0.5
        btn.layer.shadowOffset = CGSize.zero
        btn.layer.shadowRadius = 4//阴影半径，默认3
        btn.layer.masksToBounds = true
        btn.layer.cornerRadius = 6

        return btn
    }()
    lazy var PageControl :UIPageControl = {
        let con = UIPageControl()
        return con
    }()

    lazy var bgview :UIView = {
        let view = UIView()
        return view
    }()
    //我的课程/所有课程下面的线
    lazy var line_view :UIView = {
        let view = UIView()
        return view
    }()
    //scrollView的下拉位置
    lazy var scrollViewY :Int = 0
    var menu :ZQNavigationMenuView!
    var course_state:Int = 0
    lazy var page :Int = {return 1}()
    lazy var search :NSString = {return ""}()

    lazy var sourceType : Int = {return 0}()
    var reservedInfo = [coursemycenterCell]()

    //var selallcourseInfos = [courseallcenterCell]()//全部课程
    var reservedallcourseInfo = [courseallcenterCell]()
    var teamycourseInfos = [coursemycenterCell]()//我的课程
    //头部最近学习
    lazy var MyRecentStudyList = []
    //总共多少条数据
    lazy var pagemyListcount:Int = 10
    lazy var pagemyTeaListcount:Int = 10
    lazy var pageallListcount:Int = 10
    lazy var ipadht :Int = 0
    var toolBar = UIToolbar();

}
