//
//  CoursecenterHeadView.swift
//  云课堂2
//  课程中心haedView 图片轮播
//  Created by 志辉教育 on 2018/5/29.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SnapKit
class CoursecenterHeadView: UIView,UIScrollViewDelegate,ZQNavigationMenuViewDelegate{
  
    /*
    // Only override draw() if you perform custom drawing.
    // An empty implementation adversely affects performance during animation.
    override func draw(_ rect: CGRect) {
        // Drawing code
    }
    */
    override init(frame: CGRect) {
        super.init(frame: frame)
        self.backgroundColor = UIColor.colorWithHex(hexColor: 0xf1f1f1)
        self.setUI()
      


        self.PageControl.backgroundColor = UIColor.clear
        self.PageControl.pageIndicatorTintColor = UIColor.gray // 未选中的颜色
        self.PageControl.currentPageIndicatorTintColor = UIColor.bg//选中时的颜色
        
        //开启定时器
        starTime()
        //隐藏搜索
        self.sreachBar.isHidden = true
        
    }
  
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    func scrollViewDidScroll(_ scrollView: UIScrollView) {
        let scrollviewW:CGFloat = scrollview.frame.size.width;
        let x:CGFloat = scrollview.contentOffset.x;
        let page:Int = (Int)((x + scrollviewW / 2) / scrollviewW);
        self.PageControl.currentPage = page;
    }
    
    //开启定时器
    func starTime(){
        // 启用计时器，控制每秒执行一次nextImage方法
        self.timer = Timer(timeInterval: 6, target: self, selector: #selector(self.nextImage), userInfo: nil, repeats: true)
        RunLoop.current.add(self.timer!, forMode: .defaultRunLoopMode)
    }
    //手动拖拽滚动开始
    func scrollViewWillBeginDragging(_ scrollView: UIScrollView) {
        //使自动滚动计时器失效（防止用户手动移动图片的时候这边也在自动滚动）
        self.timer?.invalidate()
    }
    
    //手动拖拽滚动结束
    func scrollViewDidEndDragging(_ scrollView: UIScrollView,
                                  willDecelerate decelerate: Bool) {
        //重新启动自动滚动计时器
        self.starTime()
        
    }
    
    @objc func nextImage(){
      
        if(page == self.PageControl.numberOfPages - 1){
            page = 0;
        }else{
            page = page + 1
        }
        let x:CGFloat = CGFloat(page) * self.scrollview.frame.size.width;
        self.scrollview.contentOffset = CGPoint(x:x, y:0);
    }
    
    
    func setUI(){
        self.addSubview(self.scrollview)
        self.addSubview(self.PageControl)
        self.addSubview(self.bgview)
        self.addSubview(self.bgview2)
        self.bgview.addSubview(self.myline_view)
        self.bgview.addSubview(self.allline_view)
        self.bgview2.addSubview(self.ongoing_btn)
        self.addSubview(self.sreachBar)
        self.bgview.snp.makeConstraints { (make) in
            make.height.equalTo(40)
            make.centerX.equalTo(self.snp.centerX)
            make.top.equalTo(self.scrollview.snp.bottom).offset(5.5)
            make.width.equalTo(UIScreen.main.bounds.width)
        }
        if Account.defaultAccount.role! == "1"{
            self.bgview.addSubview(self.mycourse_btn)
            self.bgview.addSubview(self.allcourse_btn)
            self.mycourse_btn.snp.makeConstraints { (make) in
                make.height.equalTo(40)
                make.left.equalTo(0)
                make.top.equalTo( self.bgview.snp.top)
                make.width.equalTo(UIScreen.main.bounds.width/2)
            }
            self.allcourse_btn.snp.makeConstraints { (make) in
                make.height.centerY.width.equalTo(self.mycourse_btn)
                make.right.equalTo(0)
            }
            self.teacourse_btn.isSelected = false
            self.allcourse_btn.isSelected = false
            self.mycourse_btn.isSelected = true
            self.allline_view.isHidden = true
        }else{
            self.bgview.addSubview(self.mycourse_btn)
            self.bgview.addSubview(self.allcourse_btn)
            self.bgview.addSubview(self.teacourse_btn)
            self.bgview.addSubview(self.teacourse_view)
            self.teacourse_btn.snp.makeConstraints({ (make) in
                make.height.equalTo(40)
                make.left.equalTo(0)
                make.top.equalTo( self.bgview.snp.top)
                make.width.equalTo(UIScreen.main.bounds.width/3)
            })
            self.mycourse_btn.snp.makeConstraints { (make) in
                make.height.equalTo(40)
                make.left.equalTo(self.teacourse_btn.snp.right)
                make.top.equalTo( self.bgview.snp.top)
                make.width.equalTo(UIScreen.main.bounds.width/3)
            }
            self.allcourse_btn.snp.makeConstraints { (make) in
                make.height.centerY.width.equalTo(self.mycourse_btn)
                make.right.equalTo(0)
            }
            
            self.teacourse_view.snp.makeConstraints { (make) in
                make.width.height.equalTo(self.myline_view)
                make.top.equalTo(self.teacourse_btn.snp.bottom).offset(-8)
                make.centerX.equalTo(self.teacourse_btn.snp.centerX)
            }
            self.allline_view.isHidden = true
            self.myline_view.isHidden = true
            self.allcourse_btn.isSelected = false
            self.mycourse_btn.isSelected = false
            self.teacourse_btn.isSelected = true
        }
        if(UIDevice.current.model == "iPad"){
            self.ipadht = 30
        }
        
        self.scrollview.snp.makeConstraints { (make) in
            make.height.equalTo(150 + ipadht)
            make.top.equalTo(self.snp.top)
            make.left.equalTo(0)
            make.width.equalTo(UIScreen.main.bounds.width)
        }
        
        self.PageControl.snp.makeConstraints { (make) in
            make.height.equalTo(10)
            make.centerX.equalTo(self.snp.centerX)
            make.bottom.equalTo(self.scrollview.snp.bottom).offset(-5)
            make.width.equalTo(50)
        }
        
        self.myline_view.snp.makeConstraints { (make) in
            make.width.equalTo(35)
            make.height.equalTo(5)
            make.top.equalTo(self.mycourse_btn.snp.bottom).offset(-8)
            make.centerX.equalTo(self.mycourse_btn.snp.centerX)
        }
        
        self.allline_view.snp.makeConstraints { (make) in
            make.width.height.equalTo(self.myline_view)
            make.top.equalTo(self.allcourse_btn.snp.bottom).offset(-8)
            make.centerX.equalTo(self.allcourse_btn.snp.centerX)
        }
        

        self.bgview2.snp.makeConstraints { (make) in
            make.height.equalTo(30 + ipadht/3)
            make.centerX.equalTo(self.snp.centerX)
            make.top.equalTo(self.bgview.snp.bottom).offset(5.5)
            make.width.equalTo(UIScreen.main.bounds.width)
        }
        

        
        self.ongoing_btn.snp.makeConstraints { (make) in
            make.height.equalTo(30)
            make.centerY.equalTo(self.bgview2.snp.centerY)
            make.width.equalTo(100)
            make.right.equalTo(-30)
        }
        
        self.sreachBar.snp.makeConstraints { (make) in
            make.height.equalTo(30 + ipadht/3)
            make.centerX.equalTo(self.snp.centerX)
            make.top.equalTo(self.bgview.snp.bottom).offset(5.5)
            make.width.equalTo(UIScreen.main.bounds.width)
        }
        
    }

   
    
    lazy var scrollview :UIScrollView = {
        let view = UIScrollView()
        return view
    }()
    
    lazy var PageControl :UIPageControl = {
        let con = UIPageControl()
        return con
    }()
    
    var timer:Timer? = nil
    
    lazy var bgview :UIView = {
        let view = UIView()
        view.backgroundColor = UIColor.white
        return view
    }()
    
    lazy var teacourse_btn: UIButton = {
        let btn = UIButton()
        btn.setTitle("我的授课", for: .normal)
        btn.setTitleColor(UIColor.black, for: .normal)
        btn.setTitleColor(UIColor.bg, for: .selected)
        btn.tag = 8
        return btn
    }()
    
    lazy var mycourse_btn: UIButton = {
        let btn = UIButton()
        btn.setTitle("我的学习", for: .normal)
        btn.setTitleColor(UIColor.black, for: .normal)
        btn.setTitleColor(UIColor.bg, for: .selected)
        btn.tag = 5
        return btn
    }()
    
    lazy var allcourse_btn: UIButton = {
        let btn = UIButton()
        btn.setTitle("所有课程", for: .normal)
        btn.setTitleColor(UIColor.black, for: .normal)
        btn.setTitleColor(UIColor.bg, for: .selected)
        btn.tag = 6
        return btn
    }()
    
    //我的课程/所有课程下面的线
    lazy var teacourse_view :UIView = {
        let view = UIView()
        view.backgroundColor = UIColor.bg
        view.layer.cornerRadius = 3
        return view
    }()
    lazy var myline_view :UIView = {
        let view = UIView()
        view.backgroundColor = UIColor.bg
        view.layer.cornerRadius = 3
        return view
    }()
    lazy var allline_view :UIView = {
        let view = UIView()
        view.backgroundColor = UIColor.bg
        view.layer.cornerRadius = 3
        return view
    }()

    lazy var bgview2 :UIView = {
        let view = UIView()
        view.backgroundColor = UIColor.white
        return view
    }()
    

    //正在进行
    lazy var ongoing_btn: UIButton = {
        let btn = UIButton()
        btn.setTitle("正在进行 \u{e607}", for: .normal)
        btn.setTitleColor(UIColor.black, for: .normal)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 16)
        return btn
    }()
    //搜索框
    lazy var sreachBar :UISearchBar  = {
        let searech = UISearchBar()
        searech.tintColor = UIColor.bg
        // 去除背景及上下两条横线
        searech.setBackgroundImage(UIImage(), for: .any, barMetrics: .default)
        searech.placeholder = "搜索课程"
        return searech
    }()
    lazy var ipadht :Int = 0
    var page:Int = 0

}

