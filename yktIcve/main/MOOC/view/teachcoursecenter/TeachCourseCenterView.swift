//
//  TeachCourseCenterView.swift
//  云课堂2
//
//  Created by cc on 2018/6/12.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire

class TeachCourseCenterView: UIViewController {

    //隐藏状态栏
    override var prefersStatusBarHidden: Bool {
        return true
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        self.navigationController?.setNavigationBarHidden(true, animated: false)
    }
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        self.navigationController?.setNavigationBarHidden(false, animated:false)
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.colorWithHex(hexColor: 0xf2f2f2)
        self.headView()
        self.setSlideMenu()
        self.getData()
        let item = UIBarButtonItem(title: "返回", style: .plain, target: self, action: nil)
        self.navigationItem.backBarButtonItem = item
//         Do any additional setup after loading the view.
    }
    
    func headView(){
        self.view.addSubview(self.thumbnail)
        self.thumbnail.addSubview(self.btn_back)
        self.thumbnail.isUserInteractionEnabled = true
        self.thumbnail.snp.makeConstraints { (make) in
            make.width.equalTo(UIScreen.main.bounds.width)
            make.height.equalTo(190)
            make.top.left.equalTo(0)
        }
        self.btn_back.snp.makeConstraints { (make) in
            make.width.equalTo(40)
            make.height.equalTo(40)
            make.top.equalTo(20)
            make.left.equalTo(10)
        }
        self.btn_back.layer.masksToBounds = true
        self.btn_back.layer.cornerRadius = 20
        self.btn_back.addTarget(self, action: #selector(self.backBtnClick), for: .touchUpInside)
    }

    //返回
    @objc func backBtnClick() {
        self.navigationController?.popViewController(animated: true)
    }
    
    func setSlideMenu(){
        let titles = ["课件","公告","讨论区"]
        var arr:Array<UIViewController> = [];
        let vc3 = TeachDiscussView()
        let vc2 = courseNoticeView()
        vc1.courseOpenId = self.courseOpenId
        vc1.isMineClass = self.isMineClass
        vc2.courseOpenId = self.courseOpenId
        vc3.courseOpenId = self.courseOpenId
        vc1.MOOCCourseKJModel = self._MOOCCourseKJModel
        vc2.MOOCCourseKJModel = self._MOOCCourseKJModel
        vc3.MOOCCourseKJModel = self._MOOCCourseKJModel
        arr.append(vc1)
        arr.append(vc2)
        arr.append(vc3)
        
        slideMenu = SlideMenu(frame: CGRect(x:0,y:190,width:view.frame.width,height:40), titles:titles, childControllers:arr)
        slideMenu?.backgroundColor = UIColor.white
        slideMenu?.bodyFrame = CGRect.init(x: 0, y: 230, width: view.frame.width, height: view.frame.height - 230)
        slideMenu?.selectedColor = UIColor(red: 6/255, green: 163/255, blue: 121/255, alpha: 1);
        
        slideMenu?.isFixed = true;
        slideMenu?.indicatorStyle = .followText;
        slideMenu?.titleStyle = .transfrom;
        slideMenu?.line.isHidden = false;
        slideMenu?.scrollToIndex(0)
        view.addSubview(slideMenu!)
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    lazy var thumbnail : UIImageView = {
        let img = UIImageView()
        return img
    }()
    
    lazy var btn_back : UIButton = {
        let btn = UIButton()
        btn.setTitle("\u{e6f7}", for:.normal)
        btn.titleLabel?.font = UIFont.init(name: "iconfont", size: 13)
        btn.setTitleColor(UIColor.white, for:.normal)
        btn.backgroundColor = UIColor.init(red: 0, green: 0, blue: 0, alpha: 0.2)
        return btn
    }()
    var isTeacher:Bool = false
    var slideMenu:SlideMenu?
    var isPushed = false
    let vc1 = MOOCCourseWareView()
    lazy var courseOpenId : String = {return ""}()
    var moduleList = [JSON]()
    private lazy var _MOOCCourseKJModel: MOOCCourseKJModel = {
        let model = MOOCCourseKJModel()
        return model
    }()
    var isMineClass = false
}


extension TeachCourseCenterView {
    //获取数据
    func getData(){
        let dict = ["courseOpenId":self.courseOpenId,
                    "userId":Account.defaultAccount.id!] as [String : Any]
        XLBallLoading.show(in: self.view)
        Alamofire.request(MOOCAPI.coursedetail_getProcessList, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    common.share.setSDImg(str: json["courseCoverUrl"].stringValue, imgview: self.thumbnail)
                    self.moduleList = json["proces"]["moduleList"].arrayValue
                    self.vc1.sentionTitles = self.moduleList
                    self.vc1.isteacher = json["isTeacher"].boolValue
                }else{
                    ZKProgressHUD.showError(json["msg"].stringValue);
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }
}
