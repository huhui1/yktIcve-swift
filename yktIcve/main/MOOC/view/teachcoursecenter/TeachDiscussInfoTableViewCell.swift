//
//  TeachDiscussInfoTableViewCell.swift
//  云课堂2
//
//  Created by cc on 2018/6/13.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SwiftyJSON


@objc protocol TeachDiscussInfoTableViewCellDelegate:NSObjectProtocol  {
  
    func deleteDiscussTopic(_ btn:UIButton) -> ()
}

class TeachDiscussInfoTableViewCell: UITableViewCell {

    override func awakeFromNib() {
        super.awakeFromNib()
        // Initialization code
    }
    var delegate :TeachDiscussInfoTableViewCellDelegate!

    override func setSelected(_ selected: Bool, animated: Bool) {
        super.setSelected(selected, animated: animated)

        // Configure the view for the selected state
    }
    required init?(coder aDecoder:NSCoder) {
        super.init(coder: aDecoder)
    }
    override init(style:UITableViewCellStyle, reuseIdentifier:String?) {
        
        super.init(style: style, reuseIdentifier: reuseIdentifier);
        
        self.setUI();
        
    }
    
    func setUI(){
        self.addSubview(self.thumbnail)
        self.addSubview(self.lab_name)
        self.addSubview(self.lab_date)
        self.addSubview(self.lab_title)
        self.addSubview(self.lab_member)
        self.addSubview(self.btn_delete)
        self.thumbnail.snp.makeConstraints { (make) in
            make.width.height.equalTo(40)
            make.left.equalTo(10)
            make.top.equalTo(10)
        }
        self.thumbnail.layer.masksToBounds = true
        self.thumbnail.layer.cornerRadius = 20
        
        self.lab_name.snp.makeConstraints { (make) in
            make.width.equalTo(70)
            make.height.equalTo(20)
            make.left.equalTo(self.thumbnail.snp.right).offset(10)
            make.top.equalTo(10)
        }
        
        self.lab_date.snp.makeConstraints { (make) in
            make.width.equalTo(200)
            make.height.equalTo(20)
            make.left.equalTo(self.lab_name.snp.right).offset(10)
            make.top.equalTo(10)
        }
        self.lab_title.snp.makeConstraints { (make) in
            make.width.equalTo(width - 110)
            make.height.equalTo(40)
            make.left.equalTo(60)
//            make.bottom.equalTo(self.snp.bottom).offset(-10)
            make.top.equalTo(self.lab_name.snp.bottom).offset(5)
        }
        self.lab_member.snp.makeConstraints { (make) in
            make.width.equalTo(50)
            make.height.equalTo(20)
            make.right.equalTo(self.snp.right).offset(-5)
//            make.centerY.equalTo(self.lab_title.snp.centerY)
            make.bottom.equalTo(self.snp.bottom).offset(-5)
        }
        self.btn_delete.snp.makeConstraints { (make) in
            make.width.equalTo(50)
            make.height.equalTo(20)
            make.right.equalTo(self.snp.right).offset(-5)
            make.centerY.equalTo(self.lab_name.snp.centerY)
        }
        self.btn_delete.addTarget(self, action: #selector(self.deleteDiscuss(_:)), for: .touchUpInside)
    }
   
    @objc func deleteDiscuss(_ btn:UIButton){
        
        self.delegate?.deleteDiscussTopic(btn) 
    }
    
    func setInfo(Info:teachDiscussInfo){
        //判断html正则表达式
        let pattern = "[\\ud83c\\udc00-\\ud83c\\udfff]|[\\ud83d\\udc00-\\ud83d\\udfff]|[\\u2600-\\u27ff]|<p>|</p>|&nbsp;|</strong>|<br/>|<strong>|<span>|</span>"
        //替换后的字符串
        let str = Info.title.filterHTML()?.pregReplace(pattern: pattern, with: "")
        common.share.setSDImg(str: Info.thumbnail, imgview: self.thumbnail)
        lab_name.text = Info.displayName
        lab_date.text = Info.dateCreated
        lab_title.text = str
        lab_member.text = "\u{e707} \(Info.replyCount)"
        
    }
    
    let  width = UIScreen.main.bounds.width
    
    
    lazy var thumbnail : UIImageView = {
        let img = UIImageView()
        return img
    }()
    lazy var lab_name : UILabel = {
        let lab = UILabel()
        lab.font = UIFont.italicSystemFont(ofSize: 16)
        lab.textColor = UIColor.bg
        lab.backgroundColor = UIColor.white
        return lab
    }()
    lazy var lab_date : UILabel = {
        let lab = UILabel()
        lab.font = UIFont.italicSystemFont(ofSize: 12)
        lab.textColor = UIColor.gray
        lab.backgroundColor = UIColor.white
        return lab
    }()
    lazy var lab_title : UILabel = {
        let lab = UILabel()
        lab.font = UIFont.italicSystemFont(ofSize: 14)
        lab.textColor = UIColor.black
        lab.backgroundColor = UIColor.white
        lab.numberOfLines = 2
        return lab
    }()
    lazy var lab_member : UILabel = {
        let lab = UILabel()
        lab.font = UIFont.init(name: "iconfont", size: 12)
        lab.textColor = UIColor.gray
        lab.backgroundColor = UIColor.white
        lab.textAlignment = .center
        return lab
    }()
    lazy var btn_delete : UIButton = {
        let btn = UIButton()
        btn.setTitle("删除", for: .normal)
        btn.setTitleColor(UIColor.bg, for: .normal)
        btn.titleLabel?.font = UIFont.italicSystemFont(ofSize: 12)
        btn.titleLabel?.textAlignment = .center
        return btn
    }()
}
