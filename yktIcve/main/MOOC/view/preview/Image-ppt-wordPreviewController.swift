//
//  courseKJController.swift
//  云课堂2
//  课件下PPT，文档
//  Created by 志辉教育 on 2018/6/4.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire
extension  ImagePreviewVC{
    func getviewDirectory(isRefresh:Bool){
        let dict = ["courseOpenId":self.courseOpenId,
                    "cellId":self.docId,
                    "userId":Account.defaultAccount.id!] as [String : Any]
        XLBallLoading.show(in: self.view)
        Alamofire.request(MOOCAPI.Mooc_coursestudy_viewDirectory, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                XLBallLoading.hide(in: self.view)
                if json["code"] == 1{
                    self.pptviewDirectoryurl = json["resourceUrl"].stringValue
                    self.getpage_count(jsonlist:json)
                }else{
                    //ZKProgressHUD.showError(json["msg"].stringValue);
                }
            }else{
                XLBallLoading.hide(in: self.view)
                ZKProgressHUD.showMessage("网络环境异常请稍后再试！")
            }
        }
    }

    
    //请求page_count
    func getpage_count(jsonlist:JSON){
        let str = JSON.init(parseJSON: jsonlist["resUrl"].stringValue)
        let strurl = str["urls"]["status"].stringValue
        XLBallLoading.show(in: self.view)
        Alamofire.request("\(strurl)", method: .post, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                XLBallLoading.hide(in: self.view)
                if json["status"] == 2{
                    self.images = []
                    self.pagecount = Int(json["args"]["page_count"].stringValue)!
                    self.pageControl.numberOfPages = self.pagecount
                    if self.pagecount == 0{
                        self.pagecount = 1
                    }
                    if str["urls"]["preview_oss_gen"].stringValue.isEmpty{
                        for i in 1...self.pagecount{
                            let str = str["urls"]["preview"].stringValue
                            let imgUrl = str.replacingOccurrences(of: "?", with: "/\(i).preview.jpg?")
                            self.images.append(imgUrl)
                        }
                    }else{
                       
                        for i in 1...self.pagecount{
                            let imgUrl = "\(str["urls"]["preview_oss_gen"].stringValue)/\(i).png"
                            self.images.append(imgUrl)
                        }
                    }
                    
                    
                    self.collectionView.reloadData()
                    //记录日志
                    self.savestudentlog()
            }else{
                XLBallLoading.hide(in: self.view)
                ZKProgressHUD.showMessage("网络环境异常请稍后再试！")
            }
         }
        
        XLBallLoading.hide(in: self.view)
        
      }
        
   }
  //记录PPT日志
   func savestudentlog(){
        let dict = ["courseOpenId":self.courseOpenId,
                    "cellId":self.docId,
                    "auvideoLength":"0",
                    "videoTimeTotalLong":"0",
                    "userId":Account.defaultAccount.id!] as [String : Any]
        Alamofire.request(MOOCAPI.coursestudy_statStuProcessCellLogAndTimeLong, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    if json["isStudy"].boolValue{
                        //已学习
                        self.MOOCCourseKJModel?.cellRefresh = "cellRefresh"
                    }
                }else{
                    //ZKProgressHUD.showError(json["msg"].stringValue);
                }
            }else{
                ZKProgressHUD.showMessage("网络环境异常请稍后再试！")
            }
        }
    }
   //是否继续
   func iscontinue(){
        let alertController = UIAlertController(title: "温馨提示！",
                                                message: "是否继续上次的浏览",
                                                preferredStyle: .alert)
        let cancelAction = UIAlertAction(title: "取消", style: .cancel, handler: {
            action in
            //当前显示的单元格
            self.leavepage = 0
            self.isfirst = true
            self.collectionView.reloadData()
        })
        let okAction = UIAlertAction(title: "好的", style: .default, handler: {
            action in
            self.pageControl.currentPage = self.leavepage
        })
        alertController.addAction(cancelAction)
        alertController.addAction(okAction)
    
        self.present(alertController, animated: true, completion: nil)
    }
    

}

    
    
    
    




