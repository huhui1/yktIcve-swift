//
//  PPT-Animation-PreviewController.swift
//  云课堂2
//
//  Created by cc on 2018/6/7.
//  Copyright © 2018年 zqyou. All rights reserved.
//

import UIKit
import SwiftyJSON
import Alamofire
import SCLAlertView

extension PPT_Animation_PreviewView{
    //mooc PPT
    func getviewDirectory(){
        let dict = ["courseOpenId":"v3ifajuo745g4olzq1ixww",
                    "cellId":"cjefajuoqilaocb5pcdgtq",
                    "userId":"fwonav2ni7zexp7iavcvqq_66036"] as [String : Any]
        XLBallLoading.show(in: self.view)
        Alamofire.request(MOOCAPI.Mooc_coursestudy_viewDirectory, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                     self.resUrl = json["resUrl"].stringValue
                     let json = JSON.init(parseJSON: self.resUrl)
                     if(json["urls"]["preview_oss_gen"].stringValue.isEmpty){
                        let str = json["urls"]["status"].stringValue
                        self.linkStr = str.replacingOccurrences(of: "/status", with: "/html/html.html")
                     }else{
                        self.linkStr = "\(json["urls"]["preview_oss_gen"].stringValue)/html/html.html"
                     }
                }else{
                    ZKProgressHUD.showMessage("网络环境异常请稍后再试！")
                }
                XLBallLoading.hide(in: self.view)
            }else{
                XLBallLoading.hide(in: self.view)
                ZKProgressHUD.showMessage("网络环境异常请稍后再试！")
            }
        }
    }
    //下一页
    @objc func nextt(){
        
        self.leavepage = leavepage + 1
        self.picNum = self.picNum > self.leavepage ? self.picNum : self.leavepage
        print(picNum)
        self.webView.evaluateJavaScript("Presentation.Next();",
                                        completionHandler: nil)
        
    }
    //上一页
    @objc func pree(){
        if leavepage <= 1{
            return
        }
        print(picNum)
        self.leavepage = leavepage - 1
        self.webView.evaluateJavaScript("Presentation.Prev();",
                                        completionHandler: nil)
    }
    //保存学习日志
    func savePlayLog(){

        
        let dict = ["openClassId":self.openClassId,
                    "courseOpenId":self.courseOpenId,
                    "cellId":self.cellId,
                    "cellLogId":self.cellLogId,
                    "sourceType":3,
                    "studyCellTime":self.studyCellTime,
                    "picNum": self.picNum + 1,
                    "studyNewlyTime":0,
                    "studyNewlyPicNum":self.leavepage + 1,
                    "token":self.token] as [String : Any];
        XLBallLoading.show(in: self.view)
        Alamofire.request(appAPI.Student_stuProcessCellLog, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            
            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    //已学习
                    self.StuCourseKJModel?.zjycellRefresh = "zjycellRefresh"
                }
                XLBallLoading.hide(in: self.view)
            }else{
                ZKProgressHUD.showError("网络环境异常请稍后再试！");
                XLBallLoading.hide(in: self.view)
            }
        }
    }
    //讨论区
    @objc func Discuss(){
        self.webView.isHidden = true
        self.view.backgroundColor = UIColor.white;
        let value = UIInterfaceOrientation.portrait.rawValue
        appDelegate.isEffective = true
        appDelegate.allowRotation = true
        UIDevice.current.setValue(value, forKey: "orientation")
        let vc = courseBBSListView()
        vc.courseOpenId = self.courseOpenId
        vc.openClassId = self.openClassId
        vc.activeType = 1
        vc.docId = self.cellId
        vc.isStu = isStu
        self.isPushed = true
        self.navigationController?.pushViewController(vc, animated: true)
    }
    //下载
    @objc func DownloadKJ(){
        if(self.isAllowDownLoad == "false"){
            ZKProgressHUD.showMessage("该课件不允许下载！") ;
            return
        }
        if(self.resourcesUrl["urls"]["download"].stringValue.isEmpty){
            SCLAlertView().showInfo("温馨提示！", subTitle: "该文件已破损，暂不支持下载",closeButtonTitle: "确定")
        }else{
            self.cache()
        }
    }
    //下载
    func cache(){
        
        let cx = SQLiteManagerCache()
        let path = cx.readOneData(_userId: Account.defaultAccount.id!, docId: self.cellId)
        if(path.docPath.isEmpty){
            self.webView.isHidden = true
            self.view.backgroundColor = UIColor.white;
            let value = UIInterfaceOrientation.portrait.rawValue
            appDelegate.isEffective = true
            appDelegate.allowRotation = true
            UIDevice.current.setValue(value, forKey: "orientation")
            let vc = cacheViewController();
            vc.docId = self.cellId;
            vc.docUrl = self.resourcesUrl["urls"]["download"].stringValue
            vc.docType = self.type.index(of:self.doctype)!
            vc.docTitle = title!
            vc.isStart = true;
            self.isPushed = true
            vc.courseOpenId = self.courseOpenId
            vc.openClassId = self.openClassId
            vc.moduleId = self.moduleId
            vc.isStu = true
            if(self.resourcesUrl["urls"]["download"].stringValue.isEmpty){
                SCLAlertView().showInfo("温馨提示！", subTitle: "该文件已破损，暂不支持下载",closeButtonTitle: "确定")
            }else{
                self.navigationController?.pushViewController(vc, animated: true);
            }
        }else{
            print("===")
//            switch path.docType {
//            case 3:
//                let vc = cachePreviewImgView()
//                let fullPath = "\(NSHomeDirectory())/Documents/\(path.docPath)"
//                vc.file =  fullPath
//
//                self.navigationController?.pushViewController(vc, animated: true)
//            case 4,5:
//                self.openOffice(path: path);
//            default:
//                print("asxa")
//
//            }
            ZKProgressHUD.showMessage("该课件已经下载")
        }
    }
    func openOffice(path:CacheDocModel){
        let sandboxFilePath = "\(NSHomeDirectory())/Documents/\(path.docPath)"
        let docUrl = URL(fileURLWithPath: sandboxFilePath);
        documentController = UIDocumentInteractionController(url:docUrl)
        documentController.delegate = self;
        //当前APP打开  需实现协议方法才可以完成预览功能
        documentController.presentPreview(animated: true);
        
    }
    func documentInteractionControllerViewControllerForPreview(_ controller: UIDocumentInteractionController) -> UIViewController
    {
        
        //这个地方需要返回给一个控制器用于展现documentController在其上面，所以我们就返回当前控制器self
        
        return self
    }
}
