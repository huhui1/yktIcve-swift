/**
 * 附件资源预览 - 文档
 * @param {Object} $M => mui
 * @param {Object} $  => quo
 * @name  M.J
 * @date  2015-09-23
 * @return {Object}
 */
(function($M, $) {

    $M.init({
        swipeBack: false,
        beforeback: function() {
            var close = function() {
                setTimeout(function() {
                    preview.webView.close('none');
                }, 200);
            };

            plus.navigator.setFullscreen(false);
            plus.screen.lockOrientation('portrait-primary');

            close();
            return false;
        }
    });

    var preview = {
        /**
         * 更新学习长度
         * @return {this}
         */
        update: function() {
            var _this = this,
                $user = JSON.parse(app.data.get('$cloudClassUser'));

            $http.post(app.studentAPI.Student.savePlayLog, {
                courseOpenId: _this.courseOpenId,
                openClassId: _this.openClassId,
                cellId: _this.cellId,
                stuId: $user.id,
                sourceType: $user.sourceType,
                videoLength: 10
            }, function(data) {
                if (data.code > 0) {
                    // var view = plus.webview.getWebviewById('student-article');
                    // view && $M.fire(view, 'updateStatus');
                }
            });

            return this;
        },
        /**
         * 载入附件资源
         * @param {data} 附件信息
         * @return {this}
         */
        load: function(data) {
            var _this = this,
                title = _this.title,
                url = data.preview,
                hasZip = data.hasZip,
                ext = _this.extension,
                word = ['doc', 'docx', 'txt', 'pdf'],
                ppt = ['ppt', 'pptx'];

            // 判断 SWF 文件
            if (ext === 'swf') {
                plus.screen.lockOrientation('portrait-primary');
                setTimeout(function() {
                    plus.nativeUI.toast('当前资源文件无法在手机上预览，请前往电脑端查看', { duration: 'long' });
                    _this.webView.close('none');
                }, 300);
                return this;
            }

            if (!data || !url) {
                this.close();
                return this;
            }

            // 判断是否是单张图片
            if (_this.category != "img" && _this.args && _this.args.page_count > 0) {

                var imgs = [];

                var mineList = plus.webview.getWebviewById('mine-list');
                plus.screen.lockOrientation('landscape-secondary');

                // PPT 模式
                if (ppt.indexOf(ext) > -1 && _this.isH5 == 1 && _this.h5PreviewUrl) {
                    setTimeout(function() {
                        _this.markTPL(_this.h5PreviewUrl);
                        _this.markEvent();
                    }, 800);
                } else {
                    // //拼接图片的地址
                    var statusUrl = data.status,
                        preview_oss_gen = data.preview_oss_gen;
                    //拼接图片的地址
                    if (preview_oss_gen) {
                        for (var i = 0; i < _this.args.page_count; i++) {
                            imgs.push(preview_oss_gen + "/" + (i + 1) + '.png');
                        }
                    } else {
                        for (var i = 0; i < _this.args.page_countt; i++) {
                            imgs.push(statusUrl.replace('/status', '/' + (i + 1) + '.preview.jpg'));
                        }
                    }
                    // 初始化组件
                    setTimeout(function() {
                        _this.MP = MPreview({
                            data: imgs,
                            wrap: '#overlay',
                            title: '',
                            category: _this.category,
                            direction: word.indexOf(ext) > -1 ? 'top' : 'left',
                            placeholder: plus.io.convertLocalFileSystemURL('/img/placeholder.gif'),
                            close: function() {
                                $M.back();
                                return false;
                            },
                            page: function(page) {
                                _this.historyPage = page;
                            }
                        });

                        // 翻页事件
                        _this.picker();


                    }, 800);
                }
            } else {
                // 设置屏幕为横屏
                var mineList = plus.webview.getWebviewById('mine-list');
                plus.screen.lockOrientation('landscape-secondary');

                // 初始化组件  PPT
                if (ppt.indexOf(ext) > -1 && hasZip) {
                    setTimeout(function() {
                        _this.markTPL(data.status);
                        _this.markEvent();
                    }, 800);
                } else {
                    setTimeout(function() {
                        _this.MP = MPreview({
                            data: data.preview_oss_ori ? [data.preview_oss_ori] : [data.preview],
                            wrap: '#overlay',
                            title: '',
                            category: _this.category,
                            direction: word.indexOf(ext) > -1 ? 'top' : 'left',
                            placeholder: plus.io.convertLocalFileSystemURL('/img/placeholder.gif'),
                            close: function() {
                                $M.back();
                                return false;
                            },
                            page: function(page) {
                                _this.historyPage = page;
                            }
                        });

                        // 翻页事件
                        _this.picker();


                    }, 800);
                }

                return this;
            }

            return this;
        },

        /**
         * 关闭当前窗口
         * @return {this}
         */
        close: function() {
            var _this = this;

            plus.screen.lockOrientation('portrait-primary');
            setTimeout(function() {
                plus.nativeUI.toast('您当前所查看的资源文件不存在');
                _this.webView.close('none');
            }, 300);

            return this;
        },

        /**
         * 绑定课堂互动
         * @return {this}
         */
        events: function() {
            var _this = this;

            var view = plus.webview.currentWebview();
            view.setStyle({ 'popGesture': 'none' });

            //查看讨论
            $('#overlay').on('touch', '.ui-MPreview-discuss', function() {
                return;
            });

            // 缩放 缩小结束
            $('#overlay').on('pinchIn', '.ui-MPreview-view', function(e) {
                if (!$('#overlay .ui-MPreview-iframe').length) return;

                var $div = $('#overlay .ui-MPreview-iframe');

                e.preventDefault();

                if (_this.isScroll) return;

                _this.zoomRecord = _this.zoomRecordTemp;
                _this.isScaling = false;
            });

            // 缩放中
            $('#overlay').on('pinching', '.ui-MPreview-view', function(e) {
                if (!$('#overlay .ui-MPreview-iframe').length) return;

                e.preventDefault();
                if (_this.isScroll) return;

                _this.zoomInertia(e);
            });

            //缩放放大结束
            $('#overlay').on('pinchOut', '.ui-MPreview-view', function(e) {
                if (!$('#overlay .ui-MPreview-iframe').length) return;

                var $div = $('#overlay .ui-MPreview-iframe');

                e.preventDefault();

                if (_this.isScroll) return;

                _this.zoomRecord = _this.zoomRecordTemp;
                _this.isScaling = false;
            });

            return this;
        },

        /**
         * 缩放图片
         * @return {this}
         */
        zoomInertia: function(e) {
            e.preventDefault();

            var _this = this,
                scale, nScale,
                left = 0, //图片的距离顶部的位置
                top = 0,
                scaleTopY = 0,
                scaleLeftX = 0, //图片距离左边缘的位置
                pointX, pointY, nPointX, nPointY, nMiddlePoint, middlePoint,
                isMove = false, //是否为平移图片
                $div = $('#overlay .ui-MPreview-iframe'),
                canvas = $div.prev().find('canvas')[0],
                mark = _this.MARK;

            if (!_this.isScaling) {
                _this.isScaling = true;

                //缩放之前的图片的left 与 top 值
                _this.scalingLeft = parseInt($div.css('left'), 10);
                _this.scalingTop = parseInt($div.css('top'), 10);

                //图片缩放的起始位置
                _this.startPoints = e.touch.touches;
            }

            //获取两点之间的位置
            var getPointsDistance = function(point1, point2) {
                var x = point1.x - point2.x;
                var y = point1.y - point2.y;

                return Math.sqrt(x * x + y * y);
            };

            //缩放的起始位置的以及中点
            pointX = (this.startPoints[0].x + this.startPoints[1].x) / 2;
            pointY = (this.startPoints[0].y + this.startPoints[1].y) / 2;
            middlePoint = { x: pointX, y: pointY };

            //缩放后的位置以及中点
            nPointX = (e.touch.touches[0].x + e.touch.touches[1].x) / 2;
            nPointY = (e.touch.touches[0].y + e.touch.touches[1].y) / 2;
            nMiddlePoint = { x: nPointX, y: nPointY };

            var d1 = getPointsDistance(this.startPoints[0], this.startPoints[1]);
            var d2 = getPointsDistance(e.touch.touches[0], e.touch.touches[1]);

            if (d1 + 3 > d2 && d1 - 3 < d2) {
                scale = 1;
                isMove = true
            } else {
                scale = d2 / d1;
            }

            //放大后的倍数
            nScale = this.zoomRecord * scale;

            if (nScale > 1) {
                //偏移位置的计算
                var left = pointX * (1 - scale) + (nPointX - pointX);
                var top = pointY * (1 - scale) + (nPointY - pointY);

                scaleLeftX = this.scalingLeft * scale + left;
                scaleTopY = this.scalingTop * scale + top;
            } else {
                nScale = 1;
                this.zoomRecord = 1;
                scaleLeftX = 0;
                scaleTopY = 0;
            }

            //记录放大后的总的倍数
            this.zoomRecordTemp = nScale;

            $div.vendor('transition', '-webkit-transform 0ms ease 0s');
            $div.vendor('transform-origin', 'left top');
            $div.vendor('transform', 'scale(' + nScale + ')');

            $div.vendor('left', scaleLeftX + 'px');
            $div.vendor('top', scaleTopY + 'px');

            return this;
        },

        /**
         * 格式化数字
         * @param {Object} val
         */
        formatPage: function(val) {
            if (!val) {
                return val;
            }
            return val.toString().length < 2 ? '0' + val : val;
        },

        /**
         * 标记画板模板
         * @return {this}
         */
        markTPL: function(url) {
            if (!url) {
                this.close();
            }

            var _this = this,
                interVal = null,
                src = url,
                temp = src.match(/.@{1}\w+/),
                id = (temp == null ? '' : temp.length && temp[0]);

            // 创建下载完成后  载入 iframe
            var done = function(iframeSrc, val) {
                plus.nativeUI.closeWaiting();

                var wait = plus.nativeUI.showWaiting('加载中...'),
                    iframe = document.createElement('iframe');

                iframe.id = 'iframe';
                iframe.width = window.innerWidth;
                iframe.height = window.innerHeight - 40;
                iframe.src = val ? plus.io.convertLocalFileSystemURL(iframeSrc + '/html/html.html') : iframeSrc;
                iframe.style.display = 'none';
                iframe.style.cssText = 'overflow: hidden; width: ' + window.innerWidth + 'px; height: ' + (window.innerHeight - 40) + 'px; border: 0;';

                iframe.addEventListener('load', function() {
                    _this.iframeDocument = iframe.contentDocument;
                    _this.iframeWindow = iframe.contentWindow;

                    var callback = function() {
                        var action = function() {
                            // 设置页数
                            var options = '',
                                temp = '<option value="{{val}}">{{val}}</option>';
                            for (var i = 0; i < _this.TotalSlides; i++) {
                                options += temp.replace(/{{val}}/g, _this.formatPage(i + 1));
                            }

                            $('.ui-MPreview-currentPage').html(options);
                            $('.ui-MPreview-countPage').text(_this.formatPage(_this.TotalSlides));
                        };

                        _this.TotalSlides = _this.iframeWindow.presSettings.TotalSlides;
                        _this.CurrentSlide = _this.iframeWindow.presSettings.CurrentSlide;

                        action();

                        // 翻页事件
                        _this.picker();

                        plus.nativeUI.closeWaiting();
                        iframe.style.display = 'block';
                        $('.ui-MPreview-loading').addClass('ui-MPreview-hide');


                    };

                    // 修正 IOS 下 iframe 内宽高问题;
                    if ($M.os.ios) {
                        _this.iframeWindow.innerWidth = window.innerWidth;
                        _this.iframeWindow.innerHeight = window.innerHeight - 40;
                    }

                    interVal = setInterval(function() {
                        if (_this.iframeWindow.presSettings.TotalSlides) {
                            callback();
                            clearInterval(interVal);
                        }
                    }, 50);

                }, false);
                $('#ui-MPreview-iframe').append(iframe);
            };

            // append 容器
            $('#overlay').html($('#ppt-html-tpl').html());

            done(src, false);
            return this;
        },

        /**
         * 选择器
         * @return {this}
         */
        picker: function() {
            var _this = this,
                $picker = $('.ui-MPreview-currentPage');

            // 获取焦点
            $('.ui-MPreview-pages').on('tap', function() {
                $picker.focus();
            });

            $picker.on('change', function() {
                var value = Number($picker[0].value);

                // 跳转
                if (!_this.MP) {
                    var presentation = _this.iframeWindow.Presentation,
                        presSettings = _this.iframeWindow.presSettings,
                        getCurAnimateIndex = _this.iframeWindow.getCurAnimateIndex,
                        animateIndex;

                    // 跳转
                    presentation.GotoSlide(value);
                    animateIndex = getCurAnimateIndex(presSettings.CurrentSlide);
                    _this.CurrentSlide = presSettings.CurrentSlide;
                    _this.historyPage = presSettings.CurrentSlide;

                    $('#cancel')[_this.MARK.historyStroker.length ? 'removeClass' : 'addClass']('disabled');
                    _this.CurrentSlide = presSettings.CurrentSlide;

                } else {
                    _this.MP.go(value);
                }

                _this.historyPage = value;
            });

            return this;
        },

        /**
         * 画板标记事件
         * @return {this}
         */
        markEvent: function() {
            var _this = this;

            //查看讨论
            $('.ui-MPreview-discuss').on('touchend', function() {
                setTimeout(function() {
                    plus.nativeUI.closeWaiting();
                    $M.openWindow({
                        url: '/view/student/bbs/bbslist.html',
                        id: 'student-bbslist',
                        extras: {
                            cellId: _this.cellId,
                            courseOpenId: _this.courseOpenId,
                            title: _this.title,
                            type: 'doc'
                        }
                    });
                }, 0);
            });

            // 关闭
            $('.ui-MPreview-back').on('touchend', function() {
                $M.back();
            });

            //上一页
            $('.ui-MPreview-arrowLeft').on('touchend', function() {
                var $ele = $(this);
                $ele.removeClass('ui-MPreview-static').addClass('ui-MPreview-touched');

                setTimeout(function() {
                    var presentation = _this.iframeWindow.Presentation,
                        presSettings = _this.iframeWindow.presSettings,
                        getCurAnimateIndex = _this.iframeWindow.getCurAnimateIndex,
                        index, animateIndex;

                    if (!presentation || !presSettings) return;

                    animateIndex = getCurAnimateIndex(presSettings.CurrentSlide);

                    // 操作
                    presentation.Prev();

                    // 判断上一页操作
                    if (_this.CurrentSlide !== presSettings.CurrentSlide) {
                        _this.historyPage = presSettings.CurrentSlide;
                        $('.ui-MPreview-currentPage')[0].value = _this.formatPage(presSettings.CurrentSlide);

                        index = _this.CurrentSlide;

                        $('#cancel')[_this.MARK.historyStroker.length ? 'removeClass' : 'addClass']('disabled');
                        _this.CurrentSlide = presSettings.CurrentSlide;
                    }
                    $ele.removeClass('ui-MPreview-touched').addClass('ui-MPreview-static');
                }, 100);
            });

            //下一页
            $('.ui-MPreview-arrowRight').on('touchend', function() {
                var $ele = $(this);
                $ele.removeClass('ui-MPreview-static').addClass('ui-MPreview-touched');

                setTimeout(function() {
                    var presentation = _this.iframeWindow.Presentation,
                        presSettings = _this.iframeWindow.presSettings,
                        getCurAnimateIndex = _this.iframeWindow.getCurAnimateIndex,
                        index, animateIndex;

                    if (!presentation || !presSettings) return;

                    animateIndex = getCurAnimateIndex(presSettings.CurrentSlide);

                    // 操作
                    presentation.Next();

                    // 判断下一页操作
                    if (_this.CurrentSlide !== presSettings.CurrentSlide) {
                        _this.historyPage = presSettings.CurrentSlide;
                        $('.ui-MPreview-currentPage')[0].value = _this.formatPage(presSettings.CurrentSlide);

                        index = _this.CurrentSlide;

                        $('#cancel')[_this.MARK.historyStroker.length ? 'removeClass' : 'addClass']('disabled');
                        _this.CurrentSlide = presSettings.CurrentSlide;
                    }

                    $ele.removeClass('ui-MPreview-touched').addClass('ui-MPreview-static');
                }, 100);
            });

            // 触发下一页事件
            (function() {
                var startTx, startTy;

                $('#ppt-canvas').on('touchstart', function(e) {
                    var touches = e.touches[0];
                    startTx = touches.clientX;
                    startTy = touches.clientY;
                });

                $('#ppt-canvas').on('touchend', function(e) {
                    var touches = e.changedTouches[0],
                        endTx = touches.clientX,
                        endTy = touches.clientY;

                    if (Math.abs(startTx - endTx) < 6 && Math.abs(startTy - endTy) < 6) {
                        $('.ui-MPreview-arrowRight').trigger('touchend');
                    }
                });

            }());

            return this;
        },


        /**
         * 载入
         * @return {null}
         */
        init: function() {
            var _this = this,
                view = plus.webview.currentWebview();

            this.MineView = plus.webview.getWebviewById('mine-list');
            this.cellId = view.cellId;
            this.moduleId = view.moduleId;
            this.webView = view;
            this.historyPage = 1;
            this.HistoryList = null;
            this.next = 0;
            this.docid = view.docid;
            this.openClassId = view.openClassId || '';
            this.courseOpenId = view.courseOpenId;
            this.title = view.title;
            this.resourceurl = view.resourceurl;
            this.args = view.args;
            this.isH5 = view.isH5;
            this.h5PreviewUrl = view.h5PreviewUrl;
            this.extension = view.extension;
            this.resourceType = view.type || ''; //标识是否是全路径预览
            this.url = view.url || ''; //图片的地址

            this.category = view.category; // 为discuss_storm表示为讨论或者头脑风暴的图片预览

            this.isScaling = false; //标识是否已开始缩放
            this.scalingLeft = 0; //标识上次缩放时div的left属性值
            this.scalingTop = 0; //标识上次缩放时div的top属性值
            this.startPoints = {}; // 图片缩放的起始位置
            this.zoomRecord = 1; //图片的放大倍数
            this.zoomRecordTemp = 1; //一次缩放的倍数

            if (this.category == 'discuss_storm') $('.ui-MPreview-discuss').addClass('mui-hidden');

            //PPT的全屏播放
            plus.navigator.setFullscreen(true);

            if (plus.networkinfo.getCurrentType() < 2) {
                $('.mui-inner-wrap').prepend('<header class="mui-bar mui-bar-nav" style="background: #333;"><a class="mui-icon iconfont icon-arrow-left mui-pull-left mui-action-back"></a><h1 class="mui-title">Loading...</h1></header>');
                $('body').append(app.tpl.notNetwork);
                return this;
            }

            _this.load(this.resourceurl).events();

        }
    };

    $M.plusReady(function() {
        preview.init();
    });

}(mui, $$));