/**
 *测验ing
 * @param {Object} $M => mui
 * @param {Object} $  => zepto
 * @name  zqyou
 * @date  2017-07-1
 * @return {Object}
 */
(function($M, $) {

    var examhandle = {
        /**
         * 获取题目
         * @return {this}
         */
        get: function(r, userid, schoolid, openClassId, examId, activityId) {
            var _this = this;
            _this.userId = userid;
            _this.schoolId = schoolid;
            _this.openClassId = openClassId;
            _this.examId = examId;
            _this.activityId = activityId;
            if (r.code > 0) {
                _this.classTestStuId = r.classTestStuId;
                _this.momentList = [];
                var numtostr = ["一", "二", "三", "四", "五", "六", "七", "八", "九", "十"];

                $.each(r.stuQuesList, function(i, v) {
                    if (v.questionType == 3) {
                        v.dataJson = [{ "SortOrder": "错误", "Content": "错误", "IsAnswer": "" }, { "SortOrder": "正确", "Content": "正确", "IsAnswer": "" }];
                    }
                    _this.momentList.push({
                        id: v.questionId,
                        fullScore: v.questionScore,
                        title: v.questionTitle,
                        content: v.dataJson,
                        type: v.questionType,
                        userAnswer: v.stuAnswer == "-1" ? "" : v.stuAnswer
                    });
                    _this.handleQuestinData.push({
                        QuestionId: v.questionId,
                        TotalScore: v.questionScore,
                        Answer: v.stuAnswer == "-1" ? "" : v.stuAnswer,
                        stuQuestionId: v.testStuQuesId,
                        Score: v.Score
                    });
                });

                $("#nowindex").text(_this.index);
                $("#total").text(_this.momentList.length);
                $('#questioninfo').html(template('question-danx-duox-pand', { question: _this.momentList[_this.start], index: _this.index }));
                if (_this.momentList.length == 1) {
                    $('#down-question').addClass('save').text("提交");
                };
            } else {
                var message = { "method": "showMsg", "msg": "网络异常" };
                window.webkit.messageHandlers.interOp.postMessage(message);

            }
            $('#mask').addClass('hide');

            return this;
        },
        /**
         * 提交试卷
         * @param {data}  所选题目的答案
         * @param {time}  所答题的时间
         * @return {this}
         */
        submitAll: function() {
            var _this = this;
            var handleQuestion = [];
            $.each(_this.handleQuestinData, function(i, v) {
                if (v.Answer == "") {
                    handleQuestion.push(i + 1);
                }
            });
            if (handleQuestion.length > 0) {
                var message = { "method": "submitAll", "isAllHandle": handleQuestion.join() };
                window.webkit.messageHandlers.interOp.postMessage(message);
            } else {
                var message = { "method": "submitAll", "isAllHandle": "1" };
                window.webkit.messageHandlers.interOp.postMessage(message);
            }
            return this;
        },
        firePush: function() {
            var _this = this,
                $user = JSON.parse(app.data.get('$cloudClassUser'));
            var datajson = {
                actionType: "tested",
                actId: _this.examId,
                userId: $user.id,
                displayName: $user.displayName
            };
            var data = JSON.stringify(datajson);
            $http.post(app.teacherAPI.GT.sendGTMsgToUser, { data: data, userId: _this.creatorId }, function(r) {
                if (r.code < 0) {
                    //plus.nativeUI.toast('网络异常');
                }
            });
            return this;
        },
        /**单题提交 */
        submit: function() {
            var _this = this,
                index = '',
                fullScore = _this.momentList[_this.start].fullScore,
                questionId = _this.handleQuestinData[_this.start].QuestionId,
                stuQuestionId = _this.handleQuestinData[_this.start].stuQuestionId,
                answer = _this.momentList[_this.start].userAnswer;
            if ($.isArray(answer)) {
                index = answer.join();
            } else {
                index = answer;
            }
            if (index == _this.handleQuestinData[_this.start].Answer) {
                if (_this.index == _this.momentList.length) {
                    _this.submitAll();
                }
                return;
            }
            var callback = function() {

                $.each(_this.handleQuestinData, function(i, v) {
                    if (v.QuestionId == questionId) {
                        _this.handleQuestinData[i].Answer = index;
                    }
                });
                if (_this.index == _this.momentList.length) {
                    _this.submitAll();
                }
            };

            // 发送数据
            $http.post(app.teacherAPI.FaceTeach.updateTestStuQues, {
                openClassId: _this.openClassId,
                classTestId: _this.examId,
                classTestStuId: _this.classTestStuId,
                questionId: questionId,
                testStuQuesId: stuQuestionId,
                stuId: _this.userId,
                sourceType: 3,
                stuAnswer: index
            }, function(r) {
                if (r.code > 0) {
                    callback();
                } else {
                    _this.momentList[_this.start].userAnswer = "";

                }
            }, function() {
                _this.momentList[_this.start].userAnswer = "";
            });

            return false;
        },
        /**
         * return this
         * 上一题
         */
        prev: function() {
            if (examhandle.start == 0) {
                var message = { "method": "showMsg", "msg": "已经是第一题" };
                window.webkit.messageHandlers.interOp.postMessage(message);
                return;
            }
            examhandle.start -= 1.0;
            examhandle.index -= 1.0;
            $("#nowindex").text(examhandle.index);
            $('#questioninfo').html(template('question-danx-duox-pand', {
                question: examhandle.momentList[examhandle.start],
                index: (examhandle.index)
            }));

            $('#down-question').removeClass('save').text('下一题');
            examhandle.$scroll.scrollTo(0, 0);

        },
        /**
         * return this
         * 下一题
         */
        next: function() {
            examhandle.submit();
            examhandle.start += 1.0;
            examhandle.index += 1.0;
            if (examhandle.index > examhandle.momentList.length) {
                var message = { "method": "showMsg", "msg": "已经是最后一题" };
                window.webkit.messageHandlers.interOp.postMessage(message);
                examhandle.start = examhandle.momentList.length - 1;
                examhandle.index = examhandle.momentList.length;
                return;
            }
            if (examhandle.index == examhandle.momentList.length) {
                $('#down-question').addClass('save').text('提交');
            }
            $("#nowindex").text(examhandle.index);
            $('#questioninfo').html(template('question-danx-duox-pand', {
                question: examhandle.momentList[examhandle.start],
                index: (examhandle.index)
            }));
            examhandle.$scroll.scrollTo(0, 0);

        },
        /**
         * 事件绑定
         * @return {this}
         */
        events: function() {
            var _this = this,
                DOM = $('#questioninfo');

            _this.$scroll = $M('.mui-scroll-wrapper').scroll();
            $("body").swipeRight(_this.prev);
            $("body").swipeLeft(_this.next);

            DOM.on('singleTap', 'img', function(e) {
                var $elem = $(this);
                if ($(e.target).attr('src')) {
                    isPushed = true;
                    var message = { "method": "previewIMG", "url": $(e.target).attr('src') };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                }
            });
            DOM.on('singleTap', 'a', function(e) {
                var $elem = $(this);
                if ($elem.data('url')) {
                    var message = { "method": "previewfile", "url": $elem.data('url') };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                }
            });

            DOM.on('singleTap', 'ol>li', function(e) {
                var $elem = $(this).find('.option-li');
                var type = Number($elem.data('type'));

                if (e.srcElement.tagName == "IMG" && $(e.target).attr('src')) {
                    if (!isPushed) {
                        var message = { "method": "previewIMG", "url": $(e.target).attr('src') };
                        window.webkit.messageHandlers.interOp.postMessage(message);
                    } else {
                        isPushed = false;
                    }
                } else {
                    switch (type) {
                        case 2:
                            _this.duox($elem);
                            break;

                        default:
                            _this.danx($elem);
                            break;
                    }
                }
            });

            $('#down-question').on('singleTap', function(e) {
                if ($(e.target).hasClass('save')) {
                    var answer = _this.momentList[_this.start].userAnswer
                    if (answer == '') {
                        _this.submitAll();
                    } else {
                        _this.submit();
                    }
                } else {
                    _this.next();
                }
            });

            $('#up-question').on('singleTap', function(e) {
                _this.prev();

            });
            //返回提示
            // $(".backInfo").on('singleTap', function() {
            //     plus.nativeUI.confirm("返回请确认测验已提交,确定离开么？", function(e) {
            //         if (e.index === 0) {
            //             _this.view.close();
            //         }
            //     });
            // });
            return this;
        },
        /**
         * 单选处理
         */
        danx: function($elem) {
            var _this = this,
                answer = $elem.data('answer');
            $elem.parent().addClass('right').siblings().removeClass('right');
            _this.momentList[_this.start].userAnswer = String(answer);
            return this;
        },
        /**
         * 多选
         */
        duox: function($elem) {
            var _this = this,
                answer = String($elem.data('answer')),
                userAnswer = _this.momentList[_this.start].userAnswer,
                select = userAnswer ? String(userAnswer).split(',') : [],
                index = $.inArray(String(answer), select);
            index > -1 ?
                (select.splice(index, 1)) :
                (select.push(answer));
            index > -1 ?
                ($elem.parent().removeClass('right')) :
                ($elem.parent().addClass('right'));
            select.sort();
            _this.momentList[_this.start].userAnswer = select.join();
            return this;
        },

        helper: function() {

            var _this = this;
            //对字符串进行编码
            template.config('escape', false);
            //替换img标签
            template.helper('questionType', function(i) {
                var type = ['', '单选题', '多选题', '判断题', '填空题', '填空题', '问答题', '匹配题', '阅读理解', '完形填空', '文件作答题', '视听题'];
                return type[Number(i)];
            });
            template.helper('itoCharAB', function(i) {
                var letter = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];
                return letter[Number(i)];
            });
            //选择题处理
            template.helper('isselected', function(i, userAnswer) {
                if (userAnswer === "") {
                    return '';
                }
                var array_userAnswer = String(userAnswer).split(',');
                if ($.inArray(String(i), array_userAnswer) > -1) {
                    return 'right';
                } else {
                    return "";
                }

            });
            return this;
        },
        load: function() {
            var _this = this;
            var message = { "method": "load" };
            window.webkit.messageHandlers.interOp.postMessage(message);
            return this

        },

        /**
         * 载入 
         * @return {null}
         */
        init: function() {

            this.examId = "";
            this.activityId = "";
            this.openClassId = "";
            this.courseOpenId = "";
            this.userId = "";
            this.SchoolId = "";
            this.isSend = false;
            this.creatorId = "";
            this.status = "";
            this.classTestStuId = "";

            this.parentelem = '';
            this.time_s = 0.0;
            //临时容器

            this.momentList = [];
            this.handleQuestinData = [];
            this.start = 0; //数组下标
            this.index = 1; //题目下标
            this.$scroll = '';
            this.isPushed = false;
            this.helper().load().events();
            return this;
        }
    };

    examhandle.init();
    window.examhandle = examhandle;

}(mui, Zepto));