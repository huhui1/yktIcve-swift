/**
 * 学生讨论区列表页
 * @param {Object} $M => mui
 * @param {Object} $  => zepto
 * @name  zqyou
 * @date  2017-03-01
 * @return {Object}
 */
(function($M, $) {

    var list = {
        /**
         * 获取数据
         * @return {this}
         */
        get: function(r) {
            var _this = this,
                arr = [];


            $.each(r.discussInfo.docJson, function(i, v) {
                arr.push({
                    src: v.docPreview,
                    oss: v.docOssPreview
                });
            })

            $('#topice').html(template('topice-tpl', { discussdata: r.discussInfo, imgdata: arr }));
            if (r.discussInfo.replyList.length) {
                $('#list').html(template('list-tpl', { list: r.discussInfo.replyList }));
            } else {
                $('#list').html('<li class="mui-table-view-cell mui-media mui-text-center data-loading"><a href="javascript:;">还没有人评论，赶紧来评论吧！</a></li>');
            }

            $('#mask').addClass('mui-hidden');
            $M('#content-scroll').pullRefresh().endPulldownToRefresh();
            $M('#content-scroll').pullRefresh().refresh(true);
            _this.me && _this.me.resetload();
            return this;
        },

        /**
         * 评论回复
         * @return {this}
         */
        reply: function(val) {
            var wait,
                _this = this,
                params = {
                    topicId: this.topicId,
                    value: val.val,
                    classId: _this.classId,
                    type: val.type,
                    userId: _this.selfId
                };

            //show loading
            wait = plus.nativeUI.showWaiting('发送中...');
            $http.post(app.studentAPI.bbs.saveReply, params, function(data) {
                if (data.code > 0) {
                    plus.nativeUI.toast('回复成功');
                    params.id = data.id;

                    _this.appendReply(params, true);
                } else {
                    plus.nativeUI.toast(data.msg);
                }
                wait.close();
            });

            return this;
        },
        /**
         * 事件绑定
         * @return {this}
         */
        events: function() {
            var _this = this;
            //计算总行数
            // var lines = window.screen.height / 40;
            // this.tempLines = [];
            // for (var i = 0; i < lines; i++) {
            //     this.tempLines.push(i);
            // }
            // this.lines = this.tempLines.concat();
            var $scroll = $M('.mui-scroll-wrapper').scroll();
            $('#content-scroll').dropload({
                domUp: {
                    domClass: 'dropload-up',
                    domRefresh: '<div class="dropload-refresh">↓ 下拉可以刷新</div>',
                    domUpdate: '<div class="dropload-update">↑ 释放立即刷新</div>',
                    domLoad: '<div class="dropload-load"><span class="loading"></span> 正在刷新中...</div>'
                },
                loadUpFn: function(me) {
                    _this.me = me;
                    _this.load();
                    $scroll.scrollTo(0, 0);
                }
            });

            //点击留言操作
            $('#list').on('singleTap', 'li.parent', function(e) {
                var has, $target = $(e.target),
                    $elem = $(this),
                    replyid = $elem.attr('data-replyid'),
                    userId = $elem.attr('data-userid'),
                    content = $elem.attr('data-content'),
                    docJson = $elem.attr('data-docjson'),
                    dateCreated = $elem.find('.time').text(),
                    creatorName = $elem.find('.CreatorName').text(),
                    avator = $elem.find('.avator').attr('src'),
                    $frame = $elem.find('.mui-frame');

                var extras = {
                    parentId: replyid,
                    dateCreated: dateCreated,
                    content: content,
                    docJson: docJson,
                    creatorName: creatorName,
                    avator: avator,
                    creatorId: userId
                }
                var message = { "method": "showReplyInfo", "info": JSON.stringify(extras) };
                window.webkit.messageHandlers.interOp.postMessage(message);
            });

            // 图片预览
            $('#topice').on('singleTap', 'img', function() {
                var url = $(this).data('oss');
                if (url) {
                    var message = { "method": "preview", "url": url };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                }

            });

            // 重新加载数据
            window.addEventListener('reload', function() {
                _this.get();
            });
            window.addEventListener('deReload', function() {
                _this.countNum = _this.countNum - 1;
                _this.get();
            });
            // 接受学生内容
            window.addEventListener('appendDOM', function(e) {

                var data = {
                    username: e.detail.name,
                    content: e.detail.content,
                    id: e.detail.bbsId,
                    avator: e.detail.avator,
                    time: e.detail.time,
                    userId: e.detail.userId
                };

                data.isSend = true;

                _this.appendReply(data, false);
            }, false);

            return this;
        },
        /**
         * 增加辅助方法
         * @return {this}
         */
        helper: function() {
            //对字符串进行编码
            template.config('escape', false);
            //时间格式转化
            template.helper('dateFormat', function(date, format) {
                if (date == 0)
                    date = new Date();
                else if (date.indexOf("/Date(") > -1) {
                    var date = new Date(parseInt(date.replace("/Date(", "").replace(")/", "") - 8 * 60 * 60 * 1000, 10));
                } else
                    date = new Date(date);

                var map = {
                    "M": date.getMonth() + 1, //月份
                    "d": date.getDate(), //日
                    "h": date.getHours(), //小时
                    "m": date.getMinutes(), //分
                    "s": date.getSeconds(), //秒
                    "q": Math.floor((date.getMonth() + 3) / 3), //季度
                    "S": date.getMilliseconds() //毫秒
                };
                format = format.replace(/([yMdhmsqS])+/g, function(all, t) {
                    var v = map[t];
                    if (v !== undefined) {
                        if (all.length > 1) {
                            v = '0' + v;
                            v = v.substr(v.length - 2);
                        }
                        return v;
                    } else if (t === 'y') {
                        return (date.getFullYear() + '').substr(4 - all.length);
                    }
                    return all;
                });
                return format;
            });
            //替换img标签
            template.helper('replaceImg', function(val) {
                return val.toString().replace(/<img [^>]*src=['"]([^'"]+)[^>]*>/gi, "[图片]");
            });

            //替换引号标签
            template.helper('replaceUnquote', function(val) {
                return val.replace(/\"/g, "'");
            });
            template.helper('jsontostr', function(v) {
                return JSON.stringify(v);
            });
            return this;

        },
        load: function() {
            var message = { "method": "load" };
            window.webkit.messageHandlers.interOp.postMessage(message);
            return this;
        },
        /**
         * 载入
         * @return {null}
         */
        init: function() {



            //单次讨论是否结束
            this.status = 3;
            this.courseOpenId = "";
            this.openClassId = "";
            this.activityId = '';
            this.discussId = '';
            this.creatorId = "";

            this.me = "";
            this.lines = [];
            this.tempLines = [];
            this.speeds = [];
            this.bulletScreenList = [];
            this.countNum = 0;
            this.helper();
            this.load().events();
        }
    };


    list.init();
    window.list = list;

}(mui, Zepto));