/**
 * 签到中页面
 * @param {Object} $M => mui
 * @param {Object} $  => zepto
 * @name  zqyou
 * @date  2017-03-09
 * @return {Object}
 */
(function($M, $) {
    var signing = {
        /**
         * 设置总人数
         * @return {this}
         */
        charts: function(value, number) {
            var _this = this;
            var option = {
                backgroundColor: '#04ae84',
                tooltip: {
                    formatter: "{a} <br/>{b} : {c}%"
                },
                series: [{
                    name: '参与人数',
                    type: 'gauge',
                    detail: {
                        formatter: function(value) {
                            value = Math.round(value * number / 100);
                            return value + '/' + number;
                        },
                        textStyle: {
                            color: '#fff'
                        }
                    },
                    radius: '90%',
                    data: [{
                        value: value,
                        rate: number,
                        name: ''
                    }],
                    title: {
                        textStyle: {
                            color: '#04ae84',
                            fontSize: 30
                        }
                    },
                    axisLine: { // 坐标轴线
                        lineStyle: { // 属性lineStyle控制线条样式
                            color: [
                                [0.2, '#0E8C6D'],
                                [0.8, '#82DBC5'],
                                [1, '#00FFC0']
                            ],
                            width: 8
                        }
                    },
                    axisTick: { // 坐标轴小标记
                        show: false
                    },
                    pointer: {
                        width: 5
                    }
                }]
            };

            var chart = echarts.init(document.getElementById('sign-list'));
            chart.setOption(option);

            //计算总行数
            var lines = $('.sign-list').height() / 40;
            _this.tempLines = [];
            for (var i = 0; i < lines; i++) {
                _this.tempLines.push(i);
            }
            _this.lines = _this.tempLines.concat();


            return this;
        },
        /**
         * 设置图表
         * @return {this}
         */
        setCharts: function(signCount, studycount) {

            var _this = this;
            _this.signCount = signCount;
            _this.studycount = studycount;
            if (studycount == 0) {
                this.charts(0, studycount);
            } else {
                this.charts(1.0 * signCount / studycount * 100, studycount);
            }

            return this;
        },
        ListenerstuSigned: function(r) {
            var _this = this;
            _this.signCount++;
            _this.stuNames.push(r.displayName)
            _this.charts(1.0 * _this.signCount / _this.studycount * 100, _this.studycount).bulletScreen(r.displayName);
            return this;
        },
        ListenerstuSigneds: function(id, signCount, studycount, r) {
            var _this = this;
            _this.charts(1.0 * signCount / studycount * 100, studycount);
            $.each(r, function(i, v) {
                var index = $.inArray(v.StuName, _this.stuNames);
                if (index < 0) {
                    var params = {
                        type: 'signed',
                        userId: v.StuId,
                        avator: v.Avator,
                        actId: id,
                        displayName: v.StuName
                    }
                    var message = { "method": "params", "params": JSON.stringify(params) };
                    if (window.webkit && window.webkit.messageHandlers) {
                        window.webkit.messageHandlers.interOp.postMessage(message);
                    } else if (WebViewJavascriptBridge) {
                        WebViewJavascriptBridge.postMessage(message)
                    }
                    _this.stuNames.push(v.StuName)
                    setTimeout(function() {
                        _this.bulletScreen(v.StuName);
                    }, i * 700)
                }
            });
            return this;
        },
        /**
         * 弹幕
         * @return {this}
         */
        bulletScreen: function(name) {
            var _this = this;
            if (_this.tempLines.length == 0) {
                return;
            }
            if (_this.lines.length == 0) {
                _this.lines = _this.tempLines.concat();
            }

            var time = 4,
                timePlus = Math.random() * 8,
                lines = _this.lines,
                n = Math.floor(Math.random() * lines.length),
                line = lines[n],
                lastTime = _this.speeds[line] || 0,
                student = $('<div class="activity-student"></div>'),
                content = $('#show-info');

            student.html(name);

            //当这一行和上一次速度相差大于2时 结束
            while (Math.abs(timePlus - lastTime) < 5) {
                timePlus = Math.random() * 8;
            }

            time += timePlus;

            _this.speeds[line] = timePlus;

            //删除这一行
            _this.lines.splice(n, 1);
            content.append(student);

            student.css('top', line * 40);

            setTimeout(function() {
                student.css('transition', 'all ' + time + 's ' + 'cubic-bezier(0, 0, 1, 1)').css('transform', 'translateX(-' + (window.screen.width + student.width()) + 'px)');
            }, 0);

            setTimeout(function() {
                student.remove();
            }, time * 1000);

            return this;
        },

        load: function() {
            var message = { "method": "load" };

            if (window.webkit && window.webkit.messageHandlers) {
                window.webkit.messageHandlers.interOp.postMessage(message);
            }
            // 结束签到
            $('#end').on('singleTap', function() {
                var message = { "method": "endsign" };
                if (window.webkit && window.webkit.messageHandlers) {
                    window.webkit.messageHandlers.interOp.postMessage(message);
                } else if (WebViewJavascriptBridge) {
                    WebViewJavascriptBridge.back()
                }
            });

            return this;
        },
        /**
         * 载入
         * @return {this}
         */
        init: function() {

            this.lines = [];
            this.tempLines = [];
            this.speeds = [];
            this.stuNames = [];
            this.signCount = 0
            this.studycount = 0
            this.load();
            return this;
        },
    };
    signing.init();

    window.signing = signing;
}(mui, Zepto));