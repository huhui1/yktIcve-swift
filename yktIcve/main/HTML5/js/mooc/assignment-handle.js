(function($M, $) {
    var assignmenthandle = {

        /**
         * 获取题目
         * @return {this}
         */
        get: function(r, workExamType, userId, uniqueId, isEndClass) {
            var _this = this,
                $mask = $('#mask');

            if (isEndClass) {
                $("#down-question").css('width', "50%");
                $("#up-question").css('width', "50%");
            } else if (workExamType == 2) {
                $("#save-question").addClass('mui-hidden');
                $("#down-question").css('width', "33.33333333333%");
                $("#up-question").css('width', "33.33333333333%");
                $("#done-question").css('width', "33.33333333333%");

            }
            _this.userId = userId;
            _this.workExamType = workExamType;
            _this.uniqueId = uniqueId;

            if (r.code > 0) {

                _this.momentList = [];
                //大题
                var bigQuestionIds = [];
                var bigQuestionNames = [];
                $.each(r.questionData.bigQuestions, function(i, v) {
                    bigQuestionIds.push(v.Id);
                    bigQuestionNames.push(v.Title);
                });
                //匹配题
                var pipeiIds = [];
                var pipeimatchSelectContent = [];
                $.each(r.questionData.matchSelectContent, function(i, v) {
                    pipeiIds.push(v.QuestIonId);
                    pipeimatchSelectContent.push(v.match_AnswerContent);
                });

                var numtostr = ["一", "二", "三", "四", "五", "六", "七", "八", "九", "十"];
                $.each(r.questionData.questions, function(i, v) {
                    //阅读 完形填空 视听 子题目
                    var subQuestion = [];

                    $.each(r.questionData.subQuestions, function(i1, v1) {

                        if (v1.QuestionId == v.questionId) {
                            subQuestion.push(v1.subQuestion[0])
                        }
                    });
                    var _index = $.inArray(v.bigQuestionId, bigQuestionIds)

                    if (v.questionType == 3) {
                        v.answerList = [{ "SortOrder": "错误", "Content": "错误", }, { "SortOrder": "正确", "Content": "正确" }];
                    }
                    var pipeicontent = [];
                    if (v.questionType == 7) {
                        var _indexV = $.inArray(v.questionId, pipeiIds);
                        if (_indexV > -1) {
                            pipeicontent = pipeimatchSelectContent[_indexV];
                        }
                    }
                    var contentImgHtml = '';
                    if (v.questionType == 10 || v.questionType == 6) {
                        contentImgHtml = '<div class="add-pic"><i class="mui-icon iconfont icon-add" style="font-size: 55px;color: rgba(196, 196, 196, 0.86);padding-left: 4px;"></i> </div>';
                    }
                    if (v.questionType < 12) {

                        _this.momentList.push({
                            id: v.questionId,
                            paperStuQuestionId: v.paperStuQuestionId,
                            fullScore: v.totalScore,
                            title: v.Title,
                            content: v.answerList,
                            type: v.questionType,
                            userAnswer: v.studentAnswerString,
                            optionAnswer: v.answerList,
                            pipeicontent: pipeicontent,
                            bigQuestionTitle: numtostr[_index] + ":" + bigQuestionNames[_index],
                            bigQuestionIds: bigQuestionIds[_index],
                            contentImgHtml: contentImgHtml,
                            subQuestion: subQuestion,
                            stortOrder: _index
                        });
                    }
                });

                if (_this.momentList.length > 1) {
                    _this.momentList.sort(function($0, $1) {
                        return $0.stortOrder - $1.stortOrder;
                    })
                }

                $("#nowindex").text(_this.start + 1.0);
                $("#total").text(_this.momentList.length);
                $('#questioninfo').html(template(_this.templ[_this.momentList[_this.start].type], { question: _this.momentList[_this.start], index: (_this.start + 1.0) }));

            }
            $('i.currentNUM').text("1");
            $('i.totalNUM').text(_this.momentList.length);
            $('#mask').addClass('hide');

            return this;
        },

        getDraft: function(r, workExamType, userId, uniqueId) {
            var _this = this,
                $mask = $('#mask');

            _this.userId = userId;
            _this.workExamType = workExamType;
            _this.uniqueId = uniqueId;

            if (r.code > 0) {
                _this.momentList = [];
                var bigQuestionIds = [];
                var bigQuestionNames = [];
                $.each(r.questionData.bigQuestions, function(i, v) {
                    bigQuestionIds.push(v.Id);
                    bigQuestionNames.push(v.Title);
                });
                //匹配题
                var pipeiIds = [];
                var pipeimatchSelectContent = [];
                $.each(r.questionData.matchSelectContent, function(i, v) {
                    pipeiIds.push(v.QuestIonId);
                    pipeimatchSelectContent.push(v.match_AnswerContent);
                });
                var numtostr = ["一", "二", "三", "四", "五", "六", "七", "八", "九", "十"];
                $.each(r.questionData.questions, function(i, v) {

                    //阅读 完形填空 视听 子题目
                    var subQuestion = [];
                    $.each(r.questionData.subQuestions, function(i1, v1) {

                        if (v1.QuestionId == v.questionId) {
                            subQuestion.push(v1.subQuestion[0])
                        }
                    });

                    var _index = $.inArray(v.bigQuestionId, bigQuestionIds)

                    if (v.questionType == 3) {
                        v.answerList = [{ "SortOrder": "错误", "Content": "错误" }, { "SortOrder": "正确", "Content": "正确" }];
                    }

                    var pipeicontent = [];
                    if (v.questionType == 7) {
                        var _indexQ = $.inArray(v.questionId, pipeiIds);
                        if (_indexQ > -1) {
                            pipeicontent = pipeimatchSelectContent[_indexQ];
                        }
                    }

                    var contentImgHtml = '';
                    if (v.questionType == 10 || v.questionType == 6) {

                        $.each(v.stuQuestionDocAnswer, function(i, val) {
                            contentImgHtml += '<div style="display: inline-block; position: relative;"><img class="uploaded-pic seeImg preview" data-qindex=' + _this.start + '  data-id=' + val.Id + ' data-doctype=' + val.docType + ' data-md5=' + val.md5 + '  data-size=' + val.docSize + '   data-url=' + val.url + ' src="' + val.thumbnail + '"><i class=" iconfont delimg icon-close"></i></div>';
                        });
                        contentImgHtml += '<div class="add-pic"><i class="mui-icon iconfont icon-add" style="font-size: 55px;color: rgba(196, 196, 196, 0.86);padding-left: 4px;"></i> </div>';
                    }

                    if (v.questionType < 12) {

                        if (v.studentAnswerString) {
                            _this.doneQuestionIds.push(v.paperStuQuestionId)
                        }
                        _this.momentList.push({
                            id: v.questionId,
                            paperStuQuestionId: v.paperStuQuestionId,
                            fullScore: v.totalScore,
                            title: v.Title,
                            content: v.answerList,
                            type: v.questionType,
                            pipeicontent: pipeicontent,
                            userAnswer: v.studentAnswerString,
                            optionAnswer: v.answerList,
                            bigQuestionTitle: numtostr[_index] + ":" + bigQuestionNames[_index],
                            bigQuestionIds: bigQuestionIds[_index],
                            contentImgHtml: contentImgHtml,
                            subQuestion: subQuestion,
                            stortOrder: _index
                        });

                    }
                });
                if (_this.momentList.length > 1) {
                    _this.momentList.sort(function($0, $1) {
                        return $0.stortOrder - $1.stortOrder;
                    })
                }


                $("#nowindex").text(_this.start + 1.0);
                $("#total").text(_this.momentList.length);
                $('#questioninfo').html(template(_this.templ[_this.momentList[_this.start].type], { question: _this.momentList[_this.start], index: (_this.start + 1.0) }));

            }
            $('i.currentNUM').text("1");
            $('i.totalNUM').text(_this.momentList.length);
            $('#mask').addClass('hide');

            return this;
        },

        send: function(isDraft) {
            var _this = this;
            var message = { "method": "complete", "paperStructUnique": _this.paperStructUnique, "uniqueId": _this.uniqueId, "isDraft": String(isDraft) };
            window.webkit.messageHandlers.interOp.postMessage(message);
            return this;
        },
        workExamSave: function() {
            var _this = this;
            var isAllDo = _this.momentList.length == _this.doneQuestionIds.length
            var message = { "method": "workExamSave", "isAllDo": String(isAllDo) };
            window.webkit.messageHandlers.interOp.postMessage(message);
            return this;
        },
        onlineWorkExamSaveDraft: function() {
            var _this = this;
            var message = { "method": "onlineWorkExamSaveDraft" };
            window.webkit.messageHandlers.interOp.postMessage(message);
            return this;
        },
        //填空题
        submitSpace: function(data, index) {
            var _this = this;
            //             // 发送数据
            //  answerJson 答案json数据 例如有三个填空：[{"SortOrder":0,"Content":"作答内容1"},{"SortOrder":1,"Content":"作答内容2"},{"SortOrder":2,"Content":"作答内容3"}]
            // questionId 题目Id
            // uniqueId 唯一标识Id
            // workExamType 类型(0-作业 1-测验 2-考试)
            // userId 用户Id
            $http.post(app.mooc.workexam.onlineHomeworkCheckSpace, {
                answerJson: data.userAnswer,
                userId: _this.userId,
                questionId: data.id,
                uniqueId: _this.uniqueId,
                workExamType: _this.workExamType
            }, function(r) {
                if (r.allDo) {
                    if ($.inArray(r.paperStuQuestionId, _this.doneQuestionIds) < 0) {
                        _this.doneQuestionIds.push(r.paperStuQuestionId)
                    }
                } else {
                    _this.momentList[_this.start].userAnswer = "";
                }
            }, function() {
                _this.momentList[_this.start].userAnswer = "";
                plus.nativeUI.toast('获取数据失败，请检查您的网络设置');
            });
            return this;
        },

        //作答完形填空,阅读理解及视听题等
        submitSubQuestion: function(data, index) {
            var _this = this;
            // answer 学生答案
            // questionId 题目Id
            // subQuestionId 关联的子题目Id
            // subScore 子题目分数
            // uniqueId 唯一标识Id
            // userId 用户Id
            // workExamType 类型 0 - 作业 1 - 测验 2 - 考试

            // 发送数据
            $http.post(app.mooc.workexam.onlineHomeworkSubAnswer, {
                answer: data.subQuestion[index].studentAnswer,
                questionId: data.id,
                userId: _this.userId,
                subQuestionId: data.subQuestion[index].Id,
                subScore: data.subQuestion[index].subScore,
                uniqueId: _this.uniqueId,
                workExamType: _this.workExamType
            }, function(r) {
                if (r.allDo) {
                    if ($.inArray(r.paperStuQuestionId, _this.doneQuestionIds) < 0) {
                        _this.doneQuestionIds.push(r.paperStuQuestionId)
                    }
                }
                if (r.code < 0) {
                    _this.momentList[_this.start].userAnswer = "";
                    _this.momentList[_this.start].subQuestion[index].studentAnswer = ""
                }
            }, function() {
                _this.momentList[_this.start].userAnswer = "";
                _this.momentList[_this.start].subQuestion[index].studentAnswer = ""

                plus.nativeUI.toast('获取数据失败，请检查您的网络设置');
            });
            return this;
        },
        // //匹配题
        submitMatch: function(data, index) {
            var _this = this;
            // answer 学生答案（如果选择了就传相应的值，没选就为-1 例如格式为 answer= "0,1,-1,-1"）
            // questionId 题目Id
            // uniqueId 唯一标识Id
            // userId 用户Id
            // workExamType 类型 0-作业 1-测验 2-考试
            //发送数据
            $http.post(app.mooc.workexam.onlineHomeworkMatch, {
                answer: data.userAnswer,
                uniqueId: _this.uniqueId,
                userId: _this.userId,
                questionId: data.id,
                workExamType: _this.workExamType
            }, function(r) {
                if (r.allDo) {
                    if ($.inArray(r.paperStuQuestionId, _this.doneQuestionIds) < 0) {
                        _this.doneQuestionIds.push(r.paperStuQuestionId)
                    }
                } else {
                    _this.momentList[_this.start].userAnswer = "";
                }
            }, function() {
                _this.momentList[_this.start].userAnswer = "";
            });
            return this;
        },
        /**单题提交 */
        submit: function(data, index) {
            var _this = this;
            if (data.type == 10) {
                var $elem = $('img.uploaded-pic'),
                    imgarr = [];
                $.each($elem, function(i, v) {
                    imgarr.push({ DocType: $(v).data('doctype'), Url: $(v).data('url'), Md5: $(v).data('md5'), DocSize: $(v).data('size'), DocTitle: "iosjpg" });
                });
                data.userAnswer = JSON.stringify(imgarr);
                _this.momentList[_this.start].contentImgHtml = $('.pic-info').html()
            }
            if (data.type == 8 || data.type == 9 || data.type == 11) {
                data.paperStuSubQuestionId = data.content[Number(index)].paperStuSubQuestionId;
                data.subQuestionId = data.content[Number(index)].subQuestionId;
                data.userAnswer = data.content[Number(index)].userAnswer;
                data.fullScore = data.content[Number(index)].subQuestionScore;
            }

            if (!data.userAnswer) {
                data.userAnswer = "";
            }


            // 发送数据
            $http.post(app.mooc.workexam.onlineHomeworkAnswer, {
                answer: data.userAnswer,
                userId: _this.userId,
                online: 1,
                questionId: data.id,
                uniqueId: _this.uniqueId,
                workExamType: _this.workExamType
            }, function(r) {
                if (r.allDo) {
                    if ($.inArray(r.paperStuQuestionId, _this.doneQuestionIds) < 0) {
                        _this.doneQuestionIds.push(r.paperStuQuestionId)
                    }
                } else {
                    _this.momentList[_this.start].userAnswer = "";
                }
            }, function() {
                _this.momentList[_this.start].userAnswer = "";
                plus.nativeUI.toast('获取数据失败，请检查您的网络设置');
            });
            return this;
        },
        //文件作答题 点上一题提交
        submitWenjian: function(data) {
            var _this = this;
            if (data.type == 10) {
                var $elem = $('img.uploaded-pic'),
                    imgarr = [];
                $.each($elem, function(i, v) {
                    imgarr.push({ DocType: $(v).data('doctype'), Url: $(v).data('url'), Md5: $(v).data('md5'), DocSize: $(v).data('size'), DocTitle: "iosjpg" });
                });
                data.userAnswer = JSON.stringify(imgarr);
                _this.momentList[_this.start].contentImgHtml = $('.pic-info').html()
            }
            return this;
        },

        /**
         * 上传图片
         * @return {this}
         */
        uploadImg: function(t, thumbnail, docUrl) {
            var _this = this;
            $(".pic-info .add-pic").before('<div style="display: inline-block; position: relative;"><img class="uploaded-pic seeImg" width="70" height="70" data-id=' + t.Id + ' data-url=' + docUrl + ' src="' + thumbnail + '"><i class="delimg iconfont icon-close"></i></div>');
            if (t.allDo) {
                if ($.inArray(t.paperStuQuestionId, _this.doneQuestionIds) < 0) {
                    _this.doneQuestionIds.push(t.paperStuQuestionId)
                }
            }
            return this;
            // setTimeout(function() {
            //     var list = $(".pic-info").find('img');
            //     if (list.length > 5) {
            //         $(".add-pic").addClass('mui-hidden')
            //     }
            // }, 100);
        },
        /**
         * 上传视频
         * @return {this}
         */
        uploadvideo: function(t, thumbnail, docUrl) {
            var _this = this;
            $(".pic-info .add-pic").before('<div style="display: inline-block; position: relative;"><img class="uploaded-pic seeVideo" width="70" height="70" data-id=' + t.Id + ' data-url=' + docUrl + ' src="' + thumbnail + '"><i class="delimg iconfont icon-close"></i></div>');
            if (t.allDo) {
                if ($.inArray(t.paperStuQuestionId, _this.doneQuestionIds) < 0) {
                    _this.doneQuestionIds.push(t.paperStuQuestionId)
                }
            }
            // setTimeout(function() {
            //     var list = $(".pic-info").find('img');
            //     if (list.length > 5) {
            //         $(".add-pic").addClass('mui-hidden')
            //     }
            // }, 100);
            return this;
        },
        /**
         * 事件绑定
         * @return {this}
         */
        events: function() {
            var _this = this,
                DOM = $('#questioninfo');

            var $scroll = $M('.mui-scroll-wrapper').scroll();

            DOM.on('singleTap', 'img', function() {
                var $elem = $(this),
                    id = $elem.data('id'),
                    url = $elem.attr('src');
                dataUrl = $elem.attr('data-url');
                if ($elem.hasClass('preview') && id) {
                    _this.isPushed = true;
                    var message = { "method": "getDocByUrl", "url": dataUrl };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                } else if ($elem.hasClass('questionIndex')) {
                    return;
                } else {
                    if (url) {
                        _this.isPushed = true;
                        var message = { "method": "previewImg", "url": dataUrl };
                        window.webkit.messageHandlers.interOp.postMessage(message);
                    }

                }
            });
            DOM.on('singleTap', 'ol>li', function(e) {
                var $elem = $(this).find('.option-li'),
                    $elemyue = $(this).find('.yue-option-li');

                var type = Number($elem.data('type'));

                if (e.srcElement.tagName == "IMG" && $(e.target).attr('src')) {
                    if (!_this.isPushed) {
                        var message = { "method": "previewImg", "url": $(e.target).attr('data-url') };
                        window.webkit.messageHandlers.interOp.postMessage(message);
                    } else {
                        isPushed = false;
                    }
                } else if ($elemyue.length > 0) {
                    var typey = Number($elemyue.data('type'));
                    switch (typey) {
                        case 2:
                            _this.yueDuo($elemyue);
                            break;
                        default:
                            _this.yueDan($elemyue);
                            break;
                    }
                } else {
                    switch (type) {
                        case 2:
                            _this.duox($elem);
                            break;

                        default:
                            _this.danx($elem);
                            break;
                    }
                }
            });

            //删除图片
            DOM.on('singleTap', '.delimg', function() {
                var $elem = $(this);
                $elem.parent().remove();
                var index = Number($elem.prev().data('qindex'));
                var isWD = _this.momentList[index].questionType == 6 ? "true" : "false";
                var message = { "method": "delFileAnswer", "Id": $elem.prev().data('id'), "questionId": _this.momentList[index].id, "isWD": isWD };
                window.webkit.messageHandlers.interOp.postMessage(message);
            });
            //保存
            $("#save-question").on('singleTap', function() {
                var type = _this.momentList[_this.start].type;

                switch (type) {
                    case 4, 5:
                        _this.tianKongDone();
                        break;
                    case 6:
                        _this.wendaDone();
                        break;
                    default:
                        break;
                }
                _this.onlineWorkExamSaveDraft();

            });
            //提交
            $('#done-question').on('singleTap', function() {
                var type = _this.momentList[_this.start].type;
                switch (type) {
                    case 4, 5:
                        _this.tianKongDone();
                        break;
                    case 6:
                        _this.wendaDone();
                        break;
                    default:
                        break;
                }
                _this.workExamSave()
            })
            $('#down-question').on('singleTap', function(e) {
                var type = _this.momentList[_this.start].type;
                if (_this.start == _this.momentList.length - 1) {
                    var message = { "method": "showMsg", "msg": "已经是最后一题" };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                    return;
                }
                switch (type) {
                    case 4, 5:
                        _this.tianKongDone();
                        break;
                    case 6:
                        _this.wendaDone();
                        break;
                    case 10:
                        _this.submitWenjian(_this.momentList[_this.start])
                        break;
                    default:
                        break;
                }
                _this.start += 1.0;

                $("#nowindex").text(_this.start + 1.0);

                DOM.html(template(_this.templ[_this.momentList[_this.start].type], { question: _this.momentList[_this.start], index: (_this.start + 1.0) }));
                $('i.currentNUM').text(_this.start + 1.0);
                $('i.totalNUM').text(_this.momentList.length);
                $scroll.scrollTo(0, 0);

            });

            $('#up-question').on('singleTap', function(e) {
                var type = _this.momentList[_this.start].type;
                if (_this.start == 0) {
                    var message = { "method": "showMsg", "msg": "已经是第一题" };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                    return;
                }

                switch (type) {
                    case 4, 5:
                        _this.tianKongDone();
                        break;
                    case 6:
                        _this.wendaDone();
                        break;
                    case 10:
                        _this.submitWenjian(_this.momentList[_this.start])
                        break;
                    default:
                        break;
                }

                _this.start -= 1.0;
                $("#nowindex").text(_this.start + 1.0);

                $('#questioninfo').html(template(_this.templ[_this.momentList[_this.start].type], { question: _this.momentList[_this.start], index: (_this.start + 1.0) }));
                $('i.currentNUM').text(_this.start + 1.0);
                $('i.totalNUM').text(_this.momentList.length);

                $scroll.scrollTo(0, 0);

            });

            //匹配题
            DOM.on('input propertychange').bind('input propertychange', '.select-panduan', function() {
                var $elem = $('.select-panduan'),
                    arranswer = [];
                $.each($elem, function(i, v) {
                    arranswer.push($(v).val());
                });
                _this.momentList[_this.start].userAnswer = arranswer.join();
                _this.submitMatch(_this.momentList[_this.start], _this.start)
            });

            DOM.on('singleTap', 'a', function(e) {
                var $elem = $(this);
                if ($elem.data('url')) {
                    _this.isPushed = true;
                    var message = { "method": "getDocByUrl", "url": $elem.data('url') };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                }
            });
            // 回答问答题时添加图片
            DOM.on('singleTap', '.add-pic', function(e) {
                e.preventDefault();

                _this.parentelem = e.target.parentElement.parentElement.previousElementSibling;
                var message = { "method": "uploadImg", "questionId": _this.momentList[_this.start].id };
                window.webkit.messageHandlers.interOp.postMessage(message);

            });
            return this;
        },

        /**
         * 填空题处理
         */
        tianKongDone: function() {
            var _this = this;
            var $elem = $('.TKAswerList'),
                arranswer = [];
            $.each($elem, function(i, v) {
                arranswer.push({ SortOrder: i, Content: $(v).val() });
            });
            if (_this.momentList[_this.start].userAnswer != JSON.stringify(arranswer)) {
                _this.momentList[_this.start].userAnswer = JSON.stringify(arranswer);
                _this.submitSpace(_this.momentList[_this.start], _this.start)
            }

            return this;
        },
        /**
         * 问答题处理
         */
        wendaDone: function() {
            var _this = this;
            var $elem = $('.contentEditable');
            _this.momentList[_this.start].contentImgHtml = $('.pic-info').html()
            if (_this.momentList[_this.start].userAnswer != $elem.text()) {
                _this.momentList[_this.start].userAnswer = $elem.text();
                _this.submit(_this.momentList[_this.start], _this.start)
            }
            return this;
        },
        /**
         * 单选处理
         */
        danx: function($elem) {
            var _this = this,
                answer = $elem.data('answer');
            $elem.parent().addClass('right').siblings().removeClass('right');
            if (_this.momentList[_this.start].userAnswer == String(answer)) {
                return;
            }
            _this.momentList[_this.start].userAnswer = String(answer);
            _this.submit(_this.momentList[_this.start], _this.start)
            return this;
        },
        /**
         * 多选
         */
        duox: function($elem) {
            var _this = this,
                answer = String($elem.data('answer')),
                userAnswer = _this.momentList[_this.start].userAnswer,
                select = userAnswer ? String(userAnswer).split(',') : [],
                index = $.inArray(String(answer), select);
            index > -1 ?
                (select.splice(index, 1)) :
                (select.push(answer));
            index > -1 ?
                ($elem.parent().removeClass('right')) :
                ($elem.parent().addClass('right'));
            select.sort();
            if (_this.momentList[_this.start].userAnswer == select.join()) {
                return;
            }
            _this.momentList[_this.start].userAnswer = select.join();
            _this.submit(_this.momentList[_this.start], _this.start)
            return this;
        },
        /**
         * 阅读理解单选
         */
        yueDan: function($elem) {
            var _this = this,
                answer = $elem.data('answer'),
                index = $elem.data('index');
            $elem.parent().addClass('right').siblings().removeClass('right');
            if (_this.momentList[_this.start].subQuestion[Number(index)].studentAnswer != String(answer)) {
                _this.momentList[_this.start].subQuestion[Number(index)].studentAnswer = String(answer);
                _this.submitSubQuestion(_this.momentList[_this.start], Number(index));
            }

            return this;
        },
        /**
         * 阅读理解单选
         */
        yueDuo: function($elem) {
            var _this = this,
                answer = $elem.data('answer'),
                i = $elem.data('index'),
                userAnswer = _this.momentList[_this.start].subQuestion[Number(i)].studentAnswer,
                select = userAnswer ? String(userAnswer).split(',') : [],
                index = $.inArray(String(answer), select);
            index > -1 ?
                (select.splice(index, 1)) :
                (select.push(answer));
            index > -1 ?
                ($elem.parent().removeClass('right')) :
                ($elem.parent().addClass('right'));
            select.sort();
            if (_this.momentList[_this.start].subQuestion[Number(i)].studentAnswer != select.join()) {
                _this.momentList[_this.start].subQuestion[Number(i)].studentAnswer = select.join();
                _this.submitSubQuestion(_this.momentList[_this.start], Number(i));
            }

            return this;
        },
        helper: function() {

            var _this = this;
            //对字符串进行编码
            template.config('escape', false);
            //替换img标签
            template.helper('questionType', function(i) {
                var type = ['', '单选题', '多选题', '判断题', '填空题', '填空题', '问答题', '匹配题', '阅读理解', '完形填空', '文件作答题', '视听题'];
                return type[Number(i)];
            });
            template.helper('itoCharAB', function(i) {
                var letter = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];
                return letter[Number(i)];
            });

            // 匹配题处理
            template.helper('contentPipeiSelect', function(i, index, val) {
                if (val === "") {
                    return false;
                }
                var array_userAnswer = String(val).split(',');
                if (String(i) === array_userAnswer[index]) {
                    return true
                } else {
                    false;
                }

            });
            // 文件作答题图片处理
            template.helper('wendaAnswerImg', function(val) {

                var dataUser = val.split(','),
                    $image = '';
                $.each(dataUser, function(i, v) {
                    $image += '<img class="delimg" src="' + v + '">';
                });
                return $image
            });
            //选择题处理
            template.helper('isselected', function(i, userAnswer) {
                if (userAnswer === "") {
                    return '';
                }
                var array_userAnswer = String(userAnswer).split(',');
                if ($.inArray(String(i), array_userAnswer) > -1) {
                    return 'right';
                } else {
                    return "";
                }

            });
            //填空题答案处理
            template.helper('TKAswer', function(i, userAnswer) {
                try {
                    var array_userAnswer = JSON.parse(userAnswer)
                    return array_userAnswer[i]["Content"]
                } catch (error) {
                    return ""
                }
            });
            return this;
        },


        /**
         * 载入 
         * @return {null}
         */
        init: function() {
            var _this = this;
            this.userId = "";
            this.uniqueId = '';

            this.paperStructUnique = '';

            this.templ = ['question-danx-duox-pand', 'question-danx-duox-pand', 'question-danx-duox-pand', 'question-danx-duox-pand', 'question-tiankong', 'question-tiankong', 'question-wenda', 'question-pipei', 'question-yuedu', 'question-yuedu', 'question-wenjian', 'question-yuedu'];
            this.parentelem = '';
            //上传地址 与 拼接地址
            this.uploadUrl = "";
            this.prefixUrl = "";
            this.doneQuestionIds = [];
            //临时容器
            this.momentList = [];
            this.start = 0;
            this.isPushed = false;
            this.workExamType = 1;
            _this.helper().events();
            return this;
        }
    };


    assignmenthandle.init();
    window.assignmenthandle = assignmenthandle

}(mui, Zepto));