(function($M, $) {

    var assignmenthandleRecord = {

        /**
         * 获取题目
         * @return {this}
         */
        get: function(r) {
            var _this = this,
                $mask = $('#mask');


            if (r.code > 0) {

                _this.momentList = [];
                var bigQuestionIds = [];
                var bigQuestionNames = [];
                $.each(r.questionData.bigQuestions, function(i, v) {
                    bigQuestionIds.push(v.Id);
                    bigQuestionNames.push(v.Title);
                });
                //匹配题
                var pipeiIds = [];
                var pipeimatchSelectContent = [];
                $.each(r.questionData.matchSelectContent, function(i, v) {
                    pipeiIds.push(v.QuestIonId);
                    pipeimatchSelectContent.push(v.match_AnswerContent);
                });

                var checked = r.homework.isDisplayAnswer == 1 ? true : false;
                var isDisplayConsole = r.homework.isDisplayConsole;
                var numtostr = ["一", "二", "三", "四", "五", "六", "七", "八", "九", "十"];
                $.each(r.questionData.questions, function(i, v) {

                    //阅读 完形填空 视听 子题目
                    var subQuestion = [];

                    $.each(r.questionData.subQuestions, function(i1, v1) {

                        if (v1.QuestionId == v.questionId) {
                            subQuestion.push(v1.subQuestion[0])
                        }
                    });
                    var _index = $.inArray(v.bigQuestionId, bigQuestionIds)

                    if (v.questionType == 3) {
                        v.answerList = [{ "SortOrder": "错误", "Content": "错误" }, { "SortOrder": "正确", "Content": "正确" }];
                    }


                    var pipeicontent = [];
                    if (v.questionType == 7) {
                        var _indexV = $.inArray(v.questionId, pipeiIds);
                        if (_indexV > -1) {
                            pipeicontent = pipeimatchSelectContent[_indexV];
                        }
                    }

                    if (v.questionType < 12) {

                        _this.momentList.push({
                            id: v.questionId,
                            paperStuQuestionId: v.paperStuQuestionId,
                            fullScore: v.totalScore,
                            title: v.Title,
                            getScore: v.getScore,
                            checked: checked,
                            isDisplayConsole: isDisplayConsole,
                            content: v.answerList,
                            answer: v.Answer,
                            commentary: v.commentary,
                            commentaryFileData: v.commentaryFileList,
                            type: v.questionType,
                            isRight: v.isRight,
                            pipeicontent: pipeicontent,
                            stuQuestionDocAnswer: v.stuQuestionDocAnswer,
                            studentAnswerJson: v.studentAnswerJson,
                            optionAnswer: v.answerList,
                            userAnswer: v.studentAnswerString,
                            bigQuestionTitle: numtostr[_index] + ":" + bigQuestionNames[_index],
                            analysis: v.resultAnalysis,
                            subQuestion: subQuestion,
                            stortOrder: _index,
                            questionDocAnswer: v.questionDocAnswer,
                            answerList: v.answerList
                        });
                    }
                });

                if (_this.momentList.length > 1) {
                    _this.momentList.sort(function($0, $1) {
                        return $0.stortOrder - $1.stortOrder;
                    })
                }


                $("#nowindex").text(_this.start + 1.0);
                $("#total").text(_this.momentList.length);
                $('#questioninfo').html(template(_this.templ[_this.momentList[_this.start].type], { question: _this.momentList[_this.start], index: (_this.start + 1.0) }));
                if (_this.momentList.length == 1) {
                    $('#down-question').addClass('save').text("下一题");
                }
                if (_this.momentList[_this.start].type == 4 || _this.momentList[_this.start].type == 5) {
                    _this.tianKongDone();
                }
            }
            $('i.currentNUM').text("1");
            $('i.totalNUM').text(_this.momentList.length);
            $('#mask').addClass('hide');

            return this;
        },

        /**
         * 事件绑定
         * @return {this}
         */
        events: function() {
            var _this = this,
                DOM = $('#questioninfo');


            var $scroll = $M('.mui-scroll-wrapper').scroll();
            DOM.on('singleTap', 'img', function() {
                var $elem = $(this),
                    id = $elem.data('id'),
                    url = $elem.attr('src');
                dataUrl = $elem.attr('data-url')
                if ($elem.hasClass('questionIndex')) {
                    return;
                } else {
                    if (url) {
                        var message = { "method": "getDocByUrl", "url": dataUrl };
                        window.webkit.messageHandlers.interOp.postMessage(message);
                    }

                }
            });

            $('#down-question').on('singleTap', function(e) {
                if ((_this.start + 1.0) == _this.momentList.length) {
                    var message = { "method": "showMsg", "msg": "已是最后一题" };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                    return;
                }
                _this.start += 1.0;
                $("#nowindex").text(_this.start + 1.0);
                $('#questioninfo').html(template(_this.templ[_this.momentList[_this.start].type], { question: _this.momentList[_this.start], index: (_this.start + 1.0) }));
                $('i.currentNUM').text(_this.start + 1.0);
                $('i.totalNUM').text(_this.momentList.length);
                $scroll.scrollTo(0, 0);
                switch (_this.momentList[_this.start].type) {
                    case 4:
                    case 5:
                        _this.tianKongDone();
                        break;
                    default:
                        break;
                }
            });
            $('#up-question').on('singleTap', function(e) {
                if (_this.start == 0) {
                    var message = { "method": "showMsg", "msg": "已是第一题" };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                    return;
                }
                _this.start -= 1.0;
                $("#nowindex").text(_this.start + 1.0);
                $('#questioninfo').html(template(_this.templ[_this.momentList[_this.start].type], { question: _this.momentList[_this.start], index: (_this.start + 1.0) }));
                $('#down-question').removeClass('save').text('下一题');
                $('i.currentNUM').text(_this.start + 1.0);
                $('i.totalNUM').text(_this.momentList.length);
                $scroll.scrollTo(0, 0);
                switch (_this.momentList[_this.start].type) {
                    case 4:
                    case 5:
                        _this.tianKongDone();
                        break;
                    default:
                        break;
                }
            });
            $('#overlay').on('singleTap', 'img.delimg', function(e) {
                var $elem = $(this),
                    $elemparent = $elem.parent();
                $elem.remove();
                _Mexam.wend($elemparent)
            });
            DOM.on('singleTap', 'a', function(e) {
                var $elem = $(this);
                if ($elem.data('url')) {
                    var message = { "method": "getDocByUrl", "url": $elem.data('url') };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                }
            });
            // 回答问答题时添加图片
            $('#overlay').on('singleTap', '.add-pic', function(e) {
                e.preventDefault();

                _this.parentelem = e.target.parentElement.parentElement.previousElementSibling;
                plus.nativeUI.actionSheet({
                    cancel: "取消",
                    buttons: [{ title: '拍照' }, { title: '从照片选择' }]
                }, function(e) {

                    if (_this.uploadUrl == "" || _this.prefixUrl == "") {
                        $http.get(app.url.uploadUrl, {}, function(r) {
                            if (!r) {
                                plus.nativeUI.toast('发生未知错误');
                            } else {
                                _this.uploadUrl = r.url;
                                _this.prefixUrl = r.prefixUrl;

                                setTimeout(function() {
                                    _this.selectCallback(e);
                                }, 200)
                            }
                        }, function() {
                            plus.nativeUI.toast('获取数据失败，请检查您的网络设置');
                        });
                    } else {
                        _this.selectCallback(e);
                    }
                });
            });

            $(".ui-Mexam-view").on('singleTap', '.ui-Mexam-answer', function(e) {
                var $elem = $(this),
                    selectclass = 'li.' + $elem.next('li').attr('class').trim(),
                    $elemspan = $elem.find('.arrow');
                if ($elemspan.hasClass('up')) {
                    $elemspan.removeClass('up').addClass('down');
                } else {
                    $elemspan.removeClass('down').addClass('up');
                }
                $(selectclass).toggle();
            });

            return this;
        },
        /**
         * 填空内容填充
         */
        tianKongDone: function() {
            var _this = this,
                $elem = $('.ui-Mexam-blank');
            if (_this.momentList[_this.start].userAnswer === "") {
                _this.momentList[_this.start].userAnswer = null;
            }
            var arranswer = JSON.parse(_this.momentList[_this.start].userAnswer);
            $.each($elem, function(i, v) {
                if (!arranswer) {
                    return;
                }
                if (!arranswer[i] || !arranswer[i].Content) {
                    arranswer[i].Content = "未作答";
                }
                $(v).val(arranswer[i].Content);
            });

            return this;
        },
        /**
         * 单选处理
         */
        danx: function($elem) {
            var _this = this,
                answer = $elem.data('answer');
            $elem.parent().addClass('right').siblings().removeClass('right');
            _this.momentList[_this.start].userAnswer = String(answer);

            return this;
        },
        helper: function() {

            var _this = this,
                letter = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];
            //对字符串进行编码
            template.config('escape', false);
            //替换img标签
            template.helper('questionType', function(i) {
                var type = ['', '单选题', '多选题', '判断题', '填空题', '填空题', '问答题', '匹配题', '阅读理解', '完形填空', '文件作答题', '视听题'];
                return type[Number(i)];
            });
            template.helper('itoCharAB', function(i) {

                return letter[Number(i)];
            });
            template.helper('contenthasTK', function(val) {
                return val.replace(/\[填空/g, '<input readonly="readonly" type="text" class="ui-Mexam-blank">');
            });
            // template.helper('answertoTKstr', function(val) {
            //     if (!val) {
            //         return;
            //     }
            //     var answer = [];
            //     $.each(JSON.parse(val), function(i, v) {
            //         answer.push(v.Content);
            //     });
            //     return answer.join();
            // });
            template.helper('answertoCharAB', function(val, type) {
                if (type == 3) {
                    return val == 1 ? "正确" : "错误";
                }
                var arr = [];
                try {
                    $.each(val.split(","), function(i, v) {
                        var moometstr = letter[v];
                        arr[i] = moometstr == undefined ? v : moometstr;
                    });
                } catch (e) {

                }

                return arr.join();
            });
            template.helper('contentPipeiSelect', function(i, index, val) {
                if (val === "") {
                    return false;
                }
                var array_userAnswer = String(val).split(',');
                if (String(i) == array_userAnswer[index]) {
                    return true
                } else {
                    false;
                }

            });
            template.helper('JSONparse', function(val) {
                try {
                    return JSON.parse(val)
                } catch (e) {
                    return []
                }

            });

            template.helper('wendaAnswerImg', function(val) {
                if (!val) {
                    return;
                }
                var dataUser = val.split(','),
                    $image = '';
                $.each(dataUser, function(i, v) {
                    $image += '<img class="delimg" src="' + v + '">';
                });
                return $image
            });
            template.helper('wenjianJson', function(val) {
                if (!val) {
                    val = null;
                }
                return JSON.parse(val)
            });
            //填空题答案处理
            template.helper('TKAswer', function(i, userAnswer) {
                try {
                    var array_userAnswer = JSON.parse(userAnswer)
                    return array_userAnswer[i]["Content"]
                } catch (error) {
                    return ""
                }
            });
            template.helper('iscorrect', function(i, answer, userAnswer) {

                if (!userAnswer) {
                    return "";
                }
                var array_userAnswer = userAnswer.split(','),
                    array_answer = answer.split(',');
                if ($.inArray(String(i), array_userAnswer) > -1) {
                    if ($.inArray(String(i), array_answer) > -1) {
                        return 'right';
                    } else {

                        return 'error';
                    }
                }
                return "";
            });
            return this;
        },
        /**
         * 载入 
         * @return {null}
         */
        init: function() {
            this.openClassId = "";
            this.courseOpenId = "";
            this.homeWorkId = "";
            this.stuId = "";
            this.homeworkStuId = "";
            this.templ = ['question-danx-duox-pand', 'question-danx-duox-pand', 'question-danx-duox-pand', 'question-danx-duox-pand', 'question-tiankong', 'question-tiankong', 'question-wenda', 'question-pipei', 'question-yuedu', 'question-yuedu', 'question-wenjian', 'question-yuedu'];
            this.parentelem = '';

            //临时容器
            this.momentList = [];
            this.start = 0;

            this.isSend = false;
            this.helper().events();

            return this;
        }
    };


    assignmenthandleRecord.init();
    window.assignmenthandleRecord = assignmenthandleRecord

}(mui, Zepto));