(function($M, $) {
    var voteResult = {

        /**
         * 获取投票结果信息
         * @return this
         */
        get: function(r, state) {
            var _this = this;
            if (state == 1) {
                _this.index = "未开始"
            } else if (state == 2) {
                _this.index = "已开始"
            } else {
                _this.index = "已结束"
            }
            var jsonObj = [];
            if (r.voteInfo.DataJson) {
                jsonObj = JSON.parse(r.voteInfo.DataJson)
            }
            if (r.voteOptionStatic) {
                var arr_name = [],
                    totalvotestuCount = 0.0,
                    arr_data = [];
                _this.stuCountList = r.voteOptionStatic;
                $.each(r.voteOptionStatic, function(i, v) {
                    arr_name.push(v.VoteContent);
                    totalvotestuCount = totalvotestuCount + v.StuCount;
                    arr_data.push({ name: v.VoteContent, value: v.StuCount });
                });

                var momentarr = [];

                $.each(_this.stuCountList, function(i, v) {
                    if (totalvotestuCount === 0) {
                        momentarr.push({ name: v.VoteContent, value: 0 });
                    } else {
                        var ration = (v.StuCount / totalvotestuCount * 100).toFixed(2);
                        momentarr.push({ name: v.VoteContent, value: ration });
                    }
                });
                _this.rationList = momentarr;
            }
            var html = template('tmpl-vote-result', { index: _this.index, voteInfo: r.voteInfo, answer: jsonObj });
            $('#vote-result').html(html);

            _this.charts(momentarr, arr_data);
            _this.me && _this.me.resetload();
            return this;
        },


        /**
         * 事件绑定
         * @return this
         */
        events: function() {
            var _this = this;
            // 模拟滚动
            var $scroll = $M('.mui-scroll-wrapper').scroll();
            $('#vote-result').on('touchend', '.discuss-img', function() {
                var url = $(this).data('url');
                var message = { "method": "previewImg", "url": url };
                window.webkit.messageHandlers.interOp.postMessage(message);
            });
            $('#class-scroll').dropload({
                domUp: {
                    domClass: 'dropload-up',
                    domRefresh: '<div class="dropload-refresh">↓ 下拉可以刷新</div>',
                    domUpdate: '<div class="dropload-update">↑ 释放立即刷新</div>',
                    domLoad: '<div class="dropload-load"><span class="loading"></span> 正在刷新中...</div>'
                },
                domDown: {
                    domClass: 'dropload-down',
                    domRefresh: '<div class="dropload-refresh">↑ 上拉加载更多</div>',
                    domLoad: '<div class="dropload-load"><span class="loading"></span> 正在刷新中...</div>',
                    domNoData: '<div class="dropload-noData"></div>'
                },
                loadUpFn: function(me) {
                    _this.me = me
                    var message = { "method": "load" };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                    $scroll.scrollTo(0, 0);
                }
            });
            return this;
        },
        /**
         * 图表渲染
         * @return this
         */
        charts: function(v, arr_data) {
            var _this = this;

            var chart = echarts.init(document.getElementById('chart'));
            var option = {
                title: {
                    text: '',
                    subtext: '',
                    x: 'center'
                },
                color: ['#388cfb', '#f42f35', '#cf3c5c', '#78ba52', '#fb8124', '#fec62e'],
                tooltip: {
                    trigger: 'item',
                    formatter: "{a} <br/>{b} : {c} ({d}%)"
                },
                legend: {
                    orient: 'vertical',
                    left: 'right',
                    top: 'middle',
                    align: 'right',
                    selectedMode: false,
                    formatter: function(name) {
                        var str = 0;
                        $.each(v, function(i, v) {
                            if (v.name == name) {
                                str = v.value;
                            }
                        });
                        return name + str + '%';
                    },
                    data: v
                },
                series: [{
                    name: '',
                    type: 'pie',
                    radius: '60%',
                    center: ['40%', '50%'],
                    label: {
                        normal: {
                            show: false,
                            position: 'outside'
                        }
                    },
                    data: arr_data,
                    itemStyle: {
                        emphasis: {
                            shadowBlur: 10,
                            shadowOffsetX: 0,
                            shadowColor: 'rgba(0, 0, 0, 0.5)'
                        }
                    }
                }]
            };


            chart.setOption(option);
            return this;
        },
        /**
         * 扩展辅助方法
         * @return {this}
         */
        helper: function() {
            var _this = this;
            //对字符串进行编码
            template.config('escape', false);

            template.helper('replace', function(i, v) {
                if (Number(v) == 0) {
                    v = 1;
                }
                var arr = ["正确错误", "正确错误", "赞成反对", "单选", "多选"]
                return arr[i + v - 1];
            });
            template.helper('setCount', function(i) {
                return _this.stuCountList[i]["StuCount"];
            });
            template.helper('setRatio', function(i, v) {

                console.log(i);
                return _this.rationList[i].value;
            });
            return this;
        },
        load: function() {
            var message = { "method": "load" };
            window.webkit.messageHandlers.interOp.postMessage(message);
            return this;
        },
        /**
         * 初始化
         * @return this
         */
        init: function() {
            var _this = this;
            this.voteId = "";
            this.index = "";
            this.activityId = "";
            this.stuCountList = [];
            this.rationList = [];
            this.me = "";
            _this.helper().load().events();
            return this;
        }
    };


    voteResult.init();
    window.voteResult = voteResult

}(mui, Zepto));