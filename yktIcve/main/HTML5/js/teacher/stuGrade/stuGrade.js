/**
 * 学生课程下的成绩查看
 * @param {Object} $M => mui
 * @param {Object} $  => zepto
 * @name  hk
 * @date  2016-04-23
 * @return {Object}
 */
(function($M, $) {


    var grade = {

        /**
         * 分数详情的获取
         * @return {null}
         */
        get: function(data) {
            var _this = this;

            var scoreInfo = [];
            _this.data = data.stuScoreInfo;
            _this.percentScore = {
                onLinePercentScore: (data.stuScoreInfo.onLineScore * data.stuScoreInfo.onLinePercent * 0.01).toFixed(2),
                offLinePercentScore: (data.stuScoreInfo.offLineScore * data.stuScoreInfo.offLinePercent * 0.01).toFixed(2),
                homeWorkPercentScore: (data.stuScoreInfo.homeWorkScore * data.stuScoreInfo.homeWorkPercent * 0.01).toFixed(2),
                examPercentScore: (data.stuScoreInfo.examScore * data.stuScoreInfo.examPercent * 0.01).toFixed(2),
                groupTaskPercentScore: (data.stuScoreInfo.groupTaskScore * data.stuScoreInfo.groupTaskPercent * 0.01).toFixed(2),
                statisticalPercentscore: ((data.stuScoreInfo.onLineScore * data.stuScoreInfo.onLinePercent * 0.01) + (data.stuScoreInfo.offLineScore * data.stuScoreInfo.offLinePercent * 0.01) +
                    (data.stuScoreInfo.homeWorkScore * data.stuScoreInfo.homeWorkPercent * 0.01) + (data.stuScoreInfo.examScore * data.stuScoreInfo.examPercent * 0.01) + (data.stuScoreInfo.groupTaskScore * data.stuScoreInfo.groupTaskPercent * 0.01)).toFixed(2),
                totalScore: data.stuScoreInfo.totalScore
            };
            scoreInfo.push((data.stuScoreInfo.onLineScore * data.stuScoreInfo.onLinePercent * 0.01).toFixed(2));
            scoreInfo.push((data.stuScoreInfo.offLineScore * data.stuScoreInfo.offLinePercent * 0.01).toFixed(2));
            scoreInfo.push((data.stuScoreInfo.homeWorkScore * data.stuScoreInfo.homeWorkPercent * 0.01).toFixed(2));
            scoreInfo.push((data.stuScoreInfo.examScore * data.stuScoreInfo.examPercent * 0.01).toFixed(2));
            // scoreInfo.push(data.stuScoreInfo.totalScore + 30);
            scoreInfo.push((data.stuScoreInfo.groupTaskScore * data.stuScoreInfo.groupTaskPercent * 0.01).toFixed(2));
            $('.all_score i').text(data.stuScoreInfo.totalScore);
            setTimeout(function() {
                _this.charts(scoreInfo).events();
            }, 500);



            return this;
        },


        /**
         * 分数雷达图显示
         * @return {null}
         */
        charts: function(data) {
            var maxNum = Math.max.apply(null, data)
            var setting = {
                backgroundColor: '#161627',
                tooltip: {
                    trigger: 'axis',
                    formatter: function(params, ticket, callback) {

                        return '线上:' + ((params.value[0]) * 10).toFixed(0) / 10 + '</br>' +
                            '线下:' + ((params.value[1]) * 10).toFixed(0) / 10 + '</br>' +
                            '作业:' + ((params.value[2]) * 10).toFixed(0) / 10 + '</br>' +
                            '考试:' + ((params.value[3]) * 10).toFixed(0) / 10 + '</br>' +
                            '小组任务:' + ((params.value[4]) * 10).toFixed(0) / 10 + '</br>';
                        // '总分:' + ((params.value[4] - 30) * 10).toFixed(0) / 10 + '</br>';
                    }
                },
                radar: {
                    indicator: [
                        { name: '线上', max: maxNum + 10, min: 0 },
                        { name: '线下', max: maxNum + 10, min: 0 },
                        { name: '作业', max: maxNum + 10, min: 0 },
                        { name: '考试', max: maxNum + 10, min: 0 },
                        { name: '小组任务', max: maxNum + 10, min: 0 },
                        // { name: '总分', max: 130, min: 30 },rgb(165,165,166)
                    ],
                    shape: 'circle',
                    splitNumber: 1,
                    name: {
                        textStyle: {
                            color: '#FFF',
                            fontSize: '10'
                        }
                    },
                    splitLine: {
                        lineStyle: {
                            color: [
                                'rgba(53,53,67, 1)'
                            ].reverse()
                        }
                    },
                    splitArea: {
                        show: false
                    },
                    axisLine: {
                        lineStyle: {
                            color: 'rgba(53,53,67, 0.5)'
                        }
                    }
                },
                series: [{
                    type: 'radar',
                    tooltip: {
                        trigger: 'item'
                    },
                    lineStyle: {
                        normal: {
                            width: 1,
                            opacity: 0.5
                        }
                    },
                    data: [{
                        value: data,
                        label: {
                            normal: {
                                show: true,
                                textStyle: {
                                    color: '#E36A6B',
                                    fontSize: '14'
                                },
                                formatter: function(params) {
                                    return ((params.value) * 10).toFixed(0) / 10;
                                }
                            }
                        }
                    }],
                    areaStyle: {
                        normal: {
                            opacity: 1,
                            color: '#0CC496'
                        }
                    }
                }]
            };

            var chart = echarts.init(document.getElementById('chart'));
            chart.setOption(setting);

            return this;
        },
        load: function() {
            var message = { "method": "load" };
            window.webkit.messageHandlers.interOp.postMessage(message);
            return this;
        },
        /**
         * 载入
         * @return {null}
         */
        init: function() {

            this.load();

            return this;
        }
    };


    grade.init();

    window.grade = grade;

}(mui, Zepto));