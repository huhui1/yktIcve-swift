(function($M, $) {

    var errorTitle = {

        /**
         * 获取错题详情
         * @return {this}
         */
        get: function(r) {
            var _this = this;
            _this.questionType = r.questionInfo.questionType;
            var numtostr = ["一", "二", "三", "四", "五", "六", "七", "八", "九", "十"];
            if (r.questionInfo.questionType == 8 || r.questionInfo.questionType == 9 || r.questionInfo.questionType == 11) {
                $.each(r.questionInfo.subQuestionList, function(childindex, childval) {
                    if (childval.dataJson === "") {
                        childval.dataJson = null;
                    }
                    var datajson = JSON.parse(childval.dataJson);
                    r.questionInfo.subQuestionList[childindex].dataJson = datajson;

                });
            }
            if (r.questionInfo.dataJson == "") {
                r.questionInfo.dataJson = null;
            }
            if (r.questionInfo.questionType == 3) {
                r.questionInfo.dataJson = '[{ "SortOrder": "错误", "Content": "错误", "IsAnswer": "" }, { "SortOrder": "正确", "Content": "正确", "IsAnswer": "" }]';
            }
            if (r.questionInfo.questionType == 4 || r.questionInfo.questionType == 5) {
                r.questionInfo.title = r.questionInfo.title.replace(/<img class="questionIndex" [^>]*src=['"]([^'"]+)[^>]*>/gi, '[填空').replace(/<button/gi, '<span').replace(/<\/button>/gi, '</span>');
            }
            if (r.questionInfo.questionType < 12) {
                _this.momentList = {
                    id: r.questionInfo.questionId,
                    paperStuQuestionId: r.questionInfo.paperStuQuestionId,
                    answer: r.questionInfo.answer,
                    title: r.questionInfo.title,
                    content: r.questionInfo.questionType > 7 ? r.questionInfo.subQuestionList : JSON.parse(r.questionInfo.dataJson == '' ? null : r.questionInfo.dataJson),
                    type: r.questionInfo.questionType,
                    ztWay: 2,
                    analysis: r.questionInfo.resultAnalysis,
                    optionAnswer: r.questionInfo.questionType == 7 ? JSON.parse(r.questionInfo.answer) : ''
                };
            }
            $('#questioninfo').html(template(_this.templ[_this.momentList.type], { question: _this.momentList }));
            if (_this.momentList.type == 4 || _this.momentList.type == 5) {
                _this.tianKongDone();
            }

            return this;
        },
        getUrl: function(id) {
            var _this = this;
            $http.post(app.teacherAPI.Homework.getFileHomeworkUrlById, { Id: id }, function(r) {
                if (r.code == 1) {
                    var elem = JSON.parse(r.url),
                        pageurl = '',
                        vid = '',
                        category = elem.category,
                        args = elem.args,
                        isH5 = elem.isH5,
                        h5PreviewUrl = elem.h5PreviewUrl,
                        extension = elem.extension,
                        urls = elem.urls;
                    if (category == "video") {
                        pageurl = '/view/teacher/video-controls/attachHomeworkVideo.html';
                        vid = 'teacher-attachHomeworkVideo';
                    } else if (category == "mp3") {
                        pageurl = '/view/teacher/audio-controls/attachmentAudio.html';
                        vid = 'teacher-attachmentAudio';
                    } else if (category == "img" || category == "office" || category == "ppt") {
                        pageurl = '/view/teacher/preview/attachmentPreview.html';
                        vid = 'teacher-attachmentPreview';
                    } else {
                        // plus.nativeUI.toast('暂不支持查看，请前往网页查看！');
                        return;
                    }
                    setTimeout(function() {
                        $M.openWindow({
                            url: pageurl,
                            id: vid,
                            extras: {
                                resourceurl: urls,
                                url: urls,
                                type: 123,
                                args: args,
                                isH5: isH5,
                                h5PreviewUrl: h5PreviewUrl,
                                extension: extension,
                                category: category,
                                courseOpenId: _this.courseOpenId,
                                openClassId: _this.openClassId
                            }
                        });

                    }, 100);
                }
            });
        },
        /**
         * 事件绑定
         * @return {this}
         */
        events: function() {
            $M('.mui-scroll-wrapper').scroll();
            var _this = this,
                DOM = $('#questioninfo');
            DOM.on('singleTap', 'img', function(e) {
                var $elem = $(this),
                    id = $elem.data('id'),
                    url = $elem.attr('src');
                if ($elem.hasClass('preview') && id) {
                    var message = { "method": "getUrlById", "Id": id };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                } else if ($elem.hasClass('video')) {
                    var $elem = $(this),
                        resourceurl = {
                            preview: $elem.attr('data-videourl') + '/360p.MP4'
                        };
                    setTimeout(function() {
                        $M.openWindow({
                            url: '/view/teacher/video-controls/attachHomeworkVideo.html',
                            vid: 'teacher-attachHomeworkVideo',
                            extras: {
                                resourceurl: resourceurl
                            }
                        });
                    }, 300);
                } else {
                    if (url) {
                        message = { "method": "preview", "url": url };
                        window.webkit.messageHandlers.interOp.postMessage(message);
                    }

                }

            });


            DOM.on('singleTap', 'a', function(e) {
                var $elem = $(this);
                if ($elem.data('url')) {
                    var message = { "method": "getFileInfoByUrl", "url": $elem.data('url') };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                }
            });
            $(".ui-Mexam-view").on('singleTap', '.ui-Mexam-answer', function(e) {
                var $elem = $(this),
                    selectclass = 'li.' + $elem.next('li').attr('class').trim(),
                    $elemspan = $elem.find('.arrow');
                if ($elemspan.hasClass('up')) {
                    $elemspan.removeClass('up').addClass('down');
                } else {
                    $elemspan.removeClass('down').addClass('up');
                }
                $(selectclass).toggle();
            });

            //作答记录
            $('.responseRecord').on('singleTap', function() {
                $M.openWindow({
                    url: '/view/teacher/errorTitle/errorTitleStudent.html',
                    id: 'teacher-errorTitle-answerRecord',
                    extras: {
                        questionId: _this.questionId,
                        courseOpenId: _this.courseOpenId,
                        openClassId: _this.openClassId,
                        questionType: _this.questionType
                    }
                });
            });
            return this;
        },
        /**
         * 填空内容填充
         */
        tianKongDone: function() {
            var _this = this,
                $elem = $('.ui-Mexam-blank');
            if (_this.momentList[_this.start].userAnswer === "") {
                _this.momentList[_this.start].userAnswer = null;
            }
            var arranswer = JSON.parse(_this.momentList[_this.start].userAnswer);
            $.each($elem, function(i, v) {
                if (!arranswer) {
                    return;
                }
                if (!arranswer[i] || !arranswer[i].Content) {
                    arranswer[i].Content = "未作答";
                }
                $(v).val(arranswer[i].Content);
            });

            return this;
        },
        /**
         * 单选处理
         */
        danx: function($elem) {
            var _this = this,
                answer = $elem.data('answer');
            $elem.parent().addClass('right').siblings().removeClass('right');
            _this.momentList[_this.start].userAnswer = answer;

            return this;
        },
        helper: function() {

            var _this = this,
                letter = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];
            //对字符串进行编码
            template.config('escape', false);
            //替换img标签
            template.helper('questionType', function(i) {
                var type = ['', '单选题', '多选题', '判断题', '填空题', '填空题', '问答题', '匹配题', '阅读理解', '完形填空', '文件作答题', '视听题'];
                return type[Number(i)];
            });
            template.helper('itoCharAB', function(i) {

                return letter[Number(i)];
            });
            template.helper('contenthasTK', function(val) {
                return val.replace(/\[填空/g, '<input readonly="readonly" type="text" class="ui-Mexam-blank">');
            });
            template.helper('answertoTKstr', function(val) {
                if (!val) {
                    return;
                }
                var answer = [];
                $.each(JSON.parse(val), function(i, v) {
                    answer.push(v.Content);
                });
                return answer.join();
            });
            template.helper('answertoCharAB', function(val, type) {
                if (type == 3) {
                    return val == 1 ? "正确" : "错误";
                }
                var arr = [];
                $.each(val.split(","), function(i, v) {
                    var moometstr = letter[v];
                    arr[i] = moometstr == undefined ? v : moometstr;
                });
                return arr.join();
            });

            return this;
        },
        localPlay: function(items, isLocal) {

            var _this = this,
                url = items.data('mobileurlpreview'),
                type = items.data('doctype');
            var resourceurl = {
                args: { page_count: items.data('mobileurlpagecount') },
                category: items.data('doctype'),
                extension: items.data('doctype'),
                urls: {
                    preview: items.data('mobileurlpreview'),
                    status: items.data('mobileurlpreview').replace(type, type + "/status"),
                }
            }
            if (!url) {
                // plus.nativeUI.toast('当前文件不存在或者已损坏');
                return;
            }

            if (type == 'mp4') {
                // 打开新窗口
                setTimeout(function() {
                    $M.openWindow({
                        url: '/view/teacher/video-controls/attachHomeworkVideo.html',
                        id: 'teacher-attachHomeworkVideo',
                        extras: {
                            resourceurl: resourceurl.urls,
                            courseOpenId: _this.courseOpenId,
                            openClassId: _this.openClassId,
                            fromCache: isLocal
                        },
                        show: {
                            aniShow: 'slide-in-right',
                            duration: 300
                        }
                    });
                }, 0);

            } else if (type == 'office' || type == 'ppt' || type == 'pptx' || 'docx' || 'doc') {

                setTimeout(function() {
                    $M.openWindow({
                        url: '/view/teacher/preview/attachmentPreview.html',
                        id: 'teacher-attachmentPreview',
                        extras: {
                            resourceurl: resourceurl.urls,
                            args: resourceurl.args,
                            extension: items.data('doctype'),
                            category: items.data('doctype'),
                            courseOpenId: _this.courseOpenId,
                            openClassId: _this.openClassId
                        },
                        show: {
                            aniShow: 'slide-in-right',
                            duration: 300
                        }
                    });
                }, 0);
            } else if (type == 'mp3') {
                setTimeout(function() {
                    $M.openWindow({
                        url: '/view/teacher/audio-controls/attachmentAudio.html',
                        id: 'teacher-attachmentAudio',
                        extras: {
                            courseOpenId: _this.courseOpenId,
                            openClassId: _this.openClassId,
                            resourceurl: resourceurl.urls,
                            isLocal: false
                        },
                        show: {
                            aniShow: 'slide-in-right',
                            duration: 300
                        }
                    });
                }, 0);
            } else {
                // plus.nativeUI.toast('当前资源不支持预览');
            }

            return this;
        },
        load: function() {
            var message = { "method": "load" };
            window.webkit.messageHandlers.interOp.postMessage(message);
            return this;
        },
        /**
         * 载入 
         * @return {null}
         */
        init: function() {
            this.questionType = '';
            this.templ = ['question-danx-duox-pand', 'question-danx-duox-pand', 'question-danx-duox-pand', 'question-danx-duox-pand', 'question-tiankong', 'question-tiankong', 'question-wenda', 'question-pipei', 'question-yuedu', 'question-yuedu', 'question-wenjian', 'question-yuedu'];
            this.parentelem = '';
            //临时容器
            this.momentList = "";
            this.isSend = false;
            this.helper().load().events();

            return this;
        }
    };


    errorTitle.init();
    window.errorTitle = errorTitle

}(mui, Zepto));