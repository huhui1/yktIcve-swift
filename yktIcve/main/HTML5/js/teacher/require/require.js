(function($M, $) {
    var requireinfo = {
        pushSocket: function() {
            var _this = this;

            return this;
        },
        /**
         * 获取数据
         * @return {this}
         */
        get: function(r, userId) {
            var _this = this,
                arr = [];
            _this.requireId = r.requireInfo.RequireId;
            _this.$userid = userId;

            $.each(r.requireInfo.DocJson, function(i, v) {
                arr.push({
                    src: v.docPreview,
                    oss: v.docOssPreview
                })
            });

            $('#topice').html(template('topice-tpl', { requireInfo: r.requireInfo, imgdata: arr }));
            if (r.requireInfo.replyList.length) {
                $('#list').html(template('list-tpl', { list: r.requireInfo.replyList, userId: _this.$userid }));
            } else {
                $('#list').html('<li class="mui-table-view-cell mui-media mui-text-center data-loading"><a href="javascript:;">还没有人评论，赶紧来评论吧！</a></li>');
            };
            $('.operates, .select-btn').hide();
            _this.me && _this.me.resetload();
            return this;
        },
        batchMarking: function(score) {
            var _this = this;
            var list = $('[name="checkOne"]'),
                check_val = [];
            $.each(list, function(i, v) {
                if (v.checked) {
                    check_val.push(v.value);
                }
            });
            if (check_val.length == 0) {
                $('input').fadeToggle();
                var message = { "method": "showMsg", "msg": "请选择学生" };
                window.webkit.messageHandlers.interOp.postMessage(message);
                return;
            }
            $http.post(app.teacherAPI.FaceTeach.saveRequireStuScore, {
                requireId: _this.requireId,
                requireStuIds: check_val.join(","),
                score: score
            }, function(r) {
                if (r.code == 1) {
                    var message = { "method": "showMsg", "msg": "评分成功" };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                    $('.select-btn').prop("checked", false);
                    _this.typeState = false;
                    var message = { "method": "load" };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                } else {
                    plus.nativeUI.toast(r.msg);
                }
            });
        },
        /**
         * 事件绑定
         * @return {this}
         */
        events: function() {
            var _this = this;

            var $scroll = $M('.mui-scroll-wrapper').scroll();
            $('#content-scroll').dropload({
                domUp: {
                    domClass: 'dropload-up',
                    domRefresh: '<div class="dropload-refresh">↓ 下拉可以刷新</div>',
                    domUpdate: '<div class="dropload-update">↑ 释放立即刷新</div>',
                    domLoad: '<div class="dropload-load"><span class="loading"></span> 正在刷新中...</div>'
                },
                loadUpFn: function(me) {
                    _this.me = me;
                    _this.load();
                    $scroll.scrollTo(0, 0);
                }
            });


            // 点击留言操作
            $('#list').on('singleTap', 'li.parent', function(e) {
                var has, $target = $(e.target),
                    $elem = $(this),
                    replyid = $elem.attr('data-replyid'),
                    userid = $elem.attr('data-userid'),
                    content = $elem.attr('data-content'),
                    docJson = $elem.attr('data-docjson'),
                    dateCreated = $elem.find('.time').text(),
                    creatorName = $elem.find('.CreatorName').text(),
                    avator = $elem.find('.avator').attr('src'),
                    $frame = $elem.find('.mui-frame');
                if ($target.hasClass('disscuss_check')) {
                    return;
                }

                var url = "";
                if (docJson) {
                    if (JSON.parse(docJson)) {
                        if (JSON.parse(docJson)[0]) {
                            url = JSON.parse(docJson)[0].docOssPreview
                        }
                    }
                }
                // 页面跳转进评论详情页
                var extras = {
                    courseOpenId: _this.courseOpenId,
                    openClassId: _this.openClassId,
                    discussId: _this.discussId,
                    activityId: _this.activityId,
                    state: _this.state,
                    parentId: replyid,
                    dateCreated: dateCreated,
                    content: content,
                    url: url,
                    creatorName: creatorName,
                    avator: avator
                }

                if ($target.hasClass('icon-appraise') || $target.hasClass('appraise') || $target.hasClass('score')) {
                    _this.targetSocre = $(this).find('div.appraise');
                    var message = { "method": "makeSoce", "id": replyid };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                } else {
                    var message = { "method": "details", "data": JSON.stringify(extras) };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                }

            });
            // 图片预览
            $('#topice').on('singleTap', 'img', function() {

                var url = $(this).data('oss');
                if (url) {
                    var message = { "method": "preview", "url": url };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                }

            });

            $('#list').on('change', 'input', function() {
                var count = 0;

                if (this.checked) {
                    $('#list input').each(function() {
                        if (this.checked)
                            count++;
                    });
                    if (count == $('#list input').length) {
                        $('.select-btn').prop("checked", true);
                        _this.typeState = true;
                    }
                } else {
                    $('.select-btn').prop("checked", false);
                    _this.typeState = false;
                }

            });
            //退出键盘
            $('.delete_score').on('singleTap', function() {
                $('.mui-backdrop').addClass('mui-hidden');
                $('.keyup_score').removeClass('show');

                $('.mui-bar.mui-bar-tab').removeClass('noshow');
            });
            // 隐藏评分键盘
            $('.mui-backdrop').on('touchend', function() {
                $('.mui-backdrop').addClass('mui-hidden');
                $('.keyup_score').removeClass('show');

                $('.mui-bar.mui-bar-tab').removeClass('noshow');
            });
            $('#list').off('longTap').on('longTap', 'li', function() {
                $('input').fadeToggle();
                // $('div.operates').fadeToggle();
                $('input').next().toggleClass('changeclass');
                var message = { "method": "longTap" };
                window.webkit.messageHandlers.interOp.postMessage(message);
            });

            return this;
        },
        checkAll: function() {
            var _this = this;
            var list = $('[name="checkOne"]');
            _this.typeState = !_this.typeState;
            list.prop("checked", _this.typeState);
            return this;
        },
        cancelAll: function() {
            var _this = this;
            $('input').fadeToggle();
            return this;
        },
        setSocre: function() {
            var _this = this;
            $('.mui-backdrop').removeClass('mui-hidden');
            $('.keyup_score').addClass('show');
            //添加评分
            $('.score_info').off('singleTap').on('singleTap', function() {
                var score = $(this).text();
                _this.batchMarking(score);
                $('.mui-backdrop').addClass('mui-hidden');
                $('.keyup_score').removeClass('show');
            });
            return this;
        },
        load: function() {
            var message = { "method": "load" };
            window.webkit.messageHandlers.interOp.postMessage(message);
            return this;
        },
        setOneScore: function(r) {
            var _this = this;
            _this.targetSocre.find('span').text(r);
            return this;
        },
        /**
         * 增加辅助方法
         * @return {this}
         */
        helper: function() {
            var _this = this;
            //对字符串进行编码
            template.config('escape', false);
            //时间格式转化
            template.helper('dateFormat', function(date, format) {
                if (date == 0)
                    date = new Date();
                else if (date.indexOf("/Date(") > -1) {
                    var date = new Date(parseInt(date.replace("/Date(", "").replace(")/", "") - 8 * 60 * 60 * 1000, 10));
                } else
                    date = new Date(date);

                var map = {
                    "M": date.getMonth() + 1, //月份
                    "d": date.getDate(), //日
                    "h": date.getHours(), //小时
                    "m": date.getMinutes(), //分
                    "s": date.getSeconds(), //秒
                    "q": Math.floor((date.getMonth() + 3) / 3), //季度
                    "S": date.getMilliseconds() //毫秒
                };
                format = format.replace(/([yMdhmsqS])+/g, function(all, t) {
                    var v = map[t];
                    if (v !== undefined) {
                        if (all.length > 1) {
                            v = '0' + v;
                            v = v.substr(v.length - 2);
                        }
                        return v;
                    } else if (t === 'y') {
                        return (date.getFullYear() + '').substr(4 - all.length);
                    }
                    return all;
                });
                return format;
            });
            //替换img标签
            template.helper('replaceImg', function(val) {
                return $('<div/>').html(val.replace(/<img [^>]*src=['"]([^'"]+)[^>]*>/gi, "[图片]")).text();
            });
            //替换引号标签
            template.helper('replaceUnquote', function(val) {
                return val.replace(/\"/g, "'");
            });
            template.helper('jsontostr', function(v) {
                return JSON.stringify(v);
            });
            return this;
        },
        /**
         * 载入
         * @return {null}
         */
        init: function() {
            this.requireInfo = "";
            this.typeState = false;
            this.requireId = "";
            this.helper();
            this.me = "";
            this.targetSocre = "";
            this.load().events();
        }
    };


    requireinfo.init();
    window.requireinfo = requireinfo;

}(mui, Zepto));