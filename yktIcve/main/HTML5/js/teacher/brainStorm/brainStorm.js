(function($M, $) {
    var brainStorm = {

        get: function(DocJson, Title, Content, datalist) {
            var _this = this,
                data = [],
                arr = [];
            $.each(DocJson, function(i, v) {
                arr.push({
                        src: v,
                        ossSrc: v
                    }

                )
            });
            _this.list = datalist;
            $("#stormTitle").text(Title);
            $('#stormContent').html(template('img-list', { imgdata: arr, content: Content }))
            $('#stormInfo').html(template('stustorminfo-list', { list: datalist }));
            _this.me && _this.me.resetload();
            return this;
        },
        events: function() {
            var _this = this;
            var $scroll = $M('.mui-scroll-wrapper').scroll();
            $('.mui-scroll-wrapper').dropload({
                domUp: {
                    domClass: 'dropload-up',
                    domRefresh: '<div class="dropload-refresh">↓ 下拉可以刷新</div>',
                    domUpdate: '<div class="dropload-update">↑ 释放立即刷新</div>',
                    domLoad: '<div class="dropload-load"><span class="loading"></span> 正在刷新中...</div>'
                },
                loadUpFn: function(me) {
                    _this.me = me;
                    _this.load();
                    $scroll.scrollTo(0, 0);
                }
            });
            $("#stormContent").on('singleTap', 'img', function() {
                var $elem = $(this);
                // $M.fire(mineView, 'socket.emit', { params: { type: 'openBoard', fromRes: _this.fromRes, courseId: _this.courseId, img: url } });
                var message = { "method": "previewimg", "url": $elem.data('oss') };
                window.webkit.messageHandlers.interOp.postMessage(message);
            });

            //查看头脑风暴详情
            $('#stormInfo').on('singleTap', '.infomsg', function(e) {

                var $elemtarget = $(e.target),
                    index = $(this).data('index'),
                    name = $(this).data('stuname'),
                    id = $(this).data('id'),
                    appreciate = $(this).find('span.fenshu').text(),
                    content = _this.list[Number(index)].Content,
                    docJson = $(this).attr('data-docJson');

                if ($elemtarget.hasClass('fenshu')) {
                    return;
                }
                if ($elemtarget.hasClass('checkOne')) {
                    return;
                }

                var datajson = {
                    content: content,
                    imgUrl: JSON.parse(docJson)[0] ? (JSON.parse(docJson)[0].docOssPreview ? JSON.parse(docJson)[0].docOssPreview : "") : "",
                    name: name,
                    id: id
                }
                var data = JSON.stringify(datajson)
                var message = { "method": "stormDetails", "index": String(index) };
                window.webkit.messageHandlers.interOp.postMessage(message);

            });
            //单选按钮点击
            $('.mui-table-view.add').on('touchend', '.checkOne', function() {
                var $ele = $(this),
                    radioSelect = $ele.prop('checked');
                if (radioSelect) {
                    $(this).prop('checked', true);
                } else {
                    $(this).prop('checked', false);
                }
            });
            //学生评分
            $(".mui-table-view.add").on("touchend", ".icon-appraise", function() {
                _this.parentsEle = $(this).parents('li');
                _this.replyId = _this.parentsEle.attr('data-id');
                _this.name = _this.parentsEle.attr('data-stuname');
                var message = { "method": "singleCheckScore", "replyId": _this.replyId, name: _this.name };
                window.webkit.messageHandlers.interOp.postMessage(message);

            });

            //点击选择分数
            $('.score_list').on('singleTap', 'li', function() {
                var $ele = $(this);

                if ($ele.hasClass('delete_score')) {
                    $('.mui-backdrop').addClass('mui-hidden');
                    $('.keyup_score').removeClass('show');
                } else {
                    $ele.addClass('score_touch');
                    //评分
                    if (_this.selectType == 1) {
                        _this.grade(_this.parentsEle, _this.replyId, $ele.text(), _this.name);
                    } else {
                        var checkList = $('[name="checkOne"]'),
                            check_val = [];
                        for (var k in checkList) {
                            if (checkList[k].checked) {
                                check_val.push(checkList[k].value);
                            }
                        }
                        if (check_val.length == 0) { plus.nativeUI.toast("请选择要打分的学生!"); return }
                        _this.batchMarking(check_val, $ele.text());
                    }
                }
            });
            return this;

        },
        checkAll: function() {
            var _this = this;
            var list = $('[name="checkOne"]');
            list.prop("checked", _this.typeState);
            _this.typeState = !_this.typeState;
            return this;
        },
        batchScore: function() {
            var _this = this;
            var checkList = $('[name="checkOne"]'),
                check_val = [];
            for (var k in checkList) {
                if (checkList[k].checked) {
                    check_val.push(checkList[k].value);
                }
            }
            var message = { "method": "allcheckScore", "replyId": check_val.join(","), "count": String(check_val.length) };
            window.webkit.messageHandlers.interOp.postMessage(message);
            return this;
        },
        score: function(score) {
            var _this = this
            $('.fenshu', _this.parentsEle).addClass('active');
            $('span.fenshu', _this.parentsEle).text(score);
            return this;
        },
        load: function() {
            var message = { "method": "load" };
            window.webkit.messageHandlers.interOp.postMessage(message);
            return this;
        },
        /**
         * 初始化
         * @return this
         */
        init: function() {
            var _this = this;
            this.list = [];
            this.me = "";
            this.deviceName = navigator.userAgent.toLowerCase();
            this.helper().load().events();
            return this;
        },

        /**
         * 模版扩展方法
         * @return this
         */
        helper: function() {
            var _this = this;

            //对字符串进行编码
            // template.config('escape', false);
            //替换img标签
            template.helper('replaceImg', function(val) {
                return $('<div/>').html(val.replace(/<img [^>]*src=['"]([^'"]+)[^>]*>/gi, "[图片]")).text();

            });
            template.helper('jsontostr', function(v) {
                return JSON.stringify(v);
            });
            template.helper('toclass', function(i) {
                var classarr = ["t-one", "t-two", "t-three", "t-four"];
                return classarr[Number(i) % 4];
            });
            template.helper('ispad', function() {
                return _this.deviceName.indexOf('ipad') > -1 ? "stustorminfoipad" : "stustorminfo";
            });
            template.helper('isIpad', function() {
                return _this.deviceName.indexOf('ipad') > -1 ? "score_wrapStorm" : "score_wrap";
            });
            template.helper('isMinIpad', function() {
                return _this.deviceName.indexOf('ipad') > -1 ? "ipad_score" : "iphone_score";
            });
            return this;
        }


    };


    brainStorm.init();
    window.brainStorm = brainStorm

}(mui, Zepto));