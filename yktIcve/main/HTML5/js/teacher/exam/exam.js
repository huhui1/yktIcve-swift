/**
 * 测验列表
 * @param {Object} $M => mui
 * @param {Object} $  => zepto
 * @name  zqyou
 * @date  2017-02-07
 * @return {Object}
 */

(function($M, $) {

    $M.init({
        beforeback: function() {

        }
    });

    var test = {
        /**
         * 获取测验信息
         * @return this
         */
        get: function(me) {
            var _this = this;

            $http.post(app.teacherAPI.FaceTeach.getClassTestList, { openClassId: _this.openClassId, activityId: _this.activityId, courseOpenId: _this.courseOpenId, schoolId: _this.$user.schoolId, classState: _this.classState }, function(data) {
                if (!data) {
                    plus.nativeUI.toast('发生未知错误');
                } else if (data.code == 1) {
                    $('#mask').addClass('mui-hidden');
                    _this.studycount = data.openClassStuCount;
                    var html = template('tmpl-examlist', { list: data.list });
                    $('#examlist').html(html);
                    me && me.resetload();
                } else {
                    plus.nativeUI.toast('网络异常');
                }

            });

            return this;
        },


        /**
         * 事件绑定
         * @return this
         */
        events: function() {
            var _this = this;
            $M('.mui-scroll-wrapper').scroll();
            $('.mui-scroll-wrapper').dropload({
                domUp: {
                    domClass: 'dropload-up',
                    domRefresh: '<div class="dropload-refresh">↓ 下拉可以刷新</div>',
                    domUpdate: '<div class="dropload-update">↑ 释放立即刷新</div>',
                    domLoad: '<div class="dropload-load"><span class="loading"></span> 正在刷新中...</div>'
                },
                loadUpFn: function(me) {
                    _this.get(me);
                }
            });

            // 测验详情
            $('#examlist').on('singleTap', '.exam', function() {
                var examid = $(this).data('id'),
                    state = $(this).data('state'),
                    MakeStuCount = $(this).data('makestucount');
                if (state == 1) {
                    // plus.nativeUI.confirm('当前测验未开始,是否开启测验?', function(e) {
                    //     if (e.index == 0) {
                    //         $http.post(app.teacherAPI.FaceTeach.startClassTest, { classTestId: examid }, function(r) {
                    //             if (r.code == 1) {
                    //                 plus.nativeUI.toast('开启测验成功!');
                    //                 _this.get();
                    //             } else {
                    //                 plus.nativeUI.toast(r.msg)
                    //             }
                    //         });
                    //     }
                    // });
                    $M.openWindow({
                        url: '/view/teacher/exam/select-question.html',
                        id: 'teacher-exam-select-question',
                        extras: {
                            testId: examid,
                            activityId: _this.activityId,
                            openClassIds: _this.openClassIds,
                            courseOpenId: _this.courseOpenId,
                            classState: _this.classState,
                            studycount: _this.studycount
                        }
                    });
                    // setTimeout(function() {
                    //     $M.openWindow({
                    //         url: '/view/teacher/exam/create.html',
                    //         id: 'teacher-exam-create',
                    //         extras: {
                    //             testId: examid,
                    //             activityId: _this.activityId,
                    //             openClassId: _this.openClassId,
                    //             courseOpenId: _this.courseOpenId,
                    //             state: state
                    //         }
                    //     });
                    // }, 100);
                } else if (state == 2) {
                    setTimeout(function() {
                        $M.openWindow({
                            url: '/view/teacher/exam/examing.html',
                            id: 'teacher-exam-examing',
                            extras: {
                                examId: examid,
                                activityId: _this.activityId,
                                openClassIds: _this.openClassIds,
                                courseOpenId: _this.courseOpenId,
                                studycount: _this.studycount,
                                isExamCount: MakeStuCount,
                                state: state
                            }
                        });
                    }, 100);
                } else {
                    setTimeout(function() {
                        $M.openWindow({
                            url: '/view/teacher/exam/result.html',
                            id: 'teacher-exam-result',
                            extras: {
                                examId: examid,
                                activityId: _this.activityId,
                                openClassIds: _this.openClassIds,
                                courseOpenId: _this.courseOpenId,
                                state: state
                            }
                        });
                    }, 100);
                }
            });

            //新建测验
            $('#built').on('singleTap', function() {
                // if (_this.faceIsover) {
                //     plus.nativeUI.toast('无法创建，面授已结束！');
                //     return false;
                // } else if (_this.classState == 1 && _this.faceTimeStatus != 1) {
                //     plus.nativeUI.toast("当前面授已开始");
                //     return;
                // } else {
                setTimeout(function() {
                    $M.openWindow({
                        url: '/view/teacher/exam/select-question.html',
                        id: 'teacher-exam-select-question',
                        extras: {
                            activityId: _this.activityId,
                            openClassIds: _this.openClassIds,
                            courseOpenId: _this.courseOpenId,
                            classState: _this.classState,
                            studycount: _this.studycount
                        }
                    });

                }, 200);
                // }
            });
            $('#examlist').on('singleTap', 'div.mui-slider-right > a', function() {
                var id = $(this).attr('data-id');
                plus.nativeUI.confirm('确认要删除本次测验吗？', function(e) {
                    if (e.index === 0) {
                        _this.delete(id);
                    }
                }, '提示');

            });
            // 页面刷新
            window.addEventListener('reload', function() {
                _this.get();
            });

            return this;
        },
        delete: function(id) {
            var _this = this;
            $http.post(app.teacherAPI.FaceTeach.delClassTest, { Id: id }, function(r) {
                if (r.code == 1) {
                    plus.nativeUI.toast("删除成功!");
                    _this.get();
                } else {
                    plus.nativeUI.toast(r.msg);
                }
            });
            return this;
        },
        /**
         * 扩展辅助方法
         * @return {this}
         */
        helper: function() {
            /**
             *讨论状态转换
             *@return str
             **/
            template.helper('examStatus', function(state) {
                var ary0 = ["未发布", "未发布", "进行中", "已结束"];
                return ary0[state];
            });
            /**
             *讨论样式状态转换
             *@return str
             **/
            template.helper('examStatusClass', function(state) {
                var ary0 = ["not-start", "not-start", "under-way", "ended"];
                return ary0[state];

            });
            return this;
        },
        /**
         * 初始化
         * @return this
         */
        init: function() {
            var _this = this;
            this.view = plus.webview.currentWebview();
            this.activityId = this.view.activityId;
            this.studycount = 0;
            this.openClassIds = this.view.openClassIds;
            this.courseOpenId = this.view.courseOpenId;
            this.faceIsover = this.view.faceIsover;
            this.$user = JSON.parse(app.data.get('$cloudClassUser'));
            this.classState = this.view.classState;
            this.faceTimeStatus = this.view.faceTimeStatus;
            _this.helper().get().events();

            return this;
        }
    };

    $M.plusReady(function() {

        test.init();

    });

}(mui, Zepto));