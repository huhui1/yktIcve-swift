/**
 * 随堂检测统计单页面
 * @param {Object} $M => mui
 * @param {Object} $  => zepto
 * @name  zqyou
 * @date  2017-06-08
 * @return {Object}
 */
(function($M, $) {

    $M.init({
        beforeback: function() {
            var view = plus.webview.getWebviewById('mine-list');
            $M.fire(view, 'socket.emit', {
                params: {
                    type: 'questionAnalysisBack',
                    courseId: '',
                    classId: '',
                    cellId: '',
                    examId: ''
                }
            });
        }
    });

    var article = {
        letter: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '未答题'],

        /**
         * 设置图标
         */
        chart: function(data) {
            var _this = this,
                tozimu = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],
                arr = [],
                lets = [];
            $.each(data.dataJson, function(i, v) {
                arr.push((v.StuChoiceCount / data.openClassStuCount * 100).toFixed(2));
                lets.push(tozimu[v.SortOrder]);
            });

            var setting = {
                backgroundColor: '#FFFFFF',

                grid: {
                    x: 35,
                    x2: 10,
                    y: 30,
                    y2: 25
                },
                color: ['#c0e16e', '#6aeb81', '#67c9f5', '#9081d7', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],
                toolbox: {
                    show: false,
                    feature: {
                        mark: {
                            show: true
                        },
                        dataView: {
                            show: true,
                            readOnly: false
                        },
                        magicType: {
                            show: true,
                            type: ['line', 'bar']
                        },
                        restore: {
                            show: true
                        },
                        saveAsImage: {
                            show: true
                        }
                    }
                },
                calculable: false,
                xAxis: [{
                    type: 'category',
                    data: ['A', 'B', 'C', 'D', 'E', 'F']
                }],
                yAxis: [{
                    type: 'value',
                    axisLabel: {
                        formatter: function(value, index) {
                            return value + '%';
                        }
                    }
                }],
                series: [{
                    name: '选项分布',
                    type: 'bar',
                    label: {
                        normal: {
                            show: true,
                            formatter: '{c}%'
                        }
                    },
                    data: arr
                }]
            };
            var option = {
                backgroundColor: '#ffffff',
                color: ['#38d6a7', '#eeeff0', '#937fe8', '#65b3f9', '#f8c948', '#94eff0'],
                tooltip: {
                    show: false,
                    trigger: 'item',
                    formatter: "{b}:{c}({d}%)"
                },
                legend: {
                    show: false
                },
                series: [{
                    name: '正确率',
                    type: 'pie',
                    radius: ['60%', '80%'],
                    avoidLabelOverlap: false,
                    label: {
                        normal: {
                            show: true,
                            formatter: '正确率:' + (data.stuAnwerRightCount / data.openClassStuCount).toFixed(4) * 100 + '%',
                            position: 'center'
                        },
                    },
                    labelLine: {
                        normal: {
                            show: false
                        }
                    },
                    data: [
                        { value: data.stuAnwerRightCount, name: '正确人数' },
                        { value: (data.openClassStuCount - data.stuAnwerRightCount), name: '错误人数' }
                    ]
                }]
            };
            var chart = echarts.init(document.getElementById('chart'));
            chart.setOption(setting);

            var chart1 = echarts.init(document.getElementById('chart1'));
            chart1.setOption(option);
            return this;
        },
        prevquestion: function() {
            var _this = this;
            _this.order--;
            _this.get();
            // $M.fire(view, 'socket.emit', { params: { type: 'questionAnalysis', courseId: _this.courseId, classId: _this.classId, cellId: _this.cellId, examId: _this.examId, order: _this.order } });
            return this;
        },
        nextquestion: function() {
            var _this = this;
            _this.order++;
            _this.get();

            // $M.fire(view, 'socket.emit', { params: { type: 'questionAnalysis', courseId: _this.courseId, classId: _this.classId, cellId: _this.cellId, examId: _this.examId, order: _this.order } });
            return this;
        },
        /**
         * 事件
         * @return {this}
         */
        events: function() {
            var _this = this;
            $M('.mui-scroll-wrapper').scroll();

            // 同屏翻页
            $('.pageMove').on('singleTap', 'span', function() {
                var has = $(this).hasClass('icon-page-up');
                var name = has ? 'pageUp' : 'pageDown';
                var message = { "method": "examPageMove", "name": name };
                window.webkit.messageHandlers.interOp.postMessage(message);

                // $M.fire(view, 'socket.emit', { params: { type: 'examPageMove', name: has ? 'pageUp' : 'pageDown' } });
            });

            //查看公式
            $('.Mexam-article').on('singleTap', 'img', function() {
                var url = $(this).attr('src');
                if (url) {
                    var message = { "method": "previewImg", "url": url };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                }

            });
            $('.Mexam-article').on('singleTap', 'a', function() {
                var $elem = $(this);
                if ($elem.data('url')) {
                    var message = { "method": "getFileInfoByUrl", "url": $elem.data('url') };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                }

            });
            return this;
        },


        get: function() {
            var _this = this,
                questionId = _this.questionList[_this.order - 1].questionId;

            $http.post(app.teacherAPI.FaceTeach.classTestQuestionStatis, {
                activityId: _this.activityId,
                classTestId: _this.classTestId,
                questionId: questionId
            }, function(r) {
                if (r.code > 0) {
                    var arr = ['', '单选题', '多选题', '判断题'];
                    $('.mui-title').text(arr[r.data.questionType]);
                    var message = { "method": "analysis", "data": JSON.stringify(r.data) };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                    //上一题 下一题的现实与隐藏
                    $('.prev-question')[_this.order == 1 && !$('.prev-question').hasClass('mui-hidden') ? 'addClass' : 'removeClass']('mui-hidden');
                    $('.next-question')[_this.order == _this.questionList.length && !$('.next-question').hasClass('mui-hidden') ? 'addClass' : 'removeClass']('mui-hidden');
                    if (_this.order == 1) {
                        $('.next-question').css('width', '100%');
                    } else if (_this.order == _this.questionList.length) {
                        $('.prev-question').css('width', '100%');
                    } else {
                        $('.next-question').css('width', '50%');
                        $('.prev-question').css('width', '50%');
                    };
                    $('.num-show').find('span').text(_this.order);

                    //   _this.option = data.option.split(',').map(function(v) { return Number(v); });
                    r.data.title = r.data.title;
                    //data.letter = _this.letter;
                    // r.data.dataJson = JSON.parse(r.data.dataJson);

                    // $.each(r.data.dataJson, function(index, item) {
                    //     r.data.dataJson[index].Content = item.Content;
                    // });

                    $('#Mexam-list').html(template('Mexam-tpl', { data: r.data, order: _this.order }));
                    _this.chart(r.data);
                }
                $('#mask').addClass('mui-hidden');
            });


            return this;
        },

        /**
         * 扩展辅助方法
         * @return {this}
         */
        helper: function() {
            var _this = this;

            template.config('escape', false);
            template.helper('isActive', function(data) {
                var str;
                $.each(_this.option, function(i, v) {
                    if (v === (data + 1)) {
                        str = 'active';
                        return false;
                    }
                });
                return str;
            });
            template.helper('replaceletter', function(v) {
                var arr = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];
                return arr[v];
            });
            return this;
        },

        load: function() {
            var message = { "method": "load" };
            window.webkit.messageHandlers.interOp.postMessage(message);
            return this;
        },
        getparameter: function(data, activityId, classTestId) {
            var _this = this;
            _this.activityId = activityId;
            _this.questionList = data.questionList;
            _this.classTestId = classTestId
            _this.order = data.order
            _this.questionList = data.questionList
            this.get();
        },
        init: function() {
            this.activityId = "";
            this.questionId = "";
            this.courseOpenId = "";
            this.openClassId = "";
            this.classTestId = "";
            this.order = "";
            this.questionList = "";
            this.stuAnwerRightCount = 0;
            this.openClassStuCount = 0;
            this.helper().load().events();
        }
    };
    article.init();
    window.article = article
}(mui, Zepto));