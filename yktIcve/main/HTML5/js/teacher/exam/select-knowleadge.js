/**
 * 课堂互动，选择题目知识点
 * @param {Object} $M => mui
 * @param {Object} $  => zepto
 * @name  hk
 * @date  2016-11-2
 * @return {Object}
 */
(function($M, $) {

 var knowleadge = {
 
        /**
         * 获取数据
         * @return {this}
        */
        get: function(){
            var _this = this;
 
            $http.get(app.teacherAPI.halltest.list, { courseId: _this.courseId, chapterId: _this.chapterId, sectionId: _this.sectionId}, function(r){
                if(!r){
                    plus.nativeUI.toast('获取题目信息出错');
                }else if(r.code == 1){
                    $('.knowleadge-des').append(template('knowleadge-list',{list: r.list, sectionIndex: _this.sectionIndex, chapterIndex: _this.chapterIndex}));
                }else{
                    plus.nativeUI.toast(r.msg);
                }
            }, function(){
                plus.nativeUI.toast('获取节信息出错，请检查您的网络设置');
            });
 
            return this;
        },

    	/**
         * 事件绑定
         * @return {this}
        */
      	events:function(){
            var _this = this;

            $M('.mui-scroll-wrapper').scroll();
 
            // 查看章下面的题目信息
            $('.chapter-info.info').on('singleTap', function(){
                var name = $('.chapter-name', $(this)).text();
                                       
                $M.openWindow({
                    url: '/view/teacher/exam/select-question.html',
                    id: 'teacher-exam-selectquestion',
                    extras: {
                        courseId: _this.courseId,
                        chapterId: _this.chapterId,
                        name: name,
                        activityId: _this.activityId
                    }
                });
            });
 
            // 查看节下面的题目信息
            $('.section-info.info').on('singleTap', function(){
                var name = $('.chapter-name', $(this)).text();
                                       
                $M.openWindow({
                    url: '/view/teacher/exam/select-question.html',
                    id: 'teacher-exam-selectquestion',
                    extras: {
                        courseId: _this.courseId,
                        chapterId: _this.chapterId,
                        sectionId: _this.sectionId,
                        name: name,
                        activityId: _this.activityId
                    }
                });
                            
            });
 
            //知识点下面的题目信息
            $('.knowleadge-des').on('singleTap', '.knowleadge-info', function(){
                var count = $(this).find('.chapter-num').text(),
                    id = $(this).attr('data-id'),
                    name = $('.chapter-name', $(this)).text(),
                    view = plus.webview.getWebviewById('teacher-exam-selectquestion');
                                    
                if(count == 0){
                    plus.nativeUI.toast('当前章下还未创建题目，请前往www.iclassx.com创建题目', {duration: 'long'});
                    return;
                }
                                    
                if(view) view.close();
                
                setTimeout(function(){
                    $M.openWindow({
                        url: '/view/teacher/exam/select-question.html',
                        id: 'teacher-exam-selectquestion',
                        extras: {
                            courseId: _this.courseId,
                            chapterId: _this.chapterId,
                            sectionId: _this.sectionId,
                            knowledgeId: id,
                            name: name,
                            activityId: _this.activityId || ''
                        }
                    });
                }, 300);
            });
 
            //已选题目
            $('.already-select').on('singleTap', function(){
                var view = plus.webview.getWebviewById('teacher-exam-select-already'),
                    selectIds = app.data.get('selectIds') != ''? JSON.parse(app.data.get('selectIds')): [];

                if(selectIds.length == 0){
                    plus.nativeUI.toast('请添加题目');
                    return;
                }

                if(view) view.close();

                setTimeout(function(){
                    $M.openWindow({
                        url: '/view/teacher/exam/select-already.html',
                        id: 'teacher-exam-select-already',
                        extras: {
                            courseId: _this.courseId,
                            activityId: _this.activityId
                        }
                    });
                }, 300);

            });
 
            //已选题目的显示
            window.addEventListener('showNum', function(e) {
                var num = e.detail.num;
                $('.select-num').text(num);
            }, false);

            return this;
      	},

        /**
         * 事件绑定
         * @return {this}
        */
        set: function(){
            var _this = this, $cha = $('.chapter-info.info'), $sec = $('.section-info.info');
 
            $('.mui-title').text(_this.chapterName);
            $cha.find('.chapter-name').text(_this.chapterName);
            $cha.find('.chapter-num').text(_this.chapterCount);
 
            $sec.find('.chapter-name').text(_this.sectionName);
            $sec.find('.chapter-num').text(_this.sectionCount);
 
            return this;
        },
 
        /**
         * 载入
         * @return {this}
        */
        init: function() {

            this.view = plus.webview.currentWebview();

            this.courseId = this.view.courseId;
            this.chapterId = this.view.chapterId;
            this.chapterName = this.view.chapterName;
            this.chapterCount = this.view.chapterCount;
            this.chapterIndex = this.view.chapterIndex;
            this.sectionName = this.view.sectionName;
            this.sectionCount = this.view.sectionCount;
            this.sectionIndex = this.view.sectionIndex;
            this.sectionId = this.view.sectionId;
 
            this.activityId = this.view.activityId || '';
 
            this.selectIds = app.data.get('selectIds')? JSON.parse(app.data.get('selectIds')): [];
            $('.select-num').text(this.selectIds.length);

            this.set().get().events();

            return this;
        }
    };

    $M.plusReady(function() {
        knowleadge.init();
    });


}(mui, Zepto));
