(function($M, $) {


    var groupTaskPreview = {
        /**
         * 获取小组任务作答记录信息
         * @return this
         */
        get: function(r) {
            var _this = this;

            if (r.code == 1) {
                $('.storm_title').text(r.data.title);
                $('.storm_content').text(r.data.content);
                $('.content').html(r.data.stuAnswerContent);
                $('#test').val(r.data.getScore);
                $('.commentary').html(r.data.comment);
                $('#stormContent').html(template('attachmentList', { list: r.data.questions }));
                $('.pic-info').html(template('stuAttachmentList', { list: r.data.stuAnswerDocJson }));
                me && me.resetload();
            }
            return this;
        },


        /**
         * 事件绑定
         * @return this
         */
        events: function() {
            var _this = this;
            // 模拟滚动
            $M('.mui-scroll-wrapper').scroll();

            $("#stormContent").on('singleTap', 'a', function() {
                var $elem = $(this),
                    id = $elem.data('id');
                var message = { "method": "getUrlById", "Id": id };
                window.webkit.messageHandlers.interOp.postMessage(message);
            });
            $(".pic-info").on('singleTap', 'a', function() {
                var $elem = $(this),
                    id = $elem.data('id');
                var message = { "method": "getUrlById", "Id": id };
                window.webkit.messageHandlers.interOp.postMessage(message);
            });

            return this;
        },
        readFileHomework: function() {
            var _this = this;
            var score = $('#test').val(),
                commentary = $('.commentary').text();
            var message = { "method": "readFileHomework", "score": String(score), "commentary": commentary };
            window.webkit.messageHandlers.interOp.postMessage(message);
        },
        helper: function() {
            var _this = this;
            template.config('escape', false);
            return this;
        },
        load: function() {
            var message = { "method": "load" };
            window.webkit.messageHandlers.interOp.postMessage(message);
            return this;
        },

        /**
         * 初始化
         * @return this
         */
        init: function() {
            var _this = this;
            // $('#test').val(this.score);
            _this.helper().load().events();
            return this;
        }
    };


    groupTaskPreview.init();
    window.groupTaskPreview = groupTaskPreview;

}(mui, Zepto));