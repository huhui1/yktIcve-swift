/**
 * 课件详细页面
 * @param {Object} $M => mui
 * @param {Object} $  => zepto
 * @name  zqyou
 * @date  2017-02-04
 * @return {Object}
 */
(function($M, $) {


    var courseware = {

        getdata: function(userId, openClassId, courseOpenId, cellId) {
            var _this = this,
                index = _this.type,
                templ = ["", "evaluate-list", "bbs-list", "note-list", "error-list"],
                elem = ["", ".bbs-evaluate", ".bbs-ask", ".bbs-note", ".bbs-error"];
            _this.userId = userId;
            _this.courseOpenId = courseOpenId;
            _this.cellId = cellId;
            _this.openClassId = openClassId;
            $http.post(app.teacherAPI.BBS.getCellBBSList, {
                courseOpenId: _this.courseOpenId,
                openClassId: _this.openClassId,
                cellId: _this.cellId,
                userId: _this.userId,
                activeType: _this.type
            }, function(r) {
                if (r.code == 1) {
                    _this.isMainTeacher = r.isMainTeacher;
                    $(elem[index]).removeClass('mui-hidden').html(template(templ[index], { list: r.list }));
                    if (r.list.length >= 4) {
                        $(elem[index]).parent().find('.load-more').removeClass('mui-hidden');
                    } else {
                        $(elem[index]).parent().find('.load-more').addClass('mui-hidden');
                    }
                    if (r.list.length) {
                        $(elem[index]).parent().find('.no-data').addClass('mui-hidden');
                    } else {
                        $(elem[index]).parent().find('.no-data').removeClass('mui-hidden');
                    }
                }
            });
            _this.me && _this.me.resetload();
            return this;
        },
        /**
         * 采纳
         */
        isadopt: function(Id, IsAccept) {
            var _this = this;
            $http.post(app.teacherAPI.BBS.acceptError, {
                Id: Id,
                IsAccept: IsAccept
            }, function(r) {
                if (r.code == 1) {
                    var message = { "method": "showMsg", "msg": r.msg };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                    _this.getdata(_this.userId, _this.openClassId, _this.courseOpenId, _this.cellId);
                } else {
                    var message = { "method": "showMsg", "msg": r.msg };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                }
            });
            return this;
        },

        /**
         * 事件绑定
         * @return this
         */
        events: function() {
            var _this = this;

            // 模拟滚动
            var $scroll = $M('.mui-scroll-wrapper').scroll();
            $('#mine-wrap').dropload({
                domUp: {
                    domClass: 'dropload-up',
                    domRefresh: '<div class="dropload-refresh">↓ 下拉可以刷新</div>',
                    domUpdate: '<div class="dropload-update">↑ 释放立即刷新</div>',
                    domLoad: '<div class="dropload-load"><span class="loading"></span> 正在刷新中...</div>'
                },
                loadUpFn: function(me) {
                    _this.me = me;
                    _this.load();
                    $scroll.scrollTo(0, 0);
                }
            });
            // 课件
            $('#btn-KJ').on('singleTap', function() {
                var message = { "method": "preview" };
                window.webkit.messageHandlers.interOp.postMessage(message);
            });
            //问答 笔记 纠错 问答详情
            $('.ask-note-error').on('singleTap', '.ask-info', function(e) {
                var $elem = $(this),
                    id = $elem.data('id'),
                    $target = $(e.target),
                    userid = $elem.data('userid'),
                    avator = $elem.data('avator'),
                    isAccept = $elem.data('isaccept'),
                    dataCreated = $elem.find('.time').text(),
                    content = $elem.find('.ask-content').html(),
                    useName = $elem.find('.usename').text(),
                    docJson = $elem.attr('data-docjson');

                if ($target.hasClass("isadopt") || $target.hasClass('icon-icon')) {
                    if (_this.isMainTeacher != 1) {
                        var message = { "method": "showMsg", "msg": "很遗憾！您不能采纳或取消采纳，请确保您是主持老师！" };
                        window.webkit.messageHandlers.interOp.postMessage(message);
                        return;
                    }
                    var _IsAccept = (isAccept == 1 ? 0 : 1);
                    _this.isadopt(id, _IsAccept);
                } else {
                    var bbsInfo = {
                        dataCreated: dataCreated,
                        content: content,
                        useName: useName,
                        avator: avator,
                        bbsId: id,
                        userId: userid,
                        docJson: docJson,
                        isAccept: isAccept,
                        isMainTeacher: _this.isMainTeacher
                    };
                    var message = { "method": "BBSDetails", "type": String(_this.type), "BBSId": id, "bbsInfo": JSON.stringify(bbsInfo) };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                }
            });
            //删除问答   评价 笔记 纠错
            $('.ask-note-error').on('singleTap', '.mui-btn-red', function() {
                var $elem = $(this),
                    id = $elem.data('id');
                $http.post(app.teacherAPI.BBS.deleteComment, {
                    Id: id,
                    userId: _this.userId,
                    activeType: _this.type
                }, function(r) {
                    if (r.code == 1) {
                        var message = { "method": "showMsg", "msg": "删除成功！" };
                        window.webkit.messageHandlers.interOp.postMessage(message);
                        _this.getdata(_this.userId, _this.openClassId, _this.courseOpenId, _this.cellId);
                    } else {
                        var message = { "method": "showMsg", "msg": r.msg };
                        window.webkit.messageHandlers.interOp.postMessage(message);
                    }
                });

            });
            //评价 笔记 纠错
            $(".ask-note-error-evaluate").on('singleTap', function() {
                var index = $(this).data('item'),
                    user = JSON.parse(app.data.get('$cloudClassUser'));
                _this.type = index;
                var elem = ["", ".bbs-evaluate", ".bbs-ask", ".bbs-note", ".bbs-error"];
                if ($(elem[index]).hasClass('mui-hidden')) {
                    _this.getdata(_this.userId, _this.openClassId, _this.courseOpenId, _this.cellId);
                }

            });

            $("#down-KJ").on('singleTap', function() {
                var message = { "method": "download" };
                window.webkit.messageHandlers.interOp.postMessage(message);
            });
            //学习统计
            $('.item5').on('singleTap', function() {
                var message = { "method": "studyed" };
                window.webkit.messageHandlers.interOp.postMessage(message);
            });
            //显示更多
            $('.load-more').on('singleTap', function() {
                var message = { "method": "load-more", "type": String(_this.type) };
                window.webkit.messageHandlers.interOp.postMessage(message);
            });
            //创建课件活动
            $('.oval-quotes').on('singleTap', function() {
                var message = { "method": "createBBS", "type": String(_this.type) };
                window.webkit.messageHandlers.interOp.postMessage(message);
            });

            return this;
        },
        load: function() {
            var message = { "method": "load" };
            window.webkit.messageHandlers.interOp.postMessage(message);
            return this;
        },
        reload: function() {
            var _this = this;
            _this.getdata(_this.userId, _this.openClassId, _this.courseOpenId, _this.cellId);
            if (_this.type == 1) {
                $('.item1').addClass('mui-active').siblings().removeClass('mui-active');
                $('#item1').addClass('mui-active').siblings().removeClass('mui-active');
            }
            return this;
        },
        /**
         * 模版方法扩展
         * @return {this}
         */
        helper: function() {

            //对字符串进行编码
            template.config('escape', false);
            //替换img标签
            template.helper('htmlDecode', function(val) {
                return $('<div/>').html(val.replace(/<img [^>]*src=['"]([^'"]+)[^>]*>/gi, "[图片]")).text();

            });
            template.helper('isActive', function(i, v) {
                if (i <= v) {
                    return 'active'
                }
            })
            template.helper('jsontostr', function(v) {
                return JSON.stringify(v);
            });
            return this;
        },
        /**
         * 初始化
         * @return this
         */
        init: function() {
            var _this = this;

            this.courseOpenId = "";
            this.openClassId = "";
            this.title = "";
            this.cellId = "";
            this.resourceUrl = "";
            this.externallinkurl = "";
            this.className = "";
            this.isMainTeacher = 0;
            this.type = 1;
            this.list = '';
            this.me = "";
            // 打开数据库
            _this.helper().load().events();
            return this;
        }
    };


    courseware.init();

    window.courseware = courseware

}(mui, Zepto));