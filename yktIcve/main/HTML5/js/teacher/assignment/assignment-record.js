/**
 * 作业答题记录列表
 * @param {Object} $M => mui
 * @param {Object} $  => zepto
 * @name  zqyou
 * @date  2017-04-12
 * @return {Object}
 */
(function($M, $) {


    var record = {
        /**
         * 获取作业作答记录信息
         * @return this
         */
        get: function(me) {
            var _this = this;
            $http.post(app.teacherAPI.Homework.getHomeworkStuRecord, {
                openClassId: _this.openClassId,
                homeworkId: _this.homeWorkId,
                homeworkTermTimeId: _this.homeworkTermTimeId,
                stuId: _this.stuId,
                userType: 0
            }, function(r) {
                if (r.code == 1) {
                    $('#mask').addClass('mui-hidden');
                    if (!me) {
                        if (r.stuHomeworkList.length == _this.times) {}
                        if (r.stuHomeworkList.length) {
                            var html = template('tmpl-record-list', { list: r.stuHomeworkList });
                            $('#content-record-list').html(html);
                        } else {
                            $('#content-record-list').html('<li ><h4 class="mui-ellipsis">暂无任何作答记录信息</h4></li>');
                        }
                    }
                    me && me.resetload();
                } else {
                    var message = { "method": "showMsg", "msg": r.msg };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                }

            });

            return this;
        },


        /**
         * 事件绑定
         * @return this
         */
        events: function() {
            var _this = this;

            // 模拟滚动
            $M('.mui-scroll-wrapper').scroll();

            $('#content-record-list').off('singleTap').on('singleTap', 'li.record', function() {
                var $elem = $(this),
                    homeworkStuId = $elem.data('homeworkstuid'),
                    score = $elem.data('score'),
                    state = $elem.data('state');
                var data = "",
                    extras = "";
                if (_this.ztWay == 3) {
                    extras = {
                        homeworkStuId: homeworkStuId,
                        homeworkTermTimeId: _this.homeworkTermTimeId,
                        homeWorkId: _this.homeWorkId,
                        courseOpenId: _this.courseOpenId,
                        openClassId: _this.openClassId,
                        stuId: _this.stuId,
                        score: score,
                        checked: _this.checked,
                        state: state
                    }
                } else {
                    extras = {
                        homeworkStuId: homeworkStuId,
                        homeworkTermTimeId: _this.homeworkTermTimeId,
                        homeWorkId: _this.homeWorkId,
                        courseOpenId: _this.courseOpenId,
                        openClassId: _this.openClassId,
                        stuId: _this.stuId,
                        checked: _this.checked
                    }
                }
                data = JSON.stringify(extras)
                var message = { "method": "preview", "data": data, "ztWay": String(_this.ztWay) };
                window.webkit.messageHandlers.interOp.postMessage(message);
            });
            return this;
        },
        load: function() {
            var message = { "method": "load" };
            window.webkit.messageHandlers.interOp.postMessage(message);
            return this;
        },
        getparameter: function(data, userId) {
            var _this = this;
            var data = JSON.parse(data);
            _this.courseOpenId = data["courseOpenId"];
            _this.openClassId = data["openClassId"];
            _this.homeWorkId = data["homeWorkId"];
            _this.homeworkStuId = data["homeworkStuId"];
            _this.homeworkTermTimeId = data["homeworkTermTimeId"]
            _this.stuId = data["stuId"]
            _this.ztWay = data["ztWay"]
            _this.checked = data["checked"] || false;
            this.get().events()
        },
        /**
         * 初始化
         * @return this
         */
        init: function() {
            var _this = this;
            this.courseOpenId = "";
            this.openClassId = "";
            this.homeWorkId = "";
            this.homeworkStuId = "";
            this.homeworkTermTimeId = "";
            this.stuId = "";
            this.ztWay = "";
            this.checked = "";
            _this.load().events();
            return this;
        }
    };
    record.init();
    window.record = record


}(mui, Zepto));