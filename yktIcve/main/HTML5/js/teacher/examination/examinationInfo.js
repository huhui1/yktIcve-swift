(function($M, $) {

    var examinationInfo = {
        /**
         * 获取总结信息
         * @return this
         */
        get: function() {
            var _this = this;

            $http.post(app.teacherAPI.OnlineExam.getReadStuList, {
                openClassId: _this.openClassId,
                examId: _this.examId,
                courseOpenId: _this.courseOpenId,
                examTermTimeId: _this.examTermTimeId,
                state: 2
            }, function(r) {
                if (r.code == 1) {
                    var html = template('tmpl-check-list', { state: 2, list: r.examStuList });
                    $('#check-list').html(html);
                } else {
                    var message = { "method": "showMsg", "msg": r.msg };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                }
            });

            $http.post(app.teacherAPI.OnlineExam.getReadStuList, {
                openClassId: _this.openClassId,
                examId: _this.examId,
                courseOpenId: _this.courseOpenId,
                examTermTimeId: _this.examTermTimeId,
                state: 1
            }, function(r) {
                if (r.code == 1) {
                    var html = template('tmpl-check-list', { state: 1, list: r.examStuList });
                    $('#uncheck-list').html(html);
                } else {
                    var message = { "method": "showMsg", "msg": r.msg };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                }
            });
            $http.post(app.teacherAPI.OnlineExam.getUnSubmitStuList, {
                openClassId: _this.openClassId,
                examId: _this.examId,
                courseOpenId: _this.courseOpenId,
                examTermTimeId: _this.examTermTimeId
            }, function(r) {
                if (r.code == 1) {
                    var html = template('tmpl-check-list', { state: 3, list: r.examStuList });
                    $('#unsubmit-list').html(html);
                } else {
                    var message = { "method": "showMsg", "msg": r.msg };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                }
            });
            return this;
        },
        /**
         * 事件绑定
         * @return this
         */
        events: function() {
            var _this = this;
            // 模拟滚动
            $M('.mui-scroll-wrapper').scroll();

            $("#uncheck-list").off('singleTap').on('singleTap', 'tr.italic', function(e) {
                var $elem = $(this);
                var extras = {
                    courseOpenId: _this.courseOpenId,
                    openClassId: _this.openClassId,
                    examStuId: $elem.data('examstuid'),
                    checked: false,
                    examTermTimeId: _this.examTermTimeId,
                    examId: _this.examId,
                    stuId: $elem.data('stuid')
                }
                var data = JSON.stringify(extras)
                if ($(e.target).hasClass('returnUncheck')) {
                    var message = { "method": "rejectUncheckExam", "data": data };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                } else {
                    var message = { "method": "examinationhandleRecord", "data": data };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                }

            });

            $("#check-list").off('singleTap').on('singleTap', 'tr.italic', function(e) {
                var $elem = $(this);
                var extras = {
                    courseOpenId: _this.courseOpenId,
                    openClassId: _this.openClassId,
                    examStuId: $elem.data('examstuid'),
                    checked: true,
                    examTermTimeId: _this.examTermTimeId,
                    examId: _this.examId,
                    stuId: $elem.data('stuid')
                }
                var data = JSON.stringify(extras)
                if ($(e.target).hasClass('returncheck')) {
                    var message = { "method": "rejectExam", "data": data };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                } else {
                    var message = { "method": "examinationhandleRecord", "data": data };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                }

            });
            $('#previewpaper').on('singleTap', function() {
                $M.openWindow({
                    url: '/view/teacher/examination/examinationpreview.html',
                    id: 'teacher-examination-examinationpreview',
                    extras: {
                        courseOpenId: _this.courseOpenId,
                        openClassId: _this.openClassId,
                        examId: _this.examId
                    }
                });
            });

            $("#unsubmit-list").off('singleTap').on('singleTap', 'tr.italic', function() {

                var message = { "method": "showMsg", "msg": "该学生尚未作答此试卷！" };
                window.webkit.messageHandlers.interOp.postMessage(message);
                // plus.nativeUI.toast("");
                // return;
            });
        },
        reload: function() {
            var _this = this;
            _this.get();
            return this;
        },
        /**
         * 扩展辅助方法
         * @return {this}
         */
        helper: function() {
            //对字符串进行编码
            template.config('escape', false);
            //时间格式转化
            template.helper('dateFormat', function(date, format) {
                if (date.indexOf("-") > -1) {
                    date = date.replace(new RegExp("-", "gm"), "/");
                }
                if (date == 0)
                    date = new Date();
                else if (date.indexOf("/Date(") > -1) {
                    var date = new Date(parseInt(date.replace("/Date(", "").replace(")/", "") - 8 * 60 * 60 * 1000, 10));
                } else
                    date = new Date(date);

                var map = {
                    "M": date.getMonth() + 1, //月份
                    "d": date.getDate(), //日
                    "h": date.getHours(), //小时
                    "m": date.getMinutes(), //分
                    "s": date.getSeconds(), //秒
                    "q": Math.floor((date.getMonth() + 3) / 3), //季度
                    "S": date.getMilliseconds() //毫秒
                };
                format = format.replace(/([yMdhmsqS])+/g, function(all, t) {
                    var v = map[t];
                    if (v !== undefined) {
                        if (all.length > 1) {
                            v = '0' + v;
                            v = v.substr(v.length - 2);
                        }
                        return v;
                    } else if (t === 'y') {
                        return (date.getFullYear() + '').substr(4 - all.length);
                    }
                    return all;
                });
                return format;
            });


            return this;
        },
        load: function() {
            var message = { "method": "load" };
            window.webkit.messageHandlers.interOp.postMessage(message);
            return this;
        },
        getparameter: function(courseOpenId, openClassId, examTermTimeId, examId) {
            var _this = this;
            _this.examTermTimeId = examTermTimeId;
            _this.openClassId = openClassId;
            _this.courseOpenId = courseOpenId;
            _this.examId = examId;
            _this.get();
        },
        /**
         * 初始化
         * @return this
         */
        init: function() {
            var _this = this;
            this.examTermTimeId = "";
            this.openClassId = "";
            this.courseOpenId = "";
            this.examId = "";
            this.type = 1;
            _this.helper().load().events();

            return this;
        }
    };


    examinationInfo.init();
    window.examinationInfo = examinationInfo

}(mui, Zepto));