/**
 * 登分考试
 * @param {Object} $M => mui
 * @param {Object} $  => zepto
 * @name  zqyou
 * @date  2017-07-8
 * @return {Object}
 */
(function($M, $) {
    $M.init({
        beforeback: function() {

        }
    });
    var markScore = {
        /**
         * 获取总结信息
         * @return this
         */
        get: function() {
            var _this = this;

            $http.post(app.teacherAPI.OnlineExam.getReadStuList, {
                openClassId: _this.openClassId,
                examId: _this.examId,
                courseOpenId: _this.courseOpenId,
                examTermTimeId: _this.examTermTimeId,
                state: 2
            }, function(r) {
                if (r.code == 1) {
                    var html = template('tmpl-check-list', { state: 2, list: r.examStuList });
                    $('#check-list').html(html);
                    $('#mask').addClass('mui-hidden');
                }
            });
            $http.post(app.teacherAPI.OnlineExam.getReadStuList, {
                openClassId: _this.openClassId,
                examId: _this.examId,
                courseOpenId: _this.courseOpenId,
                examTermTimeId: _this.examTermTimeId,
                state: 1
            }, function(r) {
                if (r.code == 1) {
                    var html = template('tmpl-check-list', { state: 1, list: r.examStuList });
                    $('#unsubmit-list').html(html);
                }
            });
            return this;
        },
        /**
         * 事件绑定
         * @return this
         */
        events: function() {
            var _this = this;
            // 模拟滚动
            $M('.mui-scroll-wrapper').scroll();
            $('#item_1').on('touchstart', function() {
                var $elem = $("#unsubmit-list");
                if (!$elem.children().length) {
                    $('#mask').removeClass('mui-hidden');
                    $http.post(app.teacherAPI.OnlineExam.getReadStuList, {
                        openClassId: _this.openClassId,
                        examId: _this.examId,
                        courseOpenId: _this.courseOpenId,
                        examTermTimeId: _this.examTermTimeId,
                        state: 1
                    }, function(r) {
                        if (r.code == 1) {
                            var html = template('tmpl-check-list', { state: 1, list: r.examStuList });
                            $('#unsubmit-list').html(html);
                        }
                    });
                }
            });
            $('#item_3').on('touchstart', function() {
                $('#mask').removeClass('mui-hidden');
                var $elem = $("#check-list"),
                    callback = function() {
                        $http.post(app.teacherAPI.OnlineExam.getReadStuList, {
                            openClassId: _this.openClassId,
                            examId: _this.examId,
                            courseOpenId: _this.courseOpenId,
                            examTermTimeId: _this.examTermTimeId,
                            state: 2
                        }, function(r) {
                            if (r.code == 1) {
                                var html = template('tmpl-check-list', { state: 2, list: r.examStuList });
                                $('#check-list').html(html);
                            }
                        });
                    };
                if (!$elem.children().length) {
                    callback();
                }
                $('#mask').addClass('mui-hidden');
            });
            $("#unsubmit-list,#check-list").off('singleTap').on('singleTap', '.italic', function() {
                var $elem = $(this),
                    stuId = $elem.data('stuid'),
                    examStuId = $elem.data('examstuid');

                var data = {
                    stuId: stuId,
                    examStuId: examStuId
                }
                var message = { "method": "setExamScore", "data": JSON.stringify(data) };
                window.webkit.messageHandlers.interOp.postMessage(message);
            });
            window.addEventListener("reload", function() {
                _this.get();
            });
        },
        /**
         * 扩展辅助方法
         * @return {this}
         */
        helper: function() {
            //对字符串进行编码
            template.config('escape', false);
            //时间格式转化
            template.helper('dateFormat', function(date, format) {
                if (date.indexOf("-") > -1) {
                    date = date.replace(new RegExp("-", "gm"), "/");
                }
                if (date == 0)
                    date = new Date();
                else if (date.indexOf("/Date(") > -1) {
                    var date = new Date(parseInt(date.replace("/Date(", "").replace(")/", "") - 8 * 60 * 60 * 1000, 10));
                } else
                    date = new Date(date);

                var map = {
                    "M": date.getMonth() + 1, //月份
                    "d": date.getDate(), //日
                    "h": date.getHours(), //小时
                    "m": date.getMinutes(), //分
                    "s": date.getSeconds(), //秒
                    "q": Math.floor((date.getMonth() + 3) / 3), //季度
                    "S": date.getMilliseconds() //毫秒
                };
                format = format.replace(/([yMdhmsqS])+/g, function(all, t) {
                    var v = map[t];
                    if (v !== undefined) {
                        if (all.length > 1) {
                            v = '0' + v;
                            v = v.substr(v.length - 2);
                        }
                        return v;
                    } else if (t === 'y') {
                        return (date.getFullYear() + '').substr(4 - all.length);
                    }
                    return all;
                });
                return format;
            });


            return this;
        },
        load: function() {
            var message = { "method": "load" };
            window.webkit.messageHandlers.interOp.postMessage(message);
            return this;
        },
        getparameter: function(courseOpenId, openClassId, examTermTimeId, examId) {
            var _this = this;
            _this.examTermTimeId = examTermTimeId;
            _this.openClassId = openClassId;
            _this.courseOpenId = courseOpenId;
            _this.examId = examId;
            _this.get().events()
        },
        /**
         * 初始化
         * @return this
         */
        init: function() {
            var _this = this;
            this.examTermTimeId = "";
            this.openClassId = "";
            this.courseOpenId = "";
            this.examId = "";
            _this.helper().load();

            return this;
        }
    };


    markScore.init();
    window.markScore = markScore

}(mui, Zepto));