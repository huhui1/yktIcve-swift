/**
 * 考试结果
 * @param {Object} $M => mui
 * @param {Object} $  => zepto
 * @name  zqyou
 * @date  2017-07-11
 * @return {Object}
 */
(function($M, $) {

    var examinationhandle = {
        /**
         * 获取题目
         * @return {this}
         */
        get: function() {
            var _this = this,
                letter = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];
            $mask = $('#mask');

            $http.post(app.teacherAPI.OnlineExam.getStuExamPreview, {
                courseOpenId: _this.courseOpenId,
                openClassId: _this.openClassId,
                examId: _this.examId,
                examStuId: _this.examStuId,
                stuId: _this.stuId
            }, function(r) {
                if (r.code > 0) {
                    _this.canRead = r.data.canRead;
                    if (_this.canRead == 0) {

                        var message = { "method": "showMsg", "msg": "批阅时间已截止" };
                        window.webkit.messageHandlers.interOp.postMessage(message);
                    }
                    // $('h1.mui-title').text(r.data.examTitle);

                    var numtostr = ["一", "二", "三", "四", "五", "六", "七", "八", "九", "十"];

                    if (r.data.ztWay == 2 || r.data.ztWay == 4) {
                        $.each(r.data.questions, function(i, v) {
                            if (v.dataJson == "") {
                                v.dataJson = null;
                            }
                            if (v.questionType == 3) {
                                v.dataJson = '[{ "SortOrder": "错误", "Content": "错误", "IsAnswer": "" }, { "SortOrder": "正确", "Content": "正确", "IsAnswer": "" }]';
                            }
                            if (v.questionType == 8 || v.questionType == 9 || v.questionType == 11) {
                                $.each(v.subQuestionList, function(childindex, childval) {
                                    if (childval.dataJson === "") {
                                        childval.dataJson = null;
                                    }
                                    var datajson = JSON.parse(childval.dataJson);
                                    v.subQuestionList[childindex].dataJson = datajson;

                                });
                            }

                            if (v.questionType < 12) {
                                _this.momentList.push({
                                    id: v.questionId,
                                    paperStuQuestionId: v.paperStuQuestionId,
                                    fullScore: v.questionScore,
                                    title: v.title,
                                    commentary: v.commentary,
                                    commentaryFileData: v.commentaryFileData,
                                    getScore: v.getScore,
                                    checked: _this.checked,
                                    content: v.questionType > 7 ? v.subQuestionList : JSON.parse(v.dataJson == '' ? null : v.dataJson),
                                    answer: v.answer,
                                    type: v.questionType,
                                    isRight: v.isRight,
                                    userAnswer: v.studentAnswer,
                                    analysis: v.resultAnalysis,
                                    queTypeName: v.queTypeName,
                                    optionAnswer: v.questionType == 7 ? JSON.parse(v.answer) : ''
                                });
                            }
                        });
                    } else {
                        $.each(r.data.questions, function(i, v) {
                            $.each(v.SubQuestions, function(subindex, subval) {
                                if (subval.questionType == 8 || subval.questionType == 9 || subval.questionType == 11) {
                                    $.each(subval.subQuestionList, function(childindex, childval) {
                                        if (childval.dataJson === "") {
                                            childval.dataJson = null;
                                        }
                                        var datajson = JSON.parse(childval.dataJson);
                                        subval.subQuestionList[childindex].dataJson = datajson;

                                    });
                                }
                                if (subval.dataJson == "") {
                                    subval.dataJson = null;
                                }
                                if (subval.questionType == 3) {
                                    subval.dataJson = '[{ "SortOrder": "错误", "Content": "错误", "IsAnswer": "" }, { "SortOrder": "正确", "Content": "正确", "IsAnswer": "" }]';
                                }

                                if (subval.questionType < 12) {

                                    _this.momentList.push({
                                        id: subval.questionId,
                                        paperStuQuestionId: subval.paperStuQuestionId,
                                        fullScore: subval.questionScore,
                                        answer: subval.answer,
                                        title: subval.title,
                                        getScore: subval.getScore,
                                        content: subval.questionType > 7 ? subval.subQuestionList : JSON.parse(subval.dataJson == '' ? null : subval.dataJson),
                                        type: subval.questionType,
                                        commentary: subval.commentary,
                                        commentaryFileData: subval.commentaryFileData,
                                        checked: _this.checked,
                                        userAnswer: subval.studentAnswer,
                                        ztWay: 2,
                                        queTypeName: subval.queTypeName,
                                        analysis: subval.resultAnalysis,
                                        bigQuestionTitle: subindex == 0 ? numtostr[i] + "." + v.Title : "",
                                        totalScore: v.TotalScore,
                                        optionAnswer: subval.questionType == 7 ? JSON.parse(subval.answer) : ''
                                    });
                                }

                            });
                        });
                    }

                    $("#nowindex").text(_this.start + 1.0);
                    $("#total").text(_this.momentList.length);
                    $('#questioninfo').html(template(_this.templ[_this.momentList[_this.start].type], { question: _this.momentList[_this.start], index: (_this.start + 1.0), checked: _this.checked, canRead: _this.canRead }));
                    if (_this.checked) {
                        $('#questioninfo .add-pic').addClass('mui-hidden');
                        $('#questioninfo .icon-close').addClass('mui-hidden');
                    }
                    $('i.currentNUM').text("1");
                    $('i.totalNUM').text(_this.momentList.length);

                } else {
                    var message = { "method": "showMsg", "msg": r.msg };
                    window.webkit.messageHandlers.interOp.postMessage(message);

                }
                $('#mask').addClass('hide');
            });

            return this;
        },
        /**add-pic
         * 每题批改
         * @return{this}
         */
        correcting: function(paperStuQuestionId, getScore, commentary, commentaryFileData, index, isSave) {
            var _this = this;
            $http.post(app.teacherAPI.OnlineExam.saveStuExamQuestionScore, {
                paperStuQuestionId: paperStuQuestionId,
                getScore: getScore,
                commentary: commentary,
                commentaryFileData: JSON.stringify(commentaryFileData),
                sourceType: 3
            }, function(r) {
                if (r.code == 1) {
                    _this.momentList[index].commentaryFileData = r.commentaryFileData;
                    _this.momentList[index].commentary = commentary;
                    _this.momentList[index].getScore = getScore;
                    if (isSave && _this.canRead == 1) {
                        var message = { "method": "sunbmitcorrecting" };
                        window.webkit.messageHandlers.interOp.postMessage(message);
                    }
                } else {
                    var message = { "method": "showMsg", "msg": r.msg };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                }
            });
            return this;
        },


        /**
         * 事件绑定
         * @return {this}
         */
        events: function() {
            var _this = this,
                DOM = $('#questioninfo');


            var $scroll = $M('.mui-scroll-wrapper').scroll();
            DOM.on('singleTap', 'img', function() {
                var $elem = $(this),
                    id = $elem.data('id'),
                    url = $elem.attr('src');
                if ($elem.hasClass('preview') && id) {
                    var message = { "method": "getUrlById", "Id": id };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                } else if ($elem.hasClass('video')) {
                    if ($elem.data('url')) {
                        var message = { "method": "getFileInfoByUrl", "url": $elem.data('url') };
                        window.webkit.messageHandlers.interOp.postMessage(message);
                    }
                } else {
                    if (url) {
                        message = { "method": "previewImg", "url": url };
                        window.webkit.messageHandlers.interOp.postMessage(message);
                    }
                }
            });
            $("#rejected").on('singleTap', function(e) {
                var message = { "method": "rejected" };
                window.webkit.messageHandlers.interOp.postMessage(message);
            });
            $("#save").on('singleTap', function(e) {
                _this.examines(true)
            });
            $('#down-question').on('singleTap', function(e) {
                if ((_this.start + 1.0) == _this.momentList.length) {
                    var message = { "method": "showMsg", "msg": "已是最后一题！" };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                    return
                }
                _this.examines();

                _this.start += 1.0;
                $("#nowindex").text(_this.start + 1.0);
                $('#questioninfo').html(template(_this.templ[_this.momentList[_this.start].type], { question: _this.momentList[_this.start], index: (_this.start + 1.0), checked: _this.checked, canRead: _this.canRead }));
                $scroll.scrollTo(0, 0);

                $('i.currentNUM').text(_this.start + 1.0);
                $('i.totalNUM').text(_this.momentList.length);
            });
            $('#up-question').on('singleTap', function(e) {
                if (_this.start == 0) {
                    var message = { "method": "showMsg", "msg": "已经是第一题" };
                    window.webkit.messageHandlers.interOp.postMessage(message);

                    return;
                }
                _this.examines();
                _this.start -= 1.0;
                $("#nowindex").text(_this.start + 1.0);
                $('#questioninfo').html(template(_this.templ[_this.momentList[_this.start].type], { question: _this.momentList[_this.start], index: (_this.start + 1.0), checked: _this.checked, canRead: _this.canRead }));
                $('#down-question').removeClass('save').text('下一题');
                $scroll.scrollTo(0, 0);
                $('i.currentNUM').text(_this.start + 1.0);
                $('i.totalNUM').text(_this.momentList.length);

            });

            //批改赋值
            DOM.on('input propertychange').bind('input propertychange', '.input', function() {
                try {
                    var $elem = $(this),
                        socer = $elem.val() || -99,
                        paperStuQuestionId = $elem.data('paperstuquestionid'),
                        maxTotal = $elem.data('maxtotal'),
                        total = Number(socer);
                } catch (error) {

                    var message = { "method": "showMsg", "msg": "请输入数字！" };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                    $elem.val(0);
                    return;
                }
                if (socer == -99) {
                    var message = { "method": "showMsg", "msg": "请输入数字！" };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                    $elem.val(0);
                    return;
                }
                if (maxTotal < total) {
                    var message = { "method": "showMsg", "msg": "已超出最大分！默认取当前最大分" };
                    window.webkit.messageHandlers.interOp.postMessage(message);

                    $elem.val(maxTotal);
                }
                // _this.correcting(paperStuQuestionId, $elem.val(), "无");


            });
            DOM.on('singleTap', 'a', function(e) {
                var $elem = $(this);
                if ($elem.data('url')) {
                    var message = { "method": "getFileInfoByUrl", "url": $elem.data('url') };
                    window.webkit.messageHandlers.interOp.postMessage(message);
                }

            });

            DOM.on('singleTap', 'i.delimg', function(e) {
                var $elem = $(this);
                $elem.parent().remove();
                if (!_this.checked) {
                    $('.add-pic').removeClass('mui-hidden');
                }
            })
            $(".ui-Mexam-view").on('singleTap', '.ui-Mexam-answer', function(e) {
                var $elem = $(this),
                    selectclass = 'li.' + $elem.next('li').attr('class').trim(),
                    $elemspan = $elem.find('.arrow');
                if ($elemspan.hasClass('up')) {
                    $elemspan.removeClass('up').addClass('down');
                } else {
                    $elemspan.removeClass('down').addClass('up');
                }
                $(selectclass).toggle();
            });
            DOM.on('singleTap', '.add-pic', function(e) {
                var message = { "method": "uploadImg" };
                window.webkit.messageHandlers.interOp.postMessage(message);
            });

            return this;
        },
        examines: function(isSave) {
            var _this = this;
            if (_this.momentList[_this.start].type == 5 || _this.momentList[_this.start].type == 6 || _this.momentList[_this.start].type == 10) {
                var commentaryFileData = [];
                var $commentaryFile = $('.fujiandoc').find('img');
                $.each($commentaryFile, function(i, v) {
                    commentaryFileData.push({
                        DocTitle: 'ios' + i,
                        DocSize: $(v).data('size'),
                        Url: $(v).data('url'),
                        Md5: $(v).data('md5'),
                        DocType: $(v).data('doctype')
                    });
                });
                if (_this.canRead == 1) {
                    _this.correcting($('.getscoer').data('paperstuquestionid'), $('.getscoer').val(), $('.commentarytext').text(), commentaryFileData, _this.start, isSave);

                }
            } else if (isSave && _this.canRead == 1) {
                var message = { "method": "sunbmitcorrecting" };
                window.webkit.messageHandlers.interOp.postMessage(message);
            }
            return this;
        },
        /**
         * 单选处理
         */
        danx: function($elem) {
            var _this = this,
                answer = $elem.data('answer');
            $elem.parent().addClass('right').siblings().removeClass('right');
            _this.momentList[_this.start].userAnswer = answer;

            return this;
        },

        uploadImg: function(t) {
            var _this = this;
            $("#questioninfo .add-pic").before('<div style="display: inline-block; position: relative; padding: 0px;"><img class="uploaded-pic seeImg" width="70" height="70" data-DocType= "jpg" data-size=' + t.size + ' data-md5=' + t.md5 + ' data-url=' + t.url + ' src="' + t.ossOriUrl + '"><i class="iconfont delimg icon-close"></i></div>');

            setTimeout(function() {
                var list = $(".fujiandoc").find('img');
                if (list.length > 8) {
                    $('.add-pic').addClass('mui-hidden');
                }
            }, 100);


            return this;
        },
        //上传视频
        uploadvideo: function(t) {
            var _this = this;

            $("#questioninfo .add-pic").before('<div  style="display: inline-block; position: relative;padding: 0px;"><img class="uploaded-pic video" width="70" height="70" data-doctype="mp4" data-videourl=' + t.ossOriUrl + '    data-md5=' + t.md5 + ' data-size=' + t.size + ' data-url=' + t.url + ' src="../../../img/video.jpg"><i class="iconfont delimg icon-close"></i></div>');
            setTimeout(function() {
                var list = $(".pic-info").find('img');
                if (list.length > 8) {
                    $('.add-pic').addClass('mui-hidden');
                }
            }, 100);
            return this;
        },
        helper: function() {

            var _this = this,
                letter = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];
            //对字符串进行编码
            template.config('escape', false);
            //替换img标签
            template.helper('questionType', function(i) {
                var type = ['', '单选题', '多选题', '判断题', '填空题', '填空题', '问答题', '匹配题', '阅读理解', '完形填空', '文件作答题', '视听题'];
                return type[Number(i)];
            });
            template.helper('itoCharAB', function(i) {

                return letter[Number(i)];
            });
            //填空题答案处理
            template.helper('TKAswer', function(i, userAnswer) {
                try {
                    var array_userAnswer = JSON.parse(userAnswer)
                    return array_userAnswer[i]["Content"]
                } catch (error) {
                    return ""
                }
            });
            template.helper('answertoTKstr', function(val) {
                if (!val) {
                    return;
                }
                var answer = [];
                $.each(JSON.parse(val), function(i, v) {
                    answer.push(v.Content);
                });
                return answer.join();
            });
            template.helper('answertoCharAB', function(val, type) {
                if (type == 3) {
                    return val == 1 ? "正确" : "错误";
                }
                var arr = [];
                $.each(val.split(","), function(i, v) {
                    var moometstr = letter[v];
                    arr[i] = moometstr == undefined ? v : moometstr;
                });
                return arr.join();
            });
            template.helper('contentPipeiSelect', function(i, index, val) {
                if (val === "") {
                    return false;
                }
                var array_userAnswer = String(val).split(',');
                if (String(i) == array_userAnswer[index]) {
                    return true
                } else {
                    false;
                }

            });
            template.helper('wendaAnswerImg', function(val) {
                if (!val) {
                    return;
                }
                var dataUser = val.split(','),
                    $image = '';
                $.each(dataUser, function(i, v) {
                    $image += '<img class="delimg" src="' + v + '">';
                });
                return $image
            });
            template.helper('wenjianJson', function(val) {
                if (!val) {
                    val = null;
                }
                return JSON.parse(val)
            });
            template.helper('iscorrect', function(i, answer, userAnswer) {
                if (!userAnswer) {
                    return '';
                }
                var array_userAnswer = userAnswer.split(','),
                    array_answer = answer.split(',');
                if ($.inArray(String(i), array_userAnswer) > -1) {
                    if ($.inArray(String(i), array_answer) > -1) {
                        return 'right';
                    } else {
                        return 'error';
                    }
                }
                return "";
            });
            return this;
        },

        load: function() {
            var message = { "method": "load" };
            window.webkit.messageHandlers.interOp.postMessage(message);
            return this;
        },
        getparameter: function(data) {
            var _this = this;
            _this.stuId = data["stuId"];
            _this.openClassId = data["openClassId"];
            _this.courseOpenId = data["courseOpenId"];
            _this.examId = data["examId"];
            _this.examStuId = data["examStuId"];
            _this.examTermTimeId = data["examTermTimeId"]
            _this.get().events()
        },
        /**
         * 载入 
         * @return {null}
         */
        init: function() {
            this.stuId = "";
            this.checked = false;
            this.openClassId = "";
            this.courseOpenId = "";
            this.examId = "";
            this.examStuId = "";
            this.examTermTimeId = "";
            this.uniqueId = '';
            this.paperStructUnique = '';
            this.templ = ['question-danx-duox-pand', 'question-danx-duox-pand', 'question-danx-duox-pand', 'question-danx-duox-pand', 'question-tiankong', 'question-tiankong', 'question-wenda', 'question-pipei', 'question-yuedu', 'question-yuedu', 'question-wenjian', 'question-yuedu'];
            this.md5 = [];
            this.parentelem = '';
            //上传图片配置信息存储
            this.uploadUrl = '';
            this.prefixUrl = '';
            //临时容器
            this.momentList = [];
            this.start = 0;
            this.canRead = 0
            this.isSend = false;
            this.helper().load();

            return this;
        }
    };


    examinationhandle.init();
    window.examinationhandle = examinationhandle

}(mui, Zepto));