//
//  geTuiSendController.swift
//  66iclasscloud
//
//  Created by 尤增强 on 2017/12/29.
//  Copyright © 2017年 zqy. All rights reserved.
//

import UIKit
import Alamofire
import SwiftyJSON

class geTuiSendController: NSObject {

    static let share = geTuiSendController()

    //  群发
    func sendGTMSG(str:String ,userId:String ,openClassIds:String){
        let dict = ["openClassIds":openClassIds,"userId":userId,"data":str]

        Alamofire.request(appAPI.GT_sendGTMsg, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in

            if let value = response.result.value {
                let json = JSON(value)
                if json["code"] == 1{
                    print("个推发送成功");
                }else{
                    print("个推发送失败\(json["msg"])");
                }
            }
        }
    }

    //单独
    func sendGTMsgToUser(data:String,creatorId:String){
        let dict = ["data":data,"userId":creatorId]
        Alamofire.request(appAPI.GT_sendGTMsgToUser, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in

            if let value = response.result.value {
                let json = JSON(value);
                if json["code"] == 1{
                    print("stu个推发送成功")
                }else{
                    print("stu个推发送\(json["msg"])")
                }
            }else{
                 print("stu个推发送失败")
            }
        }
    }


    //mark 接收到消息的处理

    func  payloadMsgAnalysis(payloadMsg:String){

       

        let data = JSON.init(parseJSON: payloadMsg)

        let alertController = UIAlertController(title: "课堂活动",
                                                message: data["title"].stringValue,
                                                preferredStyle: .alert)
        let cancelAction = UIAlertAction(title: "取消", style: .cancel, handler: nil)
        let okAction = UIAlertAction(title: "参加", style: .default, handler: {
            action in
            self.getStuClassId(data:data)
        })
        alertController.addAction(cancelAction)
        alertController.addAction(okAction)
        NavigatorService.modelToPage(alertController, animated: true, completion: {})
    }

    //获取学生班级

    func  getStuClassId(data:JSON){

        let dict = ["openClassIds":data["openClassIds"].stringValue,
                    "courseOpenId":data["courseOpenId"].stringValue,
                    "userId":Account.defaultAccount.id!] as [String : Any]

        Alamofire.request(appAPI.FaceTeach_getStuClassId, method: .post, parameters: dict, encoding: URLEncoding.default).responseJSON { response in
            if let value = response.result.value {
                let r = JSON(value)
                if r["code"] == 1{

                    self.payloadMsgAnalyHandle(data: data,openClassId:r["openClassId"].stringValue)
                }else{
                    ZKProgressHUD.showMessage(r["msg"].string)
                }

            }else{
                ZKProgressHUD.showMessage("网络异常请稍后再试！");
            }
        }
    }

    //活动处理
    func payloadMsgAnalyHandle(data:JSON,openClassId:String){
//        switch data["actionType"].stringValue {
//        case "signing":
//            if(data["signType"].intValue == 1){
//                let vc = signingView()
//                vc.activityId = data["faceId"].stringValue
//                vc.signId = data["actId"].stringValue
//                vc.creatorId = data["creatorId"].stringValue
//                vc.courseOpenId = data["courseOpenId"].stringValue
//                vc.openClassId = openClassId
//                vc.signType =  data["signType"].intValue
//                vc.hidesBottomBarWhenPushed = true
//                vc.state = 2
//                NavigatorService.navigateToPage(vc, animated: true)
//            }else {
//                let vc = signlockerView()
//                vc.activityId = data["faceId"].stringValue
//                vc.signId = data["actId"].stringValue
//                vc.creatorId = data["creatorId"].stringValue
//                vc.courseOpenId = data["courseOpenId"].stringValue
//                vc.openClassId = openClassId
//                vc.gesture = data["signContent"].stringValue
//                vc.hidesBottomBarWhenPushed = true
//
//                NavigatorService.navigateToPage(vc, animated: true)
//
//            }
//        case "brainstorming":
//            let vc = stuSubmitBrainstromView()
//            vc.activityId = data["faceId"].stringValue
//            vc.brainStromingId = data["actId"].stringValue
//            vc.creatorId = data["creatorId"].stringValue
//            vc.courseOpenId = data["courseOpenId"].stringValue
//            vc.openClassId = openClassId
//            vc.hidesBottomBarWhenPushed = true
//            NavigatorService.navigateToPage(vc, animated: true)
//        case "discussing":
//           let vc = stuDisscussView()
//           vc.activityId = data["faceId"].stringValue
//           vc.discussId = data["actId"].stringValue
//           vc.creatorId = data["creatorId"].stringValue
//           vc.courseOpenId = data["courseOpenId"].stringValue
//           vc.openClassId = openClassId
//           vc.hidesBottomBarWhenPushed = true
//           NavigatorService.navigateToPage(vc, animated: true)
//        case "examing":
//            let vc = stuTestingView()
//            vc.activityId = data["faceId"].stringValue
//            vc.examId = data["actId"].stringValue
//            vc.creatorId = data["creatorId"].stringValue
//            vc.courseOpenId = data["courseOpenId"].stringValue
//            vc.openClassId = openClassId
//            vc.hidesBottomBarWhenPushed = true
//            NavigatorService.navigateToPage(vc, animated: true)
//        case "voting":
//            let vc = voteIngView()
//            vc.activityId = data["faceId"].stringValue
//            vc.voteId = data["actId"].stringValue
//            vc.courseOpenId = data["courseOpenId"].stringValue
//            vc.openClassId = openClassId
//            vc.hidesBottomBarWhenPushed = true
//            NavigatorService.navigateToPage(vc, animated: true)
//        case "responding":
//            let vc = stu_respondingView()
//            vc.activityId = data["faceId"].stringValue
//            vc.quizId = data["actId"].stringValue
//            vc.courseOpenId = data["courseOpenId"].stringValue
//            vc.openClassId = openClassId
//            vc.hidesBottomBarWhenPushed = true
//            NavigatorService.navigateToPage(vc, animated: true)
//        default:
//            print(11)
//        }

    }
    /*
    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        // Get the new view controller using segue.destinationViewController.
        // Pass the selected object to the new view controller.
    }
    */

}
